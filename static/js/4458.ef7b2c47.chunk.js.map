{"version":3,"file":"static/js/4458.ef7b2c47.chunk.js","mappings":"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","sources":["components/actionMenu/ActionMenu.js","components/atoms/Toast.js","components/atoms/TooltipHover.js","pages/projects/TaskPopup.js","utils/formatDate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ActionMenu.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ActionMenu = ({ menuOptions, taskId, status, action, progress }) => {\r\n  const [actionMenu, setActionMenu] = useState(false);\r\n\r\n  const deleteTask = () => {\r\n    setActionMenu(false);\r\n    action();\r\n  };\r\n\r\n  const changeStatusTask = (setStatus) => {\r\n    action(taskId, setStatus);\r\n    setActionMenu(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"action\">\r\n      <button\r\n        type=\"button\"\r\n        className={`btn-option ${actionMenu && 'active'}`}\r\n        onClick={() => setActionMenu(true)}\r\n      >\r\n        <MaterialIcon icon=\"more_vert\" />\r\n      </button>\r\n      {actionMenu && (\r\n        <>\r\n          <div className=\"action-overlay\" onClick={() => setActionMenu(false)} />\r\n          <div className=\"action-options\">\r\n            {menuOptions?.options.map((op) => (\r\n              <div key={op.id}>\r\n                {op.type === 'button' ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-muted\"\r\n                    onClick={() => changeStatusTask(op.to)}\r\n                    disabled={\r\n                      op.to === status ||\r\n                      (op.to === 2 && status === 0) ||\r\n                      (op.to === 2 && status === 4) ||\r\n                      (op.to === 0 && status === 4) ||\r\n                      (op.to === 2 && progress !== 100)\r\n                    }\r\n                  >\r\n                    {op.icon}\r\n                    {op.label}\r\n                  </button>\r\n                ) : op.type === 'link' ? (\r\n                  <Link className=\"text-muted\" onClick={op.to}>\r\n                    {op.icon}\r\n                    {op.label}\r\n                  </Link>\r\n                ) : (\r\n                  <div className=\"action-del\">\r\n                    <button type=\"button\" onClick={deleteTask}>\r\n                      <MaterialIcon icon=\"delete_outline\" />\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nActionMenu.propTypes = {\r\n  menuOptions: PropTypes.object,\r\n  taskId: PropTypes.number,\r\n  status: PropTypes.number,\r\n  action: PropTypes.func,\r\n  progress: PropTypes.number,\r\n};\r\n\r\nexport default ActionMenu;\r\n","import React from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst notify = (type, msg) =>\r\n  type === 'success'\r\n    ? toast.success(msg)\r\n    : type === 'create'\r\n    ? toast(msg, {\r\n        icon: '🤗',\r\n      })\r\n    : type === 'start'\r\n    ? toast('Lets get started, cheer up!', {\r\n        icon: '💪',\r\n      })\r\n    : type === 'done'\r\n    ? toast('Horeee, task done!', {\r\n        icon: '👏',\r\n      })\r\n    : toast.error(msg);\r\n\r\nexport const Toast = () => {\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        className: '',\r\n        style: {\r\n          //   border: '1px solid #713200',\r\n          //   padding: '16px',\r\n          //   color: '#713200',\r\n          //   width: '800px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const alert = (type, msg) => {\r\n  notify(type, msg);\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nconst TooltipHover = (props) => {\r\n  const { title, id } = props;\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  return (\r\n    <span>\r\n      <Tooltip placement=\"top\" isOpen={tooltipOpen} target={`tooltip-${id}`} toggle={toggle}>\r\n        {title}\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n};\r\n\r\nTooltipHover.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default TooltipHover;\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport './TaskPopup.scss';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { Link } from 'react-router-dom';\r\nimport ActionMenu from '../../components/actionMenu/ActionMenu';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\n// const sortByDate = (data) => data.sort(({ date: a }, { date: b }) => (a < b ? -1 : a > b ? 1 : 0));\r\n\r\nconst sortHistoryByDate = (data) => {\r\n  return data?.sort((a, b) => a.created_at.localeCompare(b.created_at));\r\n};\r\n\r\nconst TaskPopup = ({ modal, setModal, toggle, task, refetch, mode }) => {\r\n  const { auth } = useAuth();\r\n  const [history, setHistory] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [taskTemp, setTaskTemp] = useState('');\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [listEmployee, setListEmploye] = useState();\r\n  const [emModal, setEmModal] = useState(false);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [comments, setComments] = useState();\r\n  const [postComment, setPostComment] = useState();\r\n  const [commentSending, setCommentSending] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [popContent, setPopContent] = useState();\r\n\r\n  const inputCommentRef = useRef();\r\n\r\n  const api = useAxios();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const assigneModal = () => {\r\n    setEmModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTaskTemp({\r\n      approval_id: task?.approval_id,\r\n      task_title: task?.task_title,\r\n      task_desc: task?.task_desc,\r\n      task_progress: task?.task_progress,\r\n      start_date: task?.start_date,\r\n      end_date: task?.end_date,\r\n    });\r\n\r\n    // setAssignedEmployees([\r\n    //   {\r\n    //     label: task.first_name,\r\n    //     value: task.employe_id,\r\n    //   },\r\n    // ]);\r\n    if (task?.pics) {\r\n      setAssignedEmployees(\r\n        task.pics.map((pic) => ({\r\n          label: pic.first_name,\r\n          value: pic.employe_id,\r\n        })),\r\n      );\r\n    }\r\n\r\n    async function fetchHistory() {\r\n      await api.get(`api/task/history/${task?.task_id}`).then((res) => {\r\n        setHistory(res.data.data);\r\n      });\r\n    }\r\n\r\n    async function fetchComments() {\r\n      await api.get(`api/comment/${task?.task_id}`).then((res) => setComments(res.data.data));\r\n    }\r\n\r\n    fetchComments();\r\n    fetchHistory();\r\n  }, [task]);\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list`)\r\n        .then((res) => setListEmploye(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPopContent(history?.concat(comments));\r\n  }, [history, comments]);\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setUpdating(true);\r\n    taskTemp.task_pic = assignedEmployees;\r\n\r\n    if (files) {\r\n      taskTemp.files = files;\r\n    }\r\n    await api.patch(`api/task/${task?.task_id}`, taskTemp).then(() => {\r\n      alert('success', 'Task has been updated.');\r\n    });\r\n    setModal(false);\r\n    refetch();\r\n    setUpdating(false);\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    setUploading(true);\r\n    await api\r\n      .post(`api/task/${task.task_id}/upload`, files, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        task?.files?.push(res.data.file);\r\n        alert('success', 'File has been uploaded.');\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setFiles([]);\r\n    setUploading(false);\r\n  };\r\n\r\n  const deleteTask = async () => {\r\n    setLoading(true);\r\n    await api\r\n      .delete(`api/task/${task.task_id}`)\r\n      .then(() => alert('success', 'Task has been deleted'))\r\n      .catch(() => alert('error', 'Something went wrong'));\r\n    setLoading(false);\r\n    setModal(false);\r\n    refetch();\r\n  };\r\n\r\n  const menuOptions = {\r\n    taskId: task?.task_id,\r\n    options: [\r\n      {\r\n        id: 1,\r\n        type: 'delete',\r\n        to: 'toDelete',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handleComment = async (e) => {\r\n    e.preventDefault();\r\n    setCommentSending(true);\r\n    postComment.employe_id = auth.user.employe_id;\r\n    postComment.task_id = task.task_id;\r\n    await api\r\n      .post(`api/comment`, postComment)\r\n      .then((res) => setPopContent((current) => [...current, res.data.data]));\r\n    setCommentSending(false);\r\n    setPostComment();\r\n    e.target.reset();\r\n  };\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"xl\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}></ModalHeader>\r\n        <ModalBody>\r\n          {loading ? (\r\n            <div className=\"d-flex justify-content-center\" style={{ height: '400px' }}>\r\n              Loading..\r\n            </div>\r\n          ) : (\r\n            <div className=\"popup-body\">\r\n              <div className=\"left\">\r\n                {/* {auth?.user.employe_id !== task.employe_id.toString() || mode === 'activities' ? ( */}\r\n                {mode === 'activities' || task?.status === 2 || task?.status === 3 ? (\r\n                  <>\r\n                    <>\r\n                      <div className=\"top\">\r\n                        <div className=\"date\">\r\n                          <h6>Start Date </h6>\r\n                          <span>{taskTemp?.start_date || '-'}</span>\r\n                        </div>\r\n                        <div className=\"date\">\r\n                          <h6>Due Date</h6>\r\n                          <span>{taskTemp?.end_date || '-'}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"bottom mt-3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"taskTitle\">Task Title</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"taskTitle\"\r\n                            name=\"taskTitle\"\r\n                            value={taskTemp?.task_title || ''}\r\n                            readOnly\r\n                            disabled\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"taskDesc\">Description</Label>\r\n                          <Input\r\n                            type=\"textarea\"\r\n                            id=\"taskDesc\"\r\n                            name=\"taskDesc\"\r\n                            value={taskTemp?.task_desc || ''}\r\n                            readOnly\r\n                            disabled\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <span>PICs</span>\r\n                          <br></br>\r\n                          <div className=\"d-flex flex-column\">\r\n                            {assignedEmployees.map((em, i) => (\r\n                              <div key={em.value} className=\"d-flex gap-3\">\r\n                                <span>{i + 1}.</span>\r\n                                <span>{em.label}</span>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"attach\">\r\n                        <h6>Attachment files ({task?.files?.length || 0})</h6>\r\n                        <ul>\r\n                          {task?.files?.length > 0 &&\r\n                            task?.files.map((f) => (\r\n                              <div key={f.file_id} className=\"d-flex gap-1 align-items-center\">\r\n                                <li>\r\n                                  <Link\r\n                                    className=\"file-link\"\r\n                                    to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    {f.file_name}\r\n                                  </Link>\r\n                                </li>\r\n                                {auth?.user.employe_id === task?.employe_id && (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn d-flex\"\r\n                                    style={{ color: '#EF6767' }}\r\n                                  >\r\n                                    <MaterialIcon\r\n                                      icon=\"delete_outline\"\r\n                                      style={{ fontSize: '20px' }}\r\n                                    />\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            ))}\r\n                        </ul>\r\n                      </div>\r\n                    </>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <form onSubmit={handleUpdate}>\r\n                      <div className=\"top\">\r\n                        <div className=\"date\">\r\n                          <h6>Start Date</h6>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"start_date\"\r\n                            value={taskTemp?.start_date || ''}\r\n                            onChange={(e) =>\r\n                              setTaskTemp({ ...taskTemp, start_date: e.target.value })\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"date\">\r\n                          <h6>Due Date</h6>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"end_date\"\r\n                            value={taskTemp?.end_date || ''}\r\n                            onChange={(e) => setTaskTemp({ ...taskTemp, end_date: e.target.value })}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"bottom mt-3\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"task_title\"\r\n                          value={taskTemp?.task_title || ''}\r\n                          onChange={(e) => setTaskTemp({ ...taskTemp, task_title: e.target.value })}\r\n                        />\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          cols=\"5\"\r\n                          rows=\"6\"\r\n                          name=\"task_desc\"\r\n                          value={taskTemp?.task_desc || ''}\r\n                          onChange={(e) => setTaskTemp({ ...taskTemp, task_desc: e.target.value })}\r\n                        />\r\n                        {task?.subtasks?.length > 0\r\n                          ? ''\r\n                          : task?.pics?.map(\r\n                              (pic) =>\r\n                                pic.employe_id.toString() === auth?.user.employe_id && (\r\n                                  <div\r\n                                    className=\"d-flex gap-2 justify-content-between\"\r\n                                    key={pic.id}\r\n                                  >\r\n                                    <div className=\"col-sm-10\">\r\n                                      <Input\r\n                                        type=\"range\"\r\n                                        defaultValue={task.task_progress}\r\n                                        onChange={(e) =>\r\n                                          setTaskTemp({\r\n                                            ...taskTemp,\r\n                                            task_progress: e.target.value,\r\n                                          })\r\n                                        }\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"col-sm-1 d-flex justify-content-end\">\r\n                                      {taskTemp?.task_progress}%\r\n                                    </div>\r\n                                  </div>\r\n                                ),\r\n                            )}\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                        <div className=\"d-flex align-items-center gap-3\">\r\n                          <button type=\"button\" className=\"btn-assigne\" onClick={assigneModal}>\r\n                            <i className=\"bi-person-plus-fill\"></i>\r\n                            <span>{assignedEmployees?.length || 0}</span>\r\n                          </button>\r\n                        </div>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"btn\"\r\n                          color=\"info\"\r\n                          disabled={updating || task?.status === 3}\r\n                          size=\"sm\"\r\n                        >\r\n                          {updating ? 'Updating...' : 'Update'}\r\n                        </Button>\r\n                      </div>\r\n                    </form>\r\n                    <form onSubmit={handleUpload} className=\"mt-2\">\r\n                      <h6>Attachment files ({task?.files?.length || 0})</h6>\r\n                      <div className=\"d-flex justify-content-between align-items-center bg-light px-2 rounded-3 mt-2\">\r\n                        <div className=\"d-flex align-items-center gap-1\">\r\n                          <div className=\"pt-2\" id=\"tooltip-3\">\r\n                            <Label for=\"attach\">\r\n                              <MaterialIcon icon=\"attach_file\" className=\"btn-icon\" />\r\n                            </Label>\r\n                            <input\r\n                              type=\"file\"\r\n                              id=\"attach\"\r\n                              name=\"attach\"\r\n                              hidden\r\n                              onChange={(e) => setFiles(e.target.files)}\r\n                              required\r\n                            />\r\n                            <TooltipHover title=\"Upload file\" id=\"3\" />\r\n                          </div>\r\n                          <span style={{ color: '#1F88E5', fontSize: '12px' }}>\r\n                            {files[0]?.name}\r\n                          </span>\r\n                        </div>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"btn\"\r\n                          outline\r\n                          size=\"sm\"\r\n                          disabled={task?.status === 3}\r\n                        >\r\n                          {uploading ? 'Uploading...' : 'Upload'}\r\n                        </Button>\r\n                      </div>\r\n                    </form>\r\n                    <div className=\"attach\">\r\n                      <ul>\r\n                        {task?.files?.length > 0 &&\r\n                          task?.files.map((f) => (\r\n                            <div key={f.file_id} className=\"d-flex gap-1 align-items-center\">\r\n                              <li>\r\n                                <Link\r\n                                  className=\"file-link\"\r\n                                  to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  {f.file_name}\r\n                                </Link>\r\n                              </li>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn d-flex\"\r\n                                style={{ color: '#EF6767' }}\r\n                              >\r\n                                <MaterialIcon icon=\"delete_outline\" style={{ fontSize: '20px' }} />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                      </ul>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"right\">\r\n                <div className=\"top\">\r\n                  {task.task_parent === null ? (\r\n                    <div className=\"status\">\r\n                      <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                        Task\r\n                      </span>\r\n                      {task?.status === 0 ? (\r\n                        <Badge color=\"info\">To Do</Badge>\r\n                      ) : task?.status === 1 ? (\r\n                        <Badge color=\"primary\">In Progress</Badge>\r\n                      ) : task?.status === 2 ? (\r\n                        <Badge color=\"light\" className=\"text-dark\">\r\n                          <i className=\"bi-clock mr-4\" style={{ fontSize: '12px' }}></i>\r\n                          &nbsp; Waiting for approval<strong></strong>\r\n                        </Badge>\r\n                      ) : task?.status === 3 ? (\r\n                        <Badge color=\"success\" className=\"d-flex\">\r\n                          {' '}\r\n                          <i className=\"bi-check2-circle mr-4\" style={{ fontSize: '13px' }}></i>\r\n                          &nbsp; Approved\r\n                        </Badge>\r\n                      ) : (\r\n                        <Badge color=\"danger\">Revision</Badge>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"status\">\r\n                      <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                        Subtask\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {auth?.user.employe_id === task.employe_id && (\r\n                    <ActionMenu menuOptions={menuOptions} action={deleteTask} />\r\n                  )}\r\n                </div>\r\n                <div className=\"bottom\">\r\n                  {history && comments ? (\r\n                    <>\r\n                      <div className=\"history-item\">\r\n                        <div className=\"comment-name\">\r\n                          <span>\r\n                            <strong>{task && task.created_by}</strong> create this task\r\n                          </span>\r\n                          <br />\r\n                        </div>\r\n                        <small>{task && newDate(task.created_at)}</small>\r\n                      </div>\r\n                      {sortHistoryByDate(popContent)?.map((h, i) =>\r\n                        h?.approval_id ? (\r\n                          <Fragment key={newDate(h?.created_at)}>\r\n                            <div className=\"history-item\">\r\n                              <div className=\"comment-name\">\r\n                                {h?.status === 0 && i < 1 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> sdsd\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 0 && i > 0 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> change task to To Do\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 0 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> was assigned\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 1 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> change task to In Progress\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 2 ? (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.pic_task}</strong> change task to Review\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                ) : h?.status === 3 ? (\r\n                                  <span>\r\n                                    <strong>{h?.status_by} </strong> task approved\r\n                                  </span>\r\n                                ) : (\r\n                                  <>\r\n                                    <span>\r\n                                      <strong>{h?.status_by} </strong>change task to Revision\r\n                                    </span>\r\n                                    <br />\r\n                                    <span style={{ fontSize: '12px' }}>\r\n                                      Deadline: {h?.end_date}\r\n                                    </span>\r\n                                  </>\r\n                                )}\r\n                              </div>\r\n                              <small>{newDate(h?.created_at)}</small>\r\n                            </div>\r\n                            {(h?.status === 3 || h?.status === 4) && (\r\n                              <div className=\"comment-item mt-1\">\r\n                                <div className=\"comment-user \">\r\n                                  <div\r\n                                    className={`comment-teks ${\r\n                                      h?.status === 3 ? 'text-success' : 'text-warning'\r\n                                    }`}\r\n                                  >\r\n                                    <small style={{ fontWeight: '600' }}>\r\n                                      {h?.status === 3 ? 'Comment' : 'Notes'}\r\n                                    </small>\r\n                                    {h.notes}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Fragment>\r\n                        ) : (\r\n                          <div key={h?.comment_id} className=\"comment-item\">\r\n                            <div className=\"comment-user\">\r\n                              <img\r\n                                src={user1}\r\n                                className=\"rounded-circle\"\r\n                                alt=\"avatar\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                              />\r\n                              <div key={h?.comment_id} className=\"comment-teks\">\r\n                                <small style={{ fontWeight: '600' }}>{h?.first_name}</small>\r\n                                {h?.comment}\r\n                                <div className=\"comment-time\">\r\n                                  <small>{newDate(h?.created_at)}</small>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ),\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    'Loading...'\r\n                  )}\r\n                </div>\r\n                <Form onSubmit={handleComment}>\r\n                  <div className=\"input-comment\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"comment\"\r\n                      ref={inputCommentRef}\r\n                      onChange={(e) => setPostComment({ comment: e.target.value })}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    <div className=\"\">\r\n                      <Button\r\n                        className=\"btn\"\r\n                        outline\r\n                        color=\"info\"\r\n                        disabled={commentSending}\r\n                        type=\"submit\"\r\n                      >\r\n                        <MaterialIcon icon=\"send\" />\r\n                        {commentSending ? 'Sending' : 'Send'}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal isOpen={emModal} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={() => setEmModal(false)}>Assigne Employee</ModalHeader>\r\n        <ModalBody>\r\n          <Select\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            defaultValue={assignedEmployees}\r\n            options={listEmployee}\r\n            onChange={(choice) => setAssignedEmployees(choice)}\r\n            isDisabled\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTaskPopup.propTypes = {\r\n  modal: PropTypes.bool,\r\n  setModal: PropTypes.func,\r\n  toggle: PropTypes.any,\r\n  task: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  mode: PropTypes.string,\r\n};\r\n\r\nexport default TaskPopup;\r\n","const newDate = (date) => {\r\n  if (date) {\r\n    const timestamp = new Date(date);\r\n    const dateString = timestamp.toDateString();\r\n    const localeString = timestamp.toLocaleString();\r\n    const time = localeString.split(',')[1];\r\n    return `${dateString}, ${time.split(':')[0]}:${time.split(':')[1]} ${time.split(' ')[2] || ''}`;\r\n  }\r\n  return date;\r\n  //   return `${dateString}, ${time.split(':')[0]}:${time.split(':')[1]}`;\r\n};\r\n\r\nexport default newDate;\r\n"],"names":["_ref","menuOptions","taskId","status","action","progress","actionMenu","setActionMenu","useState","deleteTask","_jsxs","className","children","_jsx","type","concat","onClick","MaterialIcon","icon","_Fragment","options","map","op","changeStatusTask","setStatus","to","disabled","label","Link","id","Toast","Toaster","toastOptions","style","alert","msg","notify","toast","success","error","props","title","tooltipOpen","setTooltipOpen","Tooltip","placement","isOpen","target","toggle","_task$files2","_task$files3","_task$subtasks","_task$pics","_task$files4","_files$","_task$files5","_sortHistoryByDate","modal","setModal","task","refetch","mode","auth","useAuth","history","setHistory","loading","setLoading","taskTemp","setTaskTemp","assignedEmployees","setAssignedEmployees","listEmployee","setListEmploye","emModal","setEmModal","updating","setUpdating","uploading","setUploading","comments","setComments","postComment","setPostComment","commentSending","setCommentSending","files","setFiles","popContent","setPopContent","inputCommentRef","useRef","api","useAxios","animatedComponents","makeAnimated","useEffect","approval_id","task_title","task_desc","task_progress","start_date","end_date","pics","pic","first_name","value","employe_id","async","get","task_id","then","res","data","fetchComments","fetchHistory","catch","err","console","log","fetchEmployees","fileUrl","process","Modal","bind","size","fade","centered","ModalHeader","ModalBody","height","FormGroup","Label","htmlFor","Input","name","readOnly","em","i","length","f","file_name","user","color","fontSize","file_id","onSubmit","e","preventDefault","task_pic","patch","onChange","cols","rows","subtasks","toString","defaultValue","assigneModal","Button","post","headers","_task$files","push","file","for","hidden","required","TooltipHover","outline","task_parent","Badge","ActionMenu","delete","created_by","newDate","created_at","sort","a","b","localeCompare","h","Fragment","pic_task","status_by","fontWeight","notes","src","user1","alt","width","comment","comment_id","Form","current","reset","ref","autoComplete","Select","closeMenuOnSelect","components","isMulti","choice","isDisabled","date","timestamp","Date","dateString","toDateString","time","toLocaleString","split"],"sourceRoot":""}