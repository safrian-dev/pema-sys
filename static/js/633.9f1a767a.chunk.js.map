{"version":3,"file":"static/js/633.9f1a767a.chunk.js","mappings":"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","sources":["pages/projects/PDFFile.js","../node_modules/reactstrap/esm/Progress.js","pages/projects/OverviewTab.js","pages/projects/TaskForm.js","pages/projects/BoardTask.js","pages/projects/BoardToDo.js","pages/projects/BoardInProgress.js","pages/projects/BoardDone.js","pages/projects/BoardTab.js","components/roundedTable/RoundedTable.js","pages/projects/MemberTab.js","pages/projects/FileTab.js","pages/projects/ReviewTab.js","pages/projects/HandoverTab.js","pages/projects/ActivityTab.js","pages/projects/ReviewBastTab.js","pages/projects/ProjectDetailTab.js","pages/projects/ProjectNav.js","context/TaskContext.js","pages/projects/ProjectDetail.js","utils/rupiah.js","../node_modules/reactstrap/esm/ModalFooter.js"],"sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Page, Text, Document, StyleSheet, View } from '@react-pdf/renderer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 4,\r\n    marginHorizontal: 15,\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  header: {\r\n    fontSize: 10,\r\n    marginBottom: 5,\r\n    textAlign: 'left',\r\n    color: '#3f3f3f',\r\n    fontWeight: 'bold',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 10,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  printAt: {\r\n    position: 'absolute',\r\n    fontSize: 8,\r\n    bottom: 30,\r\n    left: 35,\r\n    right: 0,\r\n    textAlign: 'left',\r\n    color: 'grey',\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderRightWidth: 0,\r\n    borderBottomWidth: 0,\r\n    color: '#3f3f3f',\r\n  },\r\n  tableRow: {\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n  tableCol: {\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCell: {\r\n    // margin: 'auto',\r\n    marginTop: 3,\r\n    marginBottom: 3,\r\n    marginLeft: 3,\r\n    marginRight: 3,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nconst today = () => {\r\n  const currentDate = new Date();\r\n  return `${currentDate.toDateString()}, ${currentDate.toLocaleString().split(',')[1]}`;\r\n};\r\n\r\nconst PDFFile = ({ projectTitle, data }) => {\r\n  const pageColor = '#fff';\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={{ ...styles.body, backgroundColor: pageColor }}>\r\n        <Text style={styles.header} fixed>\r\n          Project : {projectTitle?.project_name}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Partner : {projectTitle?.partner}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Division : {projectTitle?.division}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Phase : {projectTitle?.phase}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Schema : {projectTitle?.schema === 'jo' ? 'Join Operational' : 'Join Venture'}\r\n        </Text>\r\n        <View style={styles.table}>\r\n          <View style={styles.tableRow}>\r\n            <View style={{ ...styles.tableCol, width: '5%' }}>\r\n              <Text style={styles.tableCell}>No.</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '35%' }}>\r\n              <Text style={styles.tableCell}>Task Title</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Status</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Deadline</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '30%' }}>\r\n              <Text style={styles.tableCell}>PIC</Text>\r\n            </View>\r\n          </View>\r\n          {data?.map((item, i) => (\r\n            <Fragment key={item.task_id}>\r\n              <View style={styles.tableRow}>\r\n                <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                  <Text style={{ ...styles.tableCell, textAlign: 'center' }}>{i + 1}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                  <Text style={styles.tableCell}>{item.task_title}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={{ ...styles.tableCell, fontSize: '10px' }}>\r\n                    {item.status === 0\r\n                      ? 'To do'\r\n                      : item.status === 1\r\n                      ? 'In progress'\r\n                      : item.status === 2\r\n                      ? 'Under review'\r\n                      : item.status === 3\r\n                      ? 'Approved'\r\n                      : 'Revision'}\r\n                  </Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={styles.tableCell}>{item.end_date}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                  {item.pics.map((p) => (\r\n                    <Text style={styles.tableCell} key={p.id}>\r\n                      {p.first_name}\r\n                    </Text>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n              {item.subtasks.map((st) => (\r\n                <View style={styles.tableRow} key={st.task_id}>\r\n                  <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                    <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                    <Text style={styles.tableCell}>{st.task_title}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>-</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>{st.end_date}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                    {st.pics.map((p) => (\r\n                      <Text style={styles.tableCell} key={p.id}>\r\n                        {p.first_name}\r\n                      </Text>\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              ))}\r\n            </Fragment>\r\n          ))}\r\n        </View>\r\n        <Text\r\n          style={styles.pageNumber}\r\n          render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\r\n        />\r\n        <Text style={styles.printAt} render={today} />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nPDFFile.propTypes = {\r\n  projectTitle: PropTypes.object,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default PDFFile;\r\n","var _excluded = [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\nvar propTypes = {\n  /** Enable animation to bar */\n  animated: PropTypes.bool,\n  bar: PropTypes.bool,\n  barAriaLabelledBy: PropTypes.string,\n  barAriaValueText: PropTypes.string,\n  barClassName: PropTypes.string,\n  barStyle: PropTypes.object,\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Add custom color to the placeholder */\n  color: PropTypes.string,\n  /** Maximum value of progress */\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Minimum value of progress, defaults to zero */\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  multi: PropTypes.bool,\n  /** Add stripes to progress bar */\n  striped: PropTypes.bool,\n  style: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Current value of progress */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nfunction Progress(props) {\n  var children = props.children,\n    className = props.className,\n    barClassName = props.barClassName,\n    cssModule = props.cssModule,\n    _props$value = props.value,\n    value = _props$value === void 0 ? 0 : _props$value,\n    _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    animated = props.animated,\n    striped = props.striped,\n    color = props.color,\n    bar = props.bar,\n    multi = props.multi,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    _props$style = props.style,\n    style = _props$style === void 0 ? {} : _props$style,\n    _props$barStyle = props.barStyle,\n    barStyle = _props$barStyle === void 0 ? {} : _props$barStyle,\n    barAriaValueText = props.barAriaValueText,\n    barAriaLabelledBy = props.barAriaLabelledBy,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\".concat(color) : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread(_objectSpread(_objectSpread({}, bar ? style : {}), barStyle), {}, {\n      width: \"\".concat(percent, \"%\")\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n  if (bar) {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React.createElement(\"div\", progressBarProps));\n}\nProgress.propTypes = propTypes;\nexport default Progress;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Progress,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport rupiah from '../../utils/rupiah';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst remaininDays = (endDate) => {\r\n  const todayDate = new Date();\r\n\r\n  const todayToLocalString = todayDate.toLocaleString();\r\n\r\n  const todayBad = todayToLocalString.split(',')[0];\r\n\r\n  const day = todayBad.split('/')[1];\r\n  const month = todayBad.split('/')[0];\r\n  const year = todayBad.split('/')[2];\r\n\r\n  const todayMerge = `${year}-${month}-${day}`;\r\n\r\n  const today = new Date(todayMerge);\r\n\r\n  const deadline = new Date(endDate);\r\n\r\n  const diff = deadline.getTime() - today.getTime();\r\n\r\n  const result = diff / (1000 * 3600 * 24);\r\n\r\n  return result;\r\n};\r\n\r\nconst OverviewTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [history, setHistory] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const [newPic, setNewPic] = useState();\r\n  const [listEmployee, setListEmploye] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [bst, setBst] = useState([]);\r\n  const [activePhase, setActivePhase] = useState(undefined);\r\n  const [selectedSchema, setSelectedSchema] = useState('');\r\n  const [isBusiness, setIsBusiness] = useState();\r\n  const [partnerOptions, setPartnerOptions] = useState([]);\r\n  const [selectedPartner, setSelectedPartner] = useState(undefined);\r\n  const [taskByStatus, setTaskByStatus] = useState({\r\n    todo: 0,\r\n    inprogress: 0,\r\n    underReview: 0,\r\n    done: 0,\r\n  });\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['overview'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 0 || parseInt(task.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 1;\r\n    });\r\n\r\n    const doneFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2 || parseInt(task.status, 10) === 3;\r\n    });\r\n\r\n    const underReviewFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2;\r\n    });\r\n\r\n    setTaskByStatus({\r\n      todo: todofFiltered?.length,\r\n      inprogress: inProgressfFiltered?.length,\r\n      underReview: underReviewFiltered?.length,\r\n      done: doneFiltered?.length,\r\n    });\r\n\r\n    setActivePhase(data?.current_stage?.phase_id);\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const fetsHistory = async () => {\r\n    await api\r\n      .get(`api/project/${projectId}/history`)\r\n      .then((res) => setHistory(res.data.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetsHistory();\r\n  }, [projectId]);\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list`)\r\n        .then((res) => setListEmploye(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(\r\n        `api/project/handover`,\r\n        {\r\n          project_id: projectId,\r\n          new_pic: newPic.value,\r\n          file: bst,\r\n          // jika fase projek adalah planning\r\n          schema: activePhase === 2 ? selectedSchema : '',\r\n          partner: activePhase === 2 ? selectedPartner : '',\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        },\r\n      )\r\n      .then(() => {\r\n        fetsHistory();\r\n        alert('success', 'BAST is under review');\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n    setModal(false);\r\n  };\r\n\r\n  const allTaskPermission = ['Manager', 'Director'];\r\n\r\n  useEffect(() => {\r\n    async function fetchPartnerOptions() {\r\n      await api\r\n        .get(`api/project/partner/options`)\r\n        .then((res) => setPartnerOptions(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    fetchPartnerOptions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Col lg=\"12\">\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : error ? (\r\n        'Soemthing went wrong.'\r\n      ) : (\r\n        <Row>\r\n          <Col lg=\"8\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Description\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"ms-auto mt-3 mt-md-0\">\r\n                  {isBusiness ? data.current_stage?.desc : data?.goals}\r\n                </div>\r\n                <div className=\"d-flex justify-content-between mt-3\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Level</small>\r\n                    <span className=\"text-dark\">{data.level_desc}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column col-4\">\r\n                    <small className=\"text-muted\">Base</small>\r\n                    <div className=\"d-flex\">\r\n                      <span className=\"wtext-dark\">\r\n                        {data?.base_description.trim().length > 25\r\n                          ? `${data?.base_description.substring(0, 25)}...`\r\n                          : data?.base_description}\r\n                      </span>\r\n                      <abbr title={data?.base_description}>\r\n                        <i\r\n                          className=\"me-2 bi-info-circle-fill\"\r\n                          style={{ fontSize: '14px', marginLeft: '4px' }}\r\n                        ></i>\r\n                      </abbr>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Start date</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage && data.current_stage?.start_date)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Deadline</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage !== null && data.current_stage?.end_date)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between bg-light align-items-end p-2 mt-3\"\r\n                  style={{ borderRadius: '8px' }}\r\n                >\r\n                  <div className=\"d-flex gap-3 align-items-center\">\r\n                    <img\r\n                      src={user1}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"avatar\"\r\n                      width=\"45\"\r\n                      height=\"45\"\r\n                    />\r\n                    <div className=\"d-flex flex-column\">\r\n                      <small className=\"text-muted\">PIC</small>\r\n                      <span className=\"text-dark fw-bold\">{data.pic_active.first_name}</span>\r\n                      {/* <small className=\"text-muted\">Divisi Teknologi & Informasi</small> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-3\">\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Cost <span className=\"fw-bold\">{rupiah(data.estimated_cost)}</span>\r\n                    </span>\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Income <span className=\"fw-bold\">{rupiah(data.estimated_income)}</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Project Histories\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  {!history\r\n                    ? 'Loading...'\r\n                    : history?.map((h) => (\r\n                        <div\r\n                          key={h.history_id}\r\n                          className=\"col-md-12 d-flex justify-content-between align-items-center py-2 px-3\"\r\n                          style={{ backgroundColor: '#F3F2F2', borderRadius: '8px' }}\r\n                        >\r\n                          <div className=\"col-md-4 d-flex flex-column\">\r\n                            <span className=\"text-dark\">{h.organization_name}</span>\r\n                            <small>{h.history_desc}</small>\r\n                            {auth?.user?.roles.find((role) => allTaskPermission.includes(role)) && (\r\n                              <Link\r\n                                to={`/projects/details/${projectId}?div=${h.organization_id}&to=activities`}\r\n                                style={{ textDecoration: 'none' }}\r\n                              >\r\n                                See all task\r\n                              </Link>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-2\">\r\n                            <span\r\n                              className={`badge bg-light-${\r\n                                h.status === 'handover' && h.active === 0\r\n                                  ? 'danger text-danger'\r\n                                  : h.status === 'handover'\r\n                                  ? 'success text-success'\r\n                                  : h.status === 'review'\r\n                                  ? 'danger text-danger'\r\n                                  : 'primary text-primary'\r\n                              } rounded-pill d-inline-block fw-bold`}\r\n                            >\r\n                              {h.status === 'handover' && h.active === 0\r\n                                ? 'waiting for approval'\r\n                                : (h.status === 'handover' && h.active === 1) || h.active === 1\r\n                                ? 'active'\r\n                                : h.status}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-3 d-flex flex-column\">\r\n                            <small>{newDate(h.created_at)}</small>\r\n                          </div>\r\n                          <div className=\"col-md-1 member\">\r\n                            <img\r\n                              id={`tooltip-${h.history_id}`}\r\n                              src={h.img || user1}\r\n                              className=\"rounded-circle\"\r\n                              alt=\"avatar\"\r\n                              width=\"35\"\r\n                              height=\"35\"\r\n                            />\r\n                            <TooltipHover title={h.first_name} id={h.history_id.toString()} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"4\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\" className=\"d-flex justify-content-between fw-bold\">\r\n                  Project Active\r\n                  <span className=\"text-success fw-bold\">\r\n                    {data.total_progress.toFixed(data.total_progress !== 100 && 2)}%\r\n                  </span>\r\n                </CardTitle>\r\n                <Progress\r\n                  className=\"\"\r\n                  color=\"success\"\r\n                  value={data.total_progress}\r\n                  style={{ height: '15px' }}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Remaining days</h6>\r\n                      <span className=\"text-danger\">\r\n                        {remaininDays(\r\n                          data?.current_stage !== null && data.current_stage?.end_date,\r\n                        ).toFixed()}\r\n                      </span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"timer\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Todo</h6>\r\n                      <span>{taskByStatus?.todo}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"schedule\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task In Progress</h6>\r\n                      <span>{taskByStatus?.inprogress}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"play_circle_outline\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Done</h6>\r\n                      <span>{taskByStatus?.done}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"task_alt\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            {isBusiness && auth.user.roles.includes('Manager') && (\r\n              <Card>\r\n                <Button\r\n                  type=\"button\"\r\n                  color=\"info\"\r\n                  disabled={\r\n                    data?.total_progress !== 100 ||\r\n                    taskByStatus?.underReview !== 0 ||\r\n                    taskByStatus?.todo !== 0 ||\r\n                    taskByStatus?.inprogress !== 0\r\n                  }\r\n                  outline\r\n                  onClick={toggle.bind(null)}\r\n                >\r\n                  Handover Project\r\n                </Button>\r\n              </Card>\r\n            )}\r\n            {/* <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h4\">Recent Tasks</CardTitle>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Jaka joined the project</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Doni comment on your task </span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Lexa uploaded the file</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Charlie assign a new task to you</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardBody>\r\n        </Card> */}\r\n          </Col>\r\n          <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n            <ModalHeader toggle={toggle.bind(null)}>Handover Project</ModalHeader>\r\n            <form onSubmit={handleSubmit}>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <Label>Option</Label>\r\n                  <Input type=\"select\" id=\"base_id\" name=\"base_id\" defaultValue=\"a\">\r\n                    <option value=\"a\" disabled>\r\n                      Select\r\n                    </option>\r\n                    <option value=\"\">Hand Over</option>\r\n                    <option value=\"\">Done</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {/* current stage is Planning */}\r\n                {activePhase === 2 && (\r\n                  <>\r\n                    {data?.current_stage?.partner === null && (\r\n                      <FormGroup>\r\n                        <Label for=\"partner\">Partner</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          id=\"partner\"\r\n                          name=\"partner\"\r\n                          defaultValue=\"pa\"\r\n                          onChange={(e) => setSelectedPartner(e.target.value)}\r\n                        >\r\n                          <option disabled value=\"pa\">\r\n                            - Select -\r\n                          </option>\r\n                          {partnerOptions.length > 0 &&\r\n                            partnerOptions.map((p) => (\r\n                              <option key={p.id} value={p.id}>\r\n                                {p.name}\r\n                              </option>\r\n                            ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    )}\r\n                    <FormGroup>\r\n                      <Label>Schema</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        id=\"base_id\"\r\n                        name=\"base_id\"\r\n                        defaultValue=\"a\"\r\n                        onChange={(e) => setSelectedSchema(e.target.value)}\r\n                      >\r\n                        <option value=\"a\" disabled>\r\n                          Select\r\n                        </option>\r\n                        <option value=\"jo\">JO</option>\r\n                        <option value=\"jv\">JV</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </>\r\n                )}\r\n                {/* current stage is Planning */}\r\n                <FormGroup>\r\n                  <Label>PIC</Label>\r\n                  <Select\r\n                    components={animatedComponents}\r\n                    options={listEmployee}\r\n                    onChange={(choice) => setNewPic(choice)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"bst\">BAST</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"file\"\r\n                      name=\"file\"\r\n                      id=\"bst\"\r\n                      onChange={(e) => setBst(e.target.files)}\r\n                    />\r\n                  </FormGroup>\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"info\"\r\n                  disabled={loading}\r\n                  className=\"d-flex gap-1 align-items-center\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                      Sending\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                      Send\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </Modal>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OverviewTab;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Input, Modal, ModalBody, ModalHeader, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport './TaskForm.scss';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\nconst TaskForm = (props) => {\r\n  const { auth } = useAuth();\r\n  const { projectId, setNewTaskOpen, setAddSubtaskOpen, refetch, type, taskId } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [task, setTask] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [listEmployee, setListEmploye] = useState();\r\n  // const [files, setFiles] = useState([]);\r\n\r\n  const animatedComponents = makeAnimated();\r\n  const navigate = useNavigate();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list`)\r\n        .then((res) => {\r\n          setListEmploye(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n\r\n    setAssignedEmployees([\r\n      {\r\n        value: auth.user.employe_id,\r\n        label: auth.user.first_name,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setTask((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const assigneModal = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    if (type === 1) {\r\n      setNewTaskOpen(false);\r\n    } else {\r\n      setAddSubtaskOpen(undefined);\r\n    }\r\n  };\r\n\r\n  const taskSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    task.project_id = projectId;\r\n    task.task_pic = assignedEmployees;\r\n    // eslint-disable-next-line prefer-destructuring\r\n    // task.files = files;\r\n\r\n    if (type === 2) {\r\n      task.task_parent = taskId;\r\n    }\r\n\r\n    await api\r\n      .post('api/task', task, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then(() => {\r\n        if (auth?.user.roles.includes('Manager')) {\r\n          const arrayId = [];\r\n          assignedEmployees.map((em) => arrayId.push(em.value));\r\n          if (!arrayId.includes(auth?.user.employe_id)) {\r\n            navigate('?to=activities');\r\n          }\r\n        } else {\r\n          navigate('');\r\n        }\r\n        alert('create', 'New task has been created.');\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n    setLoading(false);\r\n    refetch();\r\n    closeForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task-form-overlay\" onClick={closeForm} />\r\n      <form onSubmit={taskSubmit} style={{ width: '100%' }} encType=\"multipart/form-data\">\r\n        <div className=\"new-task\">\r\n          <div className=\"body\">\r\n            <div className=\"input\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"task_title\"\r\n                placeholder=\"Task title here..\"\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <button type=\"button\" className=\"btn-assigne\" id=\"tooltip-2\" onClick={assigneModal}>\r\n              <i className=\"bi-person-plus-fill\"></i>\r\n              <span>{assignedEmployees?.length || 0}</span>\r\n            </button>\r\n            <TooltipHover title=\"Assigne\" id=\"2\" />\r\n          </div>\r\n          <div className=\"footer\">\r\n            <div className=\"option\">\r\n              {/* <div className=\"attach\">\r\n                <Label for=\"attach\">\r\n                  <MaterialIcon icon=\"attach_file\" className=\"btn-icon\" />\r\n                </Label>\r\n                <input type=\"file\" id=\"attach\" hidden onChange={(e) => setFiles(e.target.files)} />\r\n              </div> */}\r\n              <div className=\"duedate\">\r\n                <span className=\"datepicker-toggle\" id=\"tooltip-1\">\r\n                  <span className=\"datepicker-toggle-button\">\r\n                    <MaterialIcon icon=\"calendar_month\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"end_date\"\r\n                    className=\"datepicker-input\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  />\r\n                </span>\r\n                <TooltipHover title=\"Due date\" id=\"1\" />\r\n                <span>{task.end_date}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"action\">\r\n              <Button type=\"button\" size=\"sm\" color=\"light\" disabled={loading} onClick={closeForm}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"sm\"\r\n                className=\"d-flex gap-2 align-items-center\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" />\r\n                    Loading...\r\n                  </>\r\n                ) : (\r\n                  'Save'\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Assigne Employee</ModalHeader>\r\n        <ModalBody>\r\n          <Select\r\n            // closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            defaultValue={assignedEmployees}\r\n            options={listEmployee}\r\n            onChange={(choice) => setAssignedEmployees(choice)}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTaskForm.propTypes = {\r\n  projectId: PropTypes.string,\r\n  setNewTaskOpen: PropTypes.func,\r\n  setAddSubtaskOpen: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  type: PropTypes.number,\r\n  taskId: PropTypes.number,\r\n};\r\n\r\nexport default TaskForm;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { useState } from 'react';\r\nimport { Badge, Button, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport TaskPopup from './TaskPopup';\r\nimport TaskForm from './TaskForm';\r\nimport ActionMenu from '../../components/actionMenu/ActionMenu';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst BoardTask = ({ data, projectId, refetch }) => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [addSubtaskOpen, setAddSubtaskOpen] = useState(undefined);\r\n  const [task, setTask] = useState(undefined);\r\n  const [updating, setUpdating] = useState();\r\n  const [taskIdActive, setTaskIdActive] = useState();\r\n  const [status, setStatus] = useState();\r\n\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const type = 2;\r\n\r\n  const handleTaskStatus = async (taskId, taskStatus) => {\r\n    setTaskIdActive(taskId);\r\n    setStatus(taskStatus);\r\n    setUpdating(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: auth.user.employe_id,\r\n        status: taskStatus,\r\n      })\r\n      .then(() => {\r\n        alert(\r\n          taskStatus === 1 ? 'start' : taskStatus === 2 ? 'done' : 'success',\r\n          `Task status has been changed to ${\r\n            taskStatus === 0 ? 'To Do' : taskStatus === 1 ? 'In Progress' : 'Done'\r\n          }`,\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    refetch();\r\n    setUpdating(false);\r\n    setTaskIdActive();\r\n    setStatus();\r\n  };\r\n\r\n  const menuOptions = {\r\n    options: [\r\n      {\r\n        id: 1,\r\n        icon: <MaterialIcon icon=\"edit_note\" />,\r\n        type: 'button',\r\n        label: 'To do',\r\n        to: 0,\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: <MaterialIcon icon=\"play_circle_outline\" />,\r\n        type: 'button',\r\n        label: 'In Progress',\r\n        to: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: <MaterialIcon icon=\"task_alt\" />,\r\n        type: 'button',\r\n        label: 'Done',\r\n        to: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        {data?.map((td, i) => (\r\n          <div key={td.task_id} className=\"board\">\r\n            <div className=\"board-header\">\r\n              <div className=\"d-flex gap-2\" style={{ height: 'max-content' }}>\r\n                <Badge\r\n                  color=\"info\"\r\n                  className={`bg-light-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } text-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } fw-bold`}\r\n                >\r\n                  #{i + 1}\r\n                </Badge>\r\n                {parseInt(td.status, 10) === 4 && (\r\n                  <Badge color=\"danger\">\r\n                    <i className=\"bi-pencil-square mr-4\" style={{ fontSize: '12px' }}></i>\r\n                    &nbsp; Revision\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              {parseInt(td.status, 10) === 0 ||\r\n              parseInt(td.status, 10) === 1 ||\r\n              parseInt(td.status, 10) === 4 ? (\r\n                updating && taskIdActive === td.task_id ? (\r\n                  <div className=\"d-flex align-items-center gap-1\">\r\n                    <Spinner size=\"sm\" color=\"success\" />\r\n                    <span>\r\n                      Updating status to{' '}\r\n                      <strong>\r\n                        {status === 0\r\n                          ? 'To do'\r\n                          : status === 1\r\n                          ? 'In Progress'\r\n                          : status === 2\r\n                          ? 'Done'\r\n                          : ''}\r\n                      </strong>\r\n                    </span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"d-flex gap-2\">\r\n                    <div className=\"\">\r\n                      {parseInt(td.status, 10) === 1 && (\r\n                        <span style={{ fontSize: '12px' }}>\r\n                          Progress{'  '}\r\n                          <strong\r\n                            style={{\r\n                              fontSize: '14px',\r\n                              color: td.task_progress === 100 ? '#4cc790' : '#21C1D6',\r\n                            }}\r\n                          >\r\n                            {td.task_progress.toFixed(td.task_progress !== 100 && 2)}%\r\n                          </strong>\r\n                        </span>\r\n                        // <div className=\"progress-bar\">\r\n                        //   <Progress\r\n                        //     className=\"mb-0\"\r\n                        //     value={td.task_progress}\r\n                        //     color=\"success\"\r\n                        //     style={{ fontSize: '10px', height: '12px' }}\r\n                        //   />\r\n                        //   <div className={`num ${td.task_progress > 52 && 'white'}`}>\r\n                        //     {td.task_progress}%\r\n                        //   </div>\r\n                        // </div>\r\n                      )}\r\n                    </div>\r\n                    <div key={td.task_id}>\r\n                      {td.pics.map(\r\n                        (pic) =>\r\n                          pic.employe_id.toString() === auth?.user.employe_id && (\r\n                            <ActionMenu\r\n                              key={td.task_id}\r\n                              menuOptions={menuOptions}\r\n                              taskId={td.task_id}\r\n                              status={parseInt(td.status, 10)}\r\n                              action={handleTaskStatus}\r\n                              progress={td.task_progress}\r\n                            />\r\n                          ),\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              ) : parseInt(td.status, 10) === 2 ? (\r\n                <Badge color=\"light\" className=\"d-flex text-dark\">\r\n                  <i className=\"bi-clock mr-4\" style={{ fontSize: '12px' }}></i>\r\n                  &nbsp; Waiting for approval\r\n                </Badge>\r\n              ) : parseInt(td.status, 10) === 3 ? (\r\n                <Badge color=\"success\" className=\"d-flex\">\r\n                  <i className=\"bi-check2-circle mr-4\" style={{ fontSize: '13px' }}></i>\r\n                  &nbsp; Approved\r\n                </Badge>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div className=\"board-body\" onClick={() => openPopup(td)}>\r\n              <div className=\"task-title fw-bold\">{td.task_title}</div>\r\n              <div className=\"task-bottom\">\r\n                <div className=\"task-info\">\r\n                  <small className=\"text-muted\">{td.subtasks.length} Subtask</small>\r\n                </div>\r\n                <div className=\"task-action\">\r\n                  <div className=\"comment\">\r\n                    <MaterialIcon icon=\"comment\" />\r\n                    <div>{td.comments}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {td.subtasks.length >= 1 &&\r\n              td.subtasks.map((st) => (\r\n                <div key={st.task_id} className=\"board-body subtask\" onClick={() => openPopup(st)}>\r\n                  <div className=\"task-title text-muted\">{st.task_title}</div>\r\n                  <div className=\"task-action\">\r\n                    <div className=\"circular-progress\">\r\n                      <CircularPercentage data={st.task_progress} />\r\n                      {/* <Progress\r\n                          className=\"mb-0\"\r\n                          value={st.task_progress}\r\n                          color=\"success\"\r\n                          style={{ fontSize: '10px', height: '12px' }}\r\n                          />\r\n                          <div className={`num ${st.task_progress > 52 && 'white'}`}>\r\n                          {st.task_progress}%\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"comment\">\r\n                      <MaterialIcon icon=\"comment\" />\r\n                      <div>{st.comments}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            {parseInt(td.status, 10) !== 3 && (\r\n              <div className=\"board-footer\">\r\n                {addSubtaskOpen === td.task_id ? (\r\n                  <TaskForm\r\n                    {...{ projectId, setAddSubtaskOpen, refetch, type }}\r\n                    taskId={td.task_id}\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    {td.status !== 2 ? (\r\n                      <Button\r\n                        type=\"button\"\r\n                        size=\"sm\"\r\n                        color=\"light\"\r\n                        className=\"d-flex align-items-center\"\r\n                        onClick={() => setAddSubtaskOpen(td.task_id)}\r\n                      >\r\n                        <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n                        Add Subtask\r\n                      </Button>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                    <div className=\"member-2\">\r\n                      <div className=\"member-item\">\r\n                        {td?.pics?.map(\r\n                          (pic, idx) =>\r\n                            idx < 2 && (\r\n                              <div key={pic.id} className=\"ava-img\">\r\n                                <img\r\n                                  id={`tooltip-${pic.id}`}\r\n                                  src={user1}\r\n                                  className=\"rounded-circle\"\r\n                                  alt=\"avatar\"\r\n                                  width=\"35\"\r\n                                  height=\"35\"\r\n                                />\r\n                                <TooltipHover title={pic.first_name} id={pic.id.toString()} />\r\n                              </div>\r\n                            ),\r\n                        )}\r\n                        {td?.pics?.length > 2 && (\r\n                          <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                            +{td.pics.length - 2}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task, refetch }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardTask.propTypes = {\r\n  data: PropTypes.array,\r\n  projectId: PropTypes.string,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.any,\r\n};\r\n\r\nexport default BoardTask;\r\n","import React, { useState } from 'react';\r\nimport { Button, Col } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst BoardToDo = ({ data, isLoading, error, refetch, isRefetching }) => {\r\n  const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const type = 1;\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-primary text-primary py-2 px-3 mb-2 rounded-2\">\r\n        <span className=\"fw-bold\">To do</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {!newTaskOpen ? (\r\n            <Button\r\n              type=\"button\"\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              block\r\n              onClick={() => setNewTaskOpen(true)}\r\n            >\r\n              <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n              New Task\r\n            </Button>\r\n          ) : (\r\n            <TaskForm {...{ projectId, setNewTaskOpen, refetch, type }} />\r\n          )}\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardToDo.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n};\r\n\r\nexport default BoardToDo;\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n// import TaskForm from './TaskForm';\r\n\r\nconst BoardInProgress = ({ data, isLoading, error, refetch, isRefetching }) => {\r\n  // const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-warning text-warning py-2 px-3 mb-2 rounded-2\">\r\n        <span className=\"fw-bold\">In progress</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {/* {!newTaskOpen ? (\r\n            <Button\r\n              type=\"button\"\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              block\r\n              onClick={() => setNewTaskOpen(true)}\r\n            >\r\n              <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n              New Task\r\n            </Button>\r\n          ) : (\r\n          )} */}\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardInProgress.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n};\r\n\r\nexport default BoardInProgress;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Col } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n\r\nconst BoardDone = ({ data, isLoading, error, refetch, isRefetching }) => {\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-success text-success py-2 px-3 mb-2 rounded-2\">\r\n        <span className=\"fw-bold\">Done</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardDone.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n};\r\n\r\nexport default BoardDone;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport BoardToDo from './BoardToDo';\r\nimport BoardInProgress from './BoardInProgress';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport BoardDone from './BoardDone';\r\n// import NewTaskModal from './NewTaskModal';\r\n\r\nconst BoardTab = () => {\r\n  const { projectId } = useParams();\r\n  const [todos, setTodos] = useState();\r\n  const [inProgress, setInProgress] = useState();\r\n  const [Done, setDone] = useState();\r\n  const [isMemberActive, setIsMemberActive] = useState(true);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['todos'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/employe/all`).then((res) => {\r\n        setIsMemberActive(res.data.is_member_active);\r\n        return res.data.tasks;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 0 || parseInt(taska.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 1;\r\n    });\r\n\r\n    const DoneFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 2 || parseInt(taska.status, 10) === 3;\r\n    });\r\n\r\n    setTodos(todofFiltered);\r\n    setInProgress(inProgressfFiltered);\r\n    setDone(DoneFiltered);\r\n  }, [data]);\r\n\r\n  return (\r\n    <Row>\r\n      {/* <Col lg=\"12\">\r\n        <div className=\"search text-muted\">\r\n          <div className=\"search-input\">\r\n            <MaterialIcon icon=\"search\" />\r\n            <input type=\"text\" placeholder=\"search task ..\" />\r\n          </div>\r\n          <button type=\"button\" className=\"text-dark\" onClick={toggle.bind(null)}>\r\n            <MaterialIcon icon=\"add\" />\r\n            New Task\r\n          </button>\r\n          <NewTaskModal {...{ modal, setModal, toggle }} />\r\n        </div>\r\n      </Col> */}\r\n      {isLoading ? (\r\n        <Col>\r\n          <Card>\r\n            <CardBody className=\"text-center\">\r\n              <h6 className=\"tex-muted\">Loading...</h6>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : isMemberActive ? (\r\n        <>\r\n          <BoardToDo data={todos} {...{ isLoading, error, refetch, isRefetching }} />\r\n          <BoardInProgress data={inProgress} {...{ isLoading, error, refetch, isRefetching }} />\r\n          <BoardDone data={Done} {...{ isLoading, error, refetch, isRefetching }} />\r\n        </>\r\n      ) : (\r\n        <Col>\r\n          <Card>\r\n            <CardBody className=\"text-center\">\r\n              <h6 className=\"tex-muted\">\r\n                You cannot create a task because you are not an active member.\r\n              </h6>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BoardTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RoundedTable.scss';\r\n\r\nconst RoundedTable = ({ children }) => {\r\n  return <table className=\"rounded-corners\">{children}</table>;\r\n};\r\n\r\nRoundedTable.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default RoundedTable;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useParams } from 'react-router-dom';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport RoundedTable from '../../components/roundedTable/RoundedTable';\r\n// import useAuth from '../../hooks/useAuth';\r\n\r\nconst selectedCount = (obj, row) => {\r\n  return obj[row];\r\n};\r\n\r\nconst MemberTab = () => {\r\n  const [totalTask, setTotalTask] = useState();\r\n  const api = useAxios();\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['members'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/members`).then((res) => {\r\n        setTotalTask(res.data.count_task);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  // const addMemberAllowedRole = 'Manager';\r\n\r\n  return (\r\n    <Col>\r\n      <Card className=\"rounded-3\">\r\n        <CardBody>\r\n          {/* {auth.user.roles.includes(addMemberAllowedRole) && (\r\n            <Col className=\"d-flex justify-content-end\" col=\"12\">\r\n              <Button\r\n                className=\"btn d-flex gap-1 align-items-center rounded-5 px-2\"\r\n                outline\r\n                color=\"success\"\r\n                size=\"sm\"\r\n              >\r\n                <MaterialIcon icon=\"add\" style={{ fontSize: '16px' }} />\r\n                Member\r\n              </Button>\r\n            </Col>\r\n          )} */}\r\n          {isLoading ? (\r\n            'Loading...'\r\n          ) : error ? (\r\n            'Something went wrong.'\r\n          ) : data?.length > 0 ? (\r\n            <RoundedTable>\r\n              <>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Position</th>\r\n                    <th>Total Task</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody style={{ overflow: 'hidden' }}>\r\n                  {data?.map((m, i) => (\r\n                    <tr key={m.first_name}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{m.first_name}</td>\r\n                      <td>{m.position_name}</td>\r\n                      <td>{totalTask ? selectedCount(totalTask, m.employe_id.toString()) : '-'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </>\r\n            </RoundedTable>\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>No data yet.</h6>\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MemberTab;\r\n","import React from 'react';\r\nimport { Card, CardBody, Col, Table } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\n\r\nconst FileTab = () => {\r\n  const { projectId } = useParams();\r\n\r\n  const api = useAxios();\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['files'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/files`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <Col>\r\n      <Card>\r\n        <CardBody>\r\n          {isLoading ? (\r\n            'Loading...'\r\n          ) : error ? (\r\n            'Something went wrong.'\r\n          ) : (\r\n            <Table className=\"no-wrap mt-3 align-middle\" hover style={{ zIndex: '-1' }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Filename</th>\r\n                  <th>Date Added</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ overflow: 'hidden' }}>\r\n                {data?.map((f, i) => (\r\n                  <tr key={f.file_id}>\r\n                    <td>{i + 1}</td>\r\n                    <td>\r\n                      <Link to={`${fileUrl}taskfiles/${f.file_name}`} target=\"blank\">\r\n                        {f.file_name}\r\n                      </Link>\r\n                    </td>\r\n                    <td>{newDate(f.created_at)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default FileTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst ReviewTab = ({ setTotalReview }) => {\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [taskId, setTaskId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [comments, setComments] = useState();\r\n  const [employeId, setEmployeId] = useState();\r\n  const api = useAxios();\r\n  const [listReview, setListReview] = useState([]);\r\n\r\n  const { isLoading, error, refetch, isRefetching } = useQuery({\r\n    queryKey: ['review'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/level1/review`).then((res) => {\r\n        setListReview(res.data.data);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalReview(listReview.length);\r\n  }, [listReview]);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  const fileUrl = process.env.REACT_APP_FILEURL;\r\n\r\n  const handleForm = (modeRes, task, employe) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setTaskId(task);\r\n    setEmployeId(employe);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: employeId,\r\n        status: mode === 'approve' ? 3 : 4,\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        alert('success', `Task has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    refetch();\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          // {isLoading ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          listReview.map((task, i) => (\r\n            <Card key={task.approval_id} className=\"custom-card\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      #{i + 1}\r\n                    </Badge>\r\n                    <Badge color=\"info\" className=\"\">\r\n                      {task.first_name}\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(task.send_date)}</span>\r\n                </CardTitle>\r\n                <h5>\r\n                  <strong>{task.task_title}</strong>\r\n                </h5>\r\n                <p>{task.task_desc}</p>\r\n                <span className=\"text-dark\">Attachment:</span>\r\n                <div className=\"\">\r\n                  {task.files.length > 0\r\n                    ? task.files.map((f, idx) => (\r\n                        <div key={f.file_name} className=\"d-flex gap-3\">\r\n                          <span>{idx + 1}.</span>\r\n                          <Link\r\n                            className=\"file-link\"\r\n                            to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                            target=\"blank\"\r\n                          >\r\n                            {f.file_name}\r\n                          </Link>\r\n                        </div>\r\n                      ))\r\n                    : '-'}\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Start at: </span>\r\n                      <br /> {newDate(task.start_date).split(',')[0]}\r\n                    </div>\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Due at: </span>\r\n                      <br /> {newDate(task.end_date).split(',')[0]}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', task.task_id, task.employe_id)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      onClick={() => handleForm('approve', task.task_id, task.employe_id)}\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ))\r\n        )}\r\n        {/* <Card>\r\n        <CardBody>\r\n        <CardTitle tag=\"h4\">\r\n        <Badge color=\"success\">Approved</Badge>\r\n        </CardTitle>\r\n        <Table className=\"no-wrap mt-3 align-middle\" hover style={{ zIndex: '-1' }}>\r\n        <thead>\r\n        <tr>\r\n        <th>#</th>\r\n        <th>Employee</th>\r\n        <th>Task</th>\r\n        <th>Attachment</th>\r\n        <th>Approved at</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {data.map((task, i) => (\r\n            <tr key={task.approval_id}>\r\n            <td>{i + 1}</td>\r\n            <td>{task.first_name}</td>\r\n            <td>{task.task_title}</td>\r\n            <td>{task.file}</td>\r\n            <td>{newDate(task.created_at)}</td>\r\n            </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n            </CardBody>\r\n        </Card> */}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewTab.propTypes = {\r\n  setTotalReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewTab;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst HandoverTab = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newStage, setNewStage] = useState({});\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['review'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${auth?.user.employe_id}/${projectId}/handover`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const handleConfirm = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api\r\n      .post(`api/project/${data?.history_id}/confirm`, newStage)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewStage((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          data !== null && (\r\n            <Card className=\"custom-card\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Handover project\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.from_division}</strong> to{' '}\r\n                    <strong>{data.to_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <p></p>\r\n                <span className=\"text-dark\">BAST File:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link\r\n                      className=\"file-link\"\r\n                      to={`${fileUrl}project/${data.file}`}\r\n                      target=\"blank\"\r\n                    >\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.from_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      outline\r\n                      onClick={toggle.bind(null)}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Confirmation</ModalHeader>\r\n        <form onSubmit={handleConfirm}>\r\n          <ModalBody>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6 className=\"fw-bold\">\r\n                Next stage:{' '}\r\n                {data?.current_stage?.phase === 1\r\n                  ? 'Planning'\r\n                  : data?.current_stage?.phase === 2\r\n                  ? 'Execution, Control & Monitoring'\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n            <FormGroup>\r\n              <Label htmlFor=\"desc_stage\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"desc_stage\"\r\n                id=\"desc_stage\"\r\n                placeholder=\"stage description here..\"\r\n                rows=\"3\"\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"start_date\">Start date</Label>\r\n                  <Input type=\"date\" id=\"start_date\" name=\"start_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"end_date\">End date</Label>\r\n                  <Input type=\"date\" id=\"end_date\" name=\"end_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"success\"\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n              // onClick={handleConfirm}\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                  Sending\r\n                </>\r\n              ) : (\r\n                'Send'\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HandoverTab;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\nimport { Badge, Button, Card, CardBody, Col, Input, Row, Spinner } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport TaskPopup from './TaskPopup';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport PDFFile from './PDFFile';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport './ProjectTable.scss';\r\n// import TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst ActivityTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [task, setTask] = useState(undefined);\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const [isDirector, setIsDirector] = useState(false);\r\n  const [projectTitle, setProjectTitle] = useState();\r\n  const [filterSearch, setFilterSearch] = useState();\r\n  const api = useAxios();\r\n\r\n  const { search } = useLocation();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['act'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/activities/all${search}`).then((res) => {\r\n        setProjectTitle(res.data.project);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFilterSearch(data);\r\n  }, [data]);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  const favoriteAllowedRoles = ['Director'];\r\n  const reportTaskAllowedRoles = ['Manager'];\r\n\r\n  useEffect(() => {\r\n    if (auth?.user.roles.find((role) => favoriteAllowedRoles.includes(role))) {\r\n      setIsDirector(true);\r\n    }\r\n  }, [auth]);\r\n\r\n  const handleSearch = (value) => {\r\n    const filterByTitle = data.filter((item) =>\r\n      item.task_title.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n\r\n    setFilterSearch(filterByTitle);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <Card className=\"rounded-3\">\r\n          <CardBody>\r\n            {isLoading ? (\r\n              'loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  <Col sm=\"12 mb-2\" md=\"6\">\r\n                    <div className=\"d-flex gap-2\">\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"filter_list\" style={{ fontSize: '12px' }} />\r\n                        Sort\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"tune\" style={{ fontSize: '12px' }} />\r\n                        Filters\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                  <Col sm=\"12\" md=\"6\">\r\n                    <div className=\"d-flex gap-3 col-md-6 w-100\">\r\n                      <div className=\"w-100 position-relative\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"rounded-3\"\r\n                          bsSize=\"md\"\r\n                          placeholder=\"Search task...\"\r\n                          onChange={(e) => handleSearch(e.target.value)}\r\n                        />\r\n                        <div className=\"position-absolute top-0 end-0 h-100 p-1\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light w-100 h-100 border-0 rounded-3 text-muted\"\r\n                            aria-describedby={id}\r\n                            variant=\"contained\"\r\n                            onClick={handleClick}\r\n                          >\r\n                            <MaterialIcon icon=\"more_horiz\" style={{ fontSize: '16px' }} />\r\n                          </Button>\r\n                          <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClick={handleClose}\r\n                            anchorOrigin={{\r\n                              vertical: 'bottom',\r\n                              horizontal: 'left',\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: 'top',\r\n                              horizontal: 'center',\r\n                            }}\r\n                          >\r\n                            <Typography sx={{ p: 2 }}>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Link to=\"#\">Task</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Employee</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Date</Link>\r\n                                </Row>\r\n                              </Col>\r\n                            </Typography>\r\n                          </Popover>\r\n                        </div>\r\n                      </div>\r\n                      {auth?.user.roles.find((role) => reportTaskAllowedRoles.includes(role)) && (\r\n                        <PDFDownloadLink\r\n                          document={<PDFFile {...{ projectTitle, data }} />}\r\n                          fileName={`Task Report - ${projectTitle?.project_number} - ${projectTitle?.division}`}\r\n                          style={{ textDecoration: 'none' }}\r\n                        >\r\n                          {/* {({ loading }) =>\r\n                          loading ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light d-flex rounded-3\"\r\n                            >\r\n                              Loading...\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light-info text-info d-flex align-items-center gap-2 rounded-3\"\r\n                            >\r\n                              <MaterialIcon icon=\"picture_as_pdf\" style={{ fontSize: '12px' }} />\r\n                              Report\r\n                            </Button>\r\n                          )\r\n                        } */}\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light-info text-info rounded-3 d-flex py-2\"\r\n                            // size=\"lg\"\r\n                          >\r\n                            <MaterialIcon icon=\"file_download\" style={{ fontSize: '18px' }} />\r\n                            {/* Report */}\r\n                          </Button>\r\n                        </PDFDownloadLink>\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Col sm=\"12 overflow-auto\">\r\n                  <h6 className=\"fw-bold mt-3\">List of tasks from {projectTitle?.division}</h6>\r\n                  <table className=\"rounded-corners\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th width=\"30\">#</th>\r\n                        <th>Task title</th>\r\n                        <th width=\"\">Status</th>\r\n                        <th>Progress</th>\r\n                        <th width=\"100\">PIC</th>\r\n                        {isDirector && <th width=\"50\"></th>}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filterSearch?.length > 0 ? (\r\n                        filterSearch?.map((ts, idx) => (\r\n                          <Fragment key={ts.task_id}>\r\n                            <tr>\r\n                              <td>{idx + 1}.</td>\r\n                              <td style={{ cursor: 'pointer' }} onClick={() => openPopup(ts)}>\r\n                                <span style={{ fontWeight: '600' }}>{ts.task_title}</span>\r\n                                <br></br>\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  {ts?.subtasks?.length} subtask\r\n                                </Badge>\r\n                                {'  '}\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                  {ts.comments}\r\n                                </Badge>\r\n                              </td>\r\n                              <td>\r\n                                {ts.status === 0 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    To Do\r\n                                  </Badge>\r\n                                ) : ts.status === 1 ? (\r\n                                  <Badge color=\"warning\">In Progress</Badge>\r\n                                ) : ts.status === 2 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    Under Review\r\n                                  </Badge>\r\n                                ) : ts.status === 3 ? (\r\n                                  <Badge color=\"success\">Approved</Badge>\r\n                                ) : (\r\n                                  <Badge color=\"danger\">Revision</Badge>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                                  {ts?.task_progress?.toFixed()}%\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"members\">\r\n                                  <div className=\"member-item\">\r\n                                    {ts?.pics?.map(\r\n                                      (pic, i) =>\r\n                                        i < 2 && (\r\n                                          <div key={pic.id} className=\"ava-img\">\r\n                                            <img\r\n                                              id={`tooltip-${pic.id}`}\r\n                                              src={user1}\r\n                                              className=\"rounded-circle\"\r\n                                              alt=\"avatar\"\r\n                                              width=\"35\"\r\n                                              height=\"35\"\r\n                                            />\r\n                                            <TooltipHover\r\n                                              title={pic.first_name}\r\n                                              id={pic.id?.toString()}\r\n                                            />\r\n                                          </div>\r\n                                        ),\r\n                                    )}\r\n                                    {ts?.pics?.length > 2 && (\r\n                                      <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                        +{ts.pics.length - 2}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              {isDirector && (\r\n                                <td className=\"text-center\">\r\n                                  {addingFavorite && taskIdSelected === ts.task_id ? (\r\n                                    <Spinner size=\"sm\" color=\"warning\" />\r\n                                  ) : (\r\n                                    <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"fav-btn\"\r\n                                        onClick={() => handleFavorite(ts.task_id)}\r\n                                      >\r\n                                        <MaterialIcon\r\n                                          icon=\"star\"\r\n                                          className={`${ts.isFavorite && 'is_favorite'}`}\r\n                                        />\r\n                                      </button>\r\n                                    </abbr>\r\n                                  )}\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                            {ts.subtasks.length > 0 &&\r\n                              ts.subtasks.map((st) => (\r\n                                <tr key={st.task_id}>\r\n                                  <td></td>\r\n                                  <td onClick={() => openPopup(st)} style={{ cursor: 'pointer' }}>\r\n                                    {st.task_title}\r\n                                    <br></br>\r\n                                    <Badge color=\"light\" className=\"text-muted\">\r\n                                      <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                      {st.comments}\r\n                                    </Badge>\r\n                                  </td>\r\n\r\n                                  <td>\r\n                                    {/* {st.status === 0 ? (\r\n                                <Badge color=\"light\" className=\"text-dark\">\r\n                                  To Do\r\n                                </Badge>\r\n                              ) : st.status === 1 ? (\r\n                                <Badge color=\"warning\">In Progress</Badge>\r\n                              ) : st.status === 2 ? (\r\n                                <Badge color=\"light\" className=\"text-dark\">\r\n                                  Under Review\r\n                                </Badge>\r\n                              ) : st.status === 3 ? (\r\n                                <Badge color=\"success\">Approved</Badge>\r\n                              ) : (\r\n                                <Badge color=\"danger\">Revision</Badge>\r\n                              )} */}\r\n                                    -\r\n                                  </td>\r\n                                  <td>\r\n                                    <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                      {st?.task_progress?.toFixed()}%\r\n                                    </span>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"members\">\r\n                                      <div className=\"member-item\">\r\n                                        {st?.pics?.map(\r\n                                          (pic, i) =>\r\n                                            i < 2 && (\r\n                                              <div key={pic.id} className=\"ava-img\">\r\n                                                <img\r\n                                                  id={`tooltip-${pic.id}`}\r\n                                                  src={user1}\r\n                                                  className=\"rounded-circle\"\r\n                                                  alt=\"avatar\"\r\n                                                  width=\"35\"\r\n                                                  height=\"35\"\r\n                                                />\r\n                                                <TooltipHover\r\n                                                  title={pic.first_name}\r\n                                                  id={pic.id?.toString()}\r\n                                                />\r\n                                              </div>\r\n                                            ),\r\n                                        )}\r\n                                        {st?.pics?.length > 2 && (\r\n                                          <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                            +{st.pics.length - 2}\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </td>\r\n                                  {isDirector && (\r\n                                    <td className=\"text-center\">\r\n                                      {addingFavorite && taskIdSelected === st.task_id ? (\r\n                                        <Spinner size=\"sm\" color=\"warning\" />\r\n                                      ) : (\r\n                                        <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                          <button\r\n                                            type=\"button\"\r\n                                            className=\"fav-btn\"\r\n                                            onClick={() => handleFavorite(st.task_id)}\r\n                                          >\r\n                                            <MaterialIcon\r\n                                              icon=\"star\"\r\n                                              className={`${st.isFavorite && 'is_favorite'}`}\r\n                                            />\r\n                                          </button>\r\n                                        </abbr>\r\n                                      )}\r\n                                    </td>\r\n                                  )}\r\n                                </tr>\r\n                              ))}\r\n                          </Fragment>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"5\" align=\"center\">\r\n                            Data not found.\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task }} mode=\"activities\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst ReviewBastTab = ({ setTotalBastReview }) => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [comments, setComments] = useState();\r\n  const [oldPic, setOldPic] = useState();\r\n  const [notifTo, setNotifTo] = useState();\r\n  const [reviewBy, setReviewBy] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['bast-review'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTotalBastReview(10);\r\n  }, [data]);\r\n\r\n  const handleForm = (modeRes, oldPicP, notifToId, byEmploye) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setOldPic(oldPicP || null);\r\n    setNotifTo(notifToId);\r\n    setReviewBy(byEmploye);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(`api/project/${data?.history_id}/bast/approval`, {\r\n        project_id: projectId,\r\n        old_pic: oldPic,\r\n        notif_to: notifTo,\r\n        review_by: reviewBy,\r\n        status: mode === 'approve' ? 'handover' : 'revision',\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', `BAST has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading ? (\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <Card className=\"custom-card\">\r\n            {data && (\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Review BAST\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.old_pic_division}</strong> to{' '}\r\n                    <strong>{data.new_pic_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <span className=\"text-dark\">BAST file:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link className=\"file-link\" to=\"\" target=\"blank\">\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.old_pic_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', data.old_pic_id, data.review_by)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      onClick={() =>\r\n                        handleForm('approve', data.old_pic_id, data.new_pic_id, data.review_by)\r\n                      }\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewBastTab.propTypes = {\r\n  setTotalBastReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewBastTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OverviewTab from './OverviewTab';\r\nimport BoardTab from './BoardTab';\r\nimport MemberTab from './MemberTab';\r\nimport FileTab from './FileTab';\r\nimport ReviewTab from './ReviewTab';\r\nimport HandoverTab from './HandoverTab';\r\nimport ActivityTab from './ActivityTab';\r\nimport ReviewBastTab from './ReviewBastTab';\r\n\r\nconst ProjectDetailTab = ({ navActive, setTotalReview, setTotalBastReview }) => {\r\n  return (\r\n    <>\r\n      {navActive === 1 && <OverviewTab />}\r\n      {navActive === 2 && <BoardTab />}\r\n      {navActive === 3 && <MemberTab />}\r\n      {navActive === 4 && <FileTab />}\r\n      {navActive === 5 && <ReviewTab {...{ setTotalReview }} />}\r\n      {navActive === 6 && <HandoverTab />}\r\n      {navActive === 7 && <ActivityTab />}\r\n      {navActive === 8 && <ReviewBastTab {...{ setTotalBastReview }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nProjectDetailTab.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setTotalReview: PropTypes.func,\r\n  setTotalBastReview: PropTypes.func,\r\n};\r\n\r\nexport default ProjectDetailTab;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Card, CardBody, Col, Row } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport './Project.scss';\r\n\r\nconst allowedRolesForReview = ['Manager', 'Director'];\r\nconst allowedRolesForBastReview = ['Director'];\r\n\r\nconst ProjectNav = ({ navActive, setNavActive, totalReview, totalBastReview }) => {\r\n  const [currentTotalReview, setCurrentTotalReview] = useState('');\r\n  const [currentTotalBastReview, setCurrentTotalBastReview] = useState(0);\r\n  const { auth } = useAuth();\r\n  const { roles } = auth.user;\r\n  const api = useAxios();\r\n  const { projectId } = useParams();\r\n  const [actionMenu, setActionMenu] = useState(false);\r\n  const [isBusiness, setIsBusiness] = useState();\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n\r\n  const queryTo = queryParams.get('to');\r\n\r\n  useEffect(() => {\r\n    if (queryTo === 'review') {\r\n      setNavActive(5);\r\n    } else if (queryTo === 'handover') {\r\n      setNavActive(6);\r\n    } else if (queryTo === 'overview') {\r\n      setNavActive(1);\r\n    } else if (queryTo === 'activities') {\r\n      setNavActive(7);\r\n    } else if (queryTo === 'bast-review') {\r\n      setNavActive(8);\r\n    }\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalReview() {\r\n      await api\r\n        .get(`api/task/${projectId}/level1/review`)\r\n        .then((res) => setCurrentTotalReview(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForReview.includes(role))) {\r\n      fetchTotalReview();\r\n    }\r\n  }, [totalReview]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalBastReview() {\r\n      await api\r\n        .get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`)\r\n        .then((res) => {\r\n          setCurrentTotalBastReview(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForBastReview.includes(role))) {\r\n      fetchTotalBastReview();\r\n    }\r\n  }, [totalBastReview]);\r\n\r\n  const { isLoading, data } = useQuery({\r\n    queryKey: ['project-number'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const BoardAllowedRoles = ['Staff', 'Manager'];\r\n  const MembersAllowedRoles = ['Staff', 'Manager', 'Director'];\r\n  const ActivitiesAllowedRoles = ['Manager', 'Director'];\r\n  const FilesAllowedRoles = ['Staff'];\r\n  const BASTReviewAllowedRoles = ['Director'];\r\n  const BASTAndReviewNotAllowedRoles = 'Presdir';\r\n  const ReviewTaskAllowedRoles = ['Manager', 'Director'];\r\n  const HandoverAllowedRoles = ['Manager'];\r\n\r\n  return (\r\n    <Col>\r\n      <Col className=\"d-flex justify-content-between gap-3 mb-3 align-items-center\">\r\n        <div className=\"project-nav overflow-auto\">\r\n          <Link\r\n            className={`${navActive === 1 && 'active'} text-muted fw-bold`}\r\n            onClick={() => setNavActive(1)}\r\n          >\r\n            Overview\r\n          </Link>\r\n          {auth?.user?.roles.find((role) => BoardAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 2 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(2)}\r\n            >\r\n              Board\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => ActivitiesAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 7 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(7)}\r\n            >\r\n              Activities\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => FilesAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 4 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(4)}\r\n              >\r\n                Files\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => BASTReviewAllowedRoles.includes(role)) &&\r\n            !auth?.user?.roles.includes(BASTAndReviewNotAllowedRoles) && (\r\n              <Link\r\n                className={`${navActive === 8 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(8)}\r\n              >\r\n                BAST Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalBastReview ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalBastReview?.length}\r\n                </div>\r\n              </Link>\r\n            )}\r\n          {auth?.user?.roles.find((role) => ReviewTaskAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 5 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(5)}\r\n              >\r\n                Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalReview?.length > 0 ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalReview?.length}\r\n                </div>\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => HandoverAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 6 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(6)}\r\n            >\r\n              Handover{' '}\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => MembersAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 3 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(3)}\r\n            >\r\n              Members\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <h3 className=\"fw-bold\">{isLoading ? 'Loading..' : data?.project_number}</h3>\r\n      </Col>\r\n\r\n      <Card className=\"rounded-3 mb-3\">\r\n        <CardBody>\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <Row>\r\n              <Col lg=\"8\">\r\n                <Row md=\"12\">\r\n                  <h5 className=\"fw-bold\">{data?.project_name}</h5>\r\n                </Row>\r\n                {isBusiness ? (\r\n                  <Row lg=\"12\">\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"manage_accounts\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Partner\r\n                          </span>\r\n                          <small className=\"fw-bold\">{data?.current_stage?.partner || '-'}</small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"handshake\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Schema\r\n                          </span>\r\n                          <small className=\"fw-bold\">\r\n                            {data?.current_stage?.schema === 'jo'\r\n                              ? 'Join Operational'\r\n                              : data?.current_stage?.schema === 'jv'\r\n                              ? 'Join Venture'\r\n                              : '-'}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"play_circle_outline\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Phase\r\n                          </span>\r\n                          <small className=\"fw-bold\">{data?.current_stage?.phase}</small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  <Row lg=\"12\">\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <MaterialIcon icon=\"work_off\" style={{ fontSize: '18px' }} />\r\n                      <small className=\"fw-bold\">Non-business</small>\r\n                    </div>\r\n                  </Row>\r\n                )}\r\n              </Col>\r\n              <Col lg=\"4\" className=\"d-flex align-items-center justify-content-end\">\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <div\r\n                    className=\"d-flex flex-column align-items-end\"\r\n                    style={{ marginLeft: '10px' }}\r\n                  >\r\n                    <small className=\"fw-bold\">{data?.pic_active.first_name}</small>\r\n                    <span className=\"fw-bold\" style={{ fontSize: '14px' }}>\r\n                      {data?.pic_active.organization_name}\r\n                    </span>\r\n                    {/* {data?.category === 'business' && (\r\n                      <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block fw-bold\">\r\n                        <div className=\"d-flex justify-content-center gap-1 align-items-center\">\r\n                          <MaterialIcon icon=\"play_circle_outline\" style={{ fontSize: '12px' }} />\r\n                          {data?.current_stage??.phase}\r\n                        </div>\r\n                      </span>\r\n                    )} */}\r\n                  </div>\r\n                  <img src={user1} className=\"rounded-circle\" alt=\"avatar\" width=\"35\" height=\"35\" />\r\n                  {auth?.user.first_name === data?.created_by ? (\r\n                    <div className=\"action-table\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn d-flex\"\r\n                        onClick={() => setActionMenu(true)}\r\n                      >\r\n                        <MaterialIcon icon=\"more_vert\" />\r\n                      </button>\r\n                      {actionMenu && (\r\n                        <>\r\n                          <div className=\"action-overlay\" onClick={() => setActionMenu(false)} />\r\n                          <div className=\"action-options\">\r\n                            <Link to=\"/\" className=\"text-muted\">\r\n                              <MaterialIcon icon=\"update\" />\r\n                              Update\r\n                            </Link>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"text-muted fw-bold\"\r\n                              onClick={() => setActionMenu(undefined)}\r\n                            >\r\n                              <MaterialIcon icon=\"delete\" />\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nProjectNav.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setNavActive: PropTypes.func,\r\n  totalReview: PropTypes.number,\r\n  totalBastReview: PropTypes.number,\r\n};\r\n\r\nexport default ProjectNav;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  task: ['satu', 'dua'],\r\n};\r\n\r\nexport const TaskContext = createContext(INITIAL_STATE);\r\n\r\nconst TaskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TASK':\r\n      return {\r\n        task: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TaskContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(TaskReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        task: state.task,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nTaskContextProvider.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport ProjectDetailTab from './ProjectDetailTab';\r\nimport './ProjectDetail.scss';\r\nimport ProjectNav from './ProjectNav';\r\nimport { TaskContextProvider } from '../../context/TaskContext';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst ProjectDetail = () => {\r\n  const { auth } = useAuth();\r\n  const { roles } = auth?.user;\r\n  const [navActive, setNavActive] = useState(2);\r\n  const [totalReview, setTotalReview] = useState(0);\r\n  const [totalBastReview, setTotalBastReview] = useState(0);\r\n  // const [isOwner, setIsOwner] = useState();\r\n\r\n  useEffect(() => {\r\n    if (roles.includes('Director')) {\r\n      setNavActive(1);\r\n    }\r\n  }, [roles]);\r\n\r\n  // const { data } = useQuery({\r\n  //   queryKey: ['employe'],\r\n  //   queryFn: () =>\r\n  //     api.get(`api/employe/${auth?.user.employe_id}`).then((res) => {\r\n  //       setIsOwner()\r\n  //       return res.data.data;\r\n  //     }),\r\n  // });\r\n\r\n  // console.log(data);\r\n\r\n  return (\r\n    <TaskContextProvider>\r\n      <>\r\n        <ProjectNav {...{ navActive, setNavActive, totalReview, totalBastReview }} />\r\n        <ProjectDetailTab {...{ navActive, setTotalReview, setTotalBastReview }} />\r\n      </>\r\n    </TaskContextProvider>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n","const rupiah = (number) => {\r\n  return new Intl.NumberFormat('id-ID', {\r\n    style: 'currency',\r\n    currency: 'IDR',\r\n  }).format(number);\r\n};\r\n\r\nexport default rupiah;\r\n","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction ModalFooter(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nModalFooter.propTypes = propTypes;\nexport default ModalFooter;"],"names":["styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","text","margin","image","marginVertical","marginHorizontal","width","height","header","marginBottom","color","fontWeight","pageNumber","position","bottom","left","right","printAt","table","display","borderStyle","borderWidth","borderRightWidth","borderBottomWidth","tableRow","flexDirection","tableCol","borderLeftWidth","borderTopWidth","tableCell","marginTop","marginLeft","marginRight","today","currentDate","Date","concat","toDateString","toLocaleString","split","_ref","projectTitle","data","_jsx","Document","children","_jsxs","Page","style","backgroundColor","Text","fixed","project_name","partner","division","phase","schema","View","map","item","i","Fragment","task_title","status","end_date","pics","p","first_name","id","subtasks","st","task_id","render","_ref2","totalPages","_excluded","_extends","Object","assign","bind","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","propTypes","animated","PropTypes","bar","barAriaLabelledBy","barAriaValueText","barClassName","barStyle","className","cssModule","max","min","multi","striped","tag","tagPropType","Progress","props","_props$value","_props$min","_props$max","_props$tag","Tag","_props$style","_props$barStyle","attributes","percent","toNumber","progressClasses","mapToCssModules","classNames","progressBarProps","role","React","animatedComponents","makeAnimated","remaininDays","endDate","todayBad","day","month","year","todayMerge","getTime","OverviewTab","_data$current_stage2","_data$current_stage3","_data$current_stage4","_data$current_stage5","_data$current_stage6","auth","useAuth","projectId","useParams","history","setHistory","useState","modal","setModal","newPic","setNewPic","listEmployee","setListEmploye","loading","setLoading","bst","setBst","activePhase","setActivePhase","undefined","selectedSchema","setSelectedSchema","isBusiness","setIsBusiness","partnerOptions","setPartnerOptions","selectedPartner","setSelectedPartner","taskByStatus","setTaskByStatus","todo","inprogress","underReview","done","api","useAxios","toggle","isLoading","error","useQuery","queryKey","queryFn","get","then","res","useEffect","_data$task_by_active_","_data$task_by_active_2","_data$task_by_active_3","_data$task_by_active_4","_data$current_stage","todofFiltered","task_by_active_user","task","parseInt","inProgressfFiltered","doneFiltered","underReviewFiltered","current_stage","phase_id","category","fetsHistory","async","catch","err","console","log","fetchEmployees","allTaskPermission","fetchPartnerOptions","_Fragment","Col","lg","Card","CardBody","Row","CardTitle","desc","goals","level_desc","base_description","trim","substring","IndoDate","start_date","borderRadius","src","user1","alt","pic_active","rupiah","estimated_cost","estimated_income","h","_auth$user","organization_name","history_desc","user","roles","find","includes","Link","to","organization_id","textDecoration","active","newDate","created_at","history_id","img","TooltipHover","toString","total_progress","toFixed","MaterialIcon","icon","Button","type","disabled","outline","onClick","Modal","isOpen","size","fade","centered","ModalHeader","onSubmit","e","preventDefault","post","project_id","new_pic","file","headers","alert","ModalBody","FormGroup","Label","Input","name","defaultValue","for","onChange","Select","components","options","choice","htmlFor","files","ModalFooter","Spinner","setNewTaskOpen","setAddSubtaskOpen","refetch","taskId","setTask","assignedEmployees","setAssignedEmployees","navigate","useNavigate","employe_id","label","handleChange","prev","closeForm","task_pic","task_parent","arrayId","em","message","encType","placeholder","required","assigneModal","isMulti","addSubtaskOpen","updating","setUpdating","taskIdActive","setTaskIdActive","setStatus","openPopup","selectedTask","handleTaskStatus","taskStatus","put","response","menuOptions","td","_td$pics","_td$pics2","Badge","task_progress","pic","ActionMenu","action","progress","comments","CircularPercentage","TaskForm","idx","TaskPopup","isRefetching","newTaskOpen","block","BoardTask","BoardTab","todos","setTodos","inProgress","setInProgress","Done","setDone","isMemberActive","setIsMemberActive","is_member_active","tasks","taska","DoneFiltered","BoardToDo","BoardInProgress","BoardDone","MemberTab","totalTask","setTotalTask","count_task","RoundedTable","overflow","m","position_name","row","selectedCount","FileTab","Table","hover","zIndex","f","process","file_name","file_id","setTotalReview","mode","setMode","setTaskId","setComments","employeId","setEmployeId","listReview","setListReview","fileUrl","REACT_APP_FILEURL","handleForm","modeRes","employe","send_date","task_desc","approval_id","Form","note","rows","HandoverTab","newStage","setNewStage","from_division","to_division","old_pic","md","ActivityTab","taskIdSelected","setTaskIdSelected","addingFavorite","setAddingFavorite","isDirector","setIsDirector","setProjectTitle","filterSearch","setFilterSearch","search","useLocation","project","handleFavorite","favoriteAllowedRoles","reportTaskAllowedRoles","anchorEl","setAnchorEl","open","Boolean","sm","bsSize","filterByTitle","toLowerCase","handleSearch","variant","event","currentTarget","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","sx","PDFDownloadLink","document","PDFFile","fileName","project_number","ts","_ts$subtasks","_ts$task_progress","_ts$pics","_ts$pics2","cursor","_pic$id","isFavorite","_st$task_progress","_st$pics","_st$pics2","_pic$id2","colSpan","align","setTotalBastReview","oldPic","setOldPic","notifTo","setNotifTo","reviewBy","setReviewBy","oldPicP","notifToId","byEmploye","old_pic_division","new_pic_division","old_pic_id","review_by","new_pic_id","notif_to","navActive","ReviewTab","ReviewBastTab","allowedRolesForReview","allowedRolesForBastReview","_auth$user2","_auth$user3","_auth$user4","_auth$user5","_auth$user6","_auth$user7","_auth$user8","setNavActive","totalReview","totalBastReview","currentTotalReview","setCurrentTotalReview","currentTotalBastReview","setCurrentTotalBastReview","actionMenu","setActionMenu","queryParams","URLSearchParams","window","location","queryTo","fetchTotalReview","fetchTotalBastReview","BoardAllowedRoles","MembersAllowedRoles","ActivitiesAllowedRoles","FilesAllowedRoles","BASTReviewAllowedRoles","ReviewTaskAllowedRoles","HandoverAllowedRoles","created_by","INITIAL_STATE","TaskContext","createContext","TaskReducer","state","payload","TaskContextProvider","dispatch","useReducer","Provider","ProjectDetail","ProjectNav","ProjectDetailTab","number","Intl","NumberFormat","currency","format","classes"],"sourceRoot":""}