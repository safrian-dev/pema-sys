{"version":3,"file":"static/js/1140.b382935f.chunk.js","mappings":"8JAIA,MAmFA,EAnF2BA,IAAsB,IAArB,KAAEC,EAAI,MAAEC,GAAOF,EACzC,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,OACEC,QAAQ,YACRH,UAAS,kBAAAI,OAA6B,MAATP,EAAe,QAAmB,MAATA,EAAe,OAASC,GAAQG,SAAA,EAEtFF,EAAAA,EAAAA,KAAA,QACEC,UAAU,YACVK,EAAE,uFAIJN,EAAAA,EAAAA,KAAA,QACEC,UAAU,SACVM,gBAAe,GAAAF,OAAKP,EAAI,SACxBQ,EAAE,sFAIM,MAATR,GACCE,EAAAA,EAAAA,KAAA,QAAMQ,EAAE,KAAKC,EAAE,QAAQR,UAAU,aAAaS,MAAO,CAAEC,SAAU,QAAST,SAAC,YAI3EC,EAAAA,EAAAA,MAAA,QAAMK,EAAE,KAAKC,EAAE,QAAQR,UAAU,aAAYC,SAAA,CAC1CJ,EAAK,aA+CV,C,qFC1EV,MAAMc,EAASC,EAAAA,GAAWC,OAAO,CAC/BC,KAAM,CACJC,WAAY,GACZC,cAAe,GACfC,kBAAmB,IAErBC,MAAO,CACLR,SAAU,GACVS,UAAW,UAEbC,KAAM,CACJC,OAAQ,GACRX,SAAU,GACVS,UAAW,WAEbG,MAAO,CACLC,eAAgB,EAChBC,iBAAkB,GAClBC,MAAO,GACPC,OAAQ,IAEVC,OAAQ,CACNjB,SAAU,GACVkB,aAAc,EACdT,UAAW,OACXrB,MAAO,UACP+B,WAAY,QAEdC,WAAY,CACVC,SAAU,WACVrB,SAAU,GACVsB,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPf,UAAW,SACXrB,MAAO,QAETqC,QAAS,CACPJ,SAAU,WACVrB,SAAU,EACVsB,OAAQ,GACRC,KAAM,GACNC,MAAO,EACPf,UAAW,OACXrB,MAAO,QAETsC,MAAO,CACLC,QAAS,QACTZ,MAAO,OACPa,YAAa,QACbC,YAAa,EACbC,iBAAkB,EAClBC,kBAAmB,EACnB3C,MAAO,WAET4C,SAAU,CACRrB,OAAQ,OACRsB,cAAe,OAEjBC,SAAU,CACRN,YAAa,QACbC,YAAa,EACbM,gBAAiB,EACjBC,eAAgB,GAElBC,UAAW,CAETC,UAAW,EACXpB,aAAc,EACdqB,WAAY,EACZC,YAAa,EACbxC,SAAU,MAIRyC,EAAQA,KACZ,MAAMC,EAAc,IAAIC,KACxB,MAAM,GAANjD,OAAUgD,EAAYE,eAAc,MAAAlD,OAAKgD,EAAYG,iBAAiBC,MAAM,KAAK,GAAE,EAoHrF,EAjHgB5D,IAA6B,IAA5B,aAAE6D,EAAY,KAAE5D,GAAMD,EAGrC,OACEG,EAAAA,EAAAA,KAAC2D,EAAAA,GAAQ,CAAAzD,UACPC,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAClD,MAAO,IAAKE,EAAOG,KAAM8C,gBAJjB,QAI8C3D,SAAA,EAC1DC,EAAAA,EAAAA,MAAC2D,EAAAA,GAAI,CAACpD,MAAOE,EAAOgB,OAAQmC,OAAK,EAAA7D,SAAA,CAAC,aACT,OAAZwD,QAAY,IAAZA,OAAY,EAAZA,EAAcM,iBAE3B7D,EAAAA,EAAAA,MAAC2D,EAAAA,GAAI,CAACpD,MAAOE,EAAOgB,OAAQmC,OAAK,EAAA7D,SAAA,CAAC,aACT,OAAZwD,QAAY,IAAZA,OAAY,EAAZA,EAAcO,YAE3B9D,EAAAA,EAAAA,MAAC2D,EAAAA,GAAI,CAACpD,MAAOE,EAAOgB,OAAQmC,OAAK,EAAA7D,SAAA,CAAC,cACR,OAAZwD,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,aAE5B/D,EAAAA,EAAAA,MAAC2D,EAAAA,GAAI,CAACpD,MAAOE,EAAOgB,OAAQmC,OAAK,EAAA7D,SAAA,CAAC,WACX,OAAZwD,QAAY,IAAZA,OAAY,EAAZA,EAAcS,UAEzBhE,EAAAA,EAAAA,MAAC2D,EAAAA,GAAI,CAACpD,MAAOE,EAAOgB,OAAQmC,OAAK,EAAA7D,SAAA,CAAC,YACG,QAAb,OAAZwD,QAAY,IAAZA,OAAY,EAAZA,EAAcU,QAAkB,mBAAqB,mBAEjEjE,EAAAA,EAAAA,MAACkE,EAAAA,GAAI,CAAC3D,MAAOE,EAAOyB,MAAMnC,SAAA,EACxBC,EAAAA,EAAAA,MAACkE,EAAAA,GAAI,CAAC3D,MAAOE,EAAO+B,SAASzC,SAAA,EAC3BF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,MAAOxB,UAC/CF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAC,WAEjCF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAC,kBAEjCF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAC,cAEjCF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAC,gBAEjCF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAC,aAG9B,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,KAAI,CAACC,EAAMC,KAAC,IAAAC,EAAAC,EAAA,OACjBvE,EAAAA,EAAAA,MAACwE,EAAAA,SAAQ,CAAAzE,SAAA,EACPC,EAAAA,EAAAA,MAACkE,EAAAA,GAAI,CAAC3D,MAAOE,EAAO+B,SAASzC,SAAA,EAC3BF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,MAAOxB,UAC/CF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAO,IAAKE,EAAOoC,UAAW5B,UAAW,UAAWlB,SAAEsE,EAAI,OAElExE,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAEqE,EAAKK,gBAEvC5E,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAO,IAAKE,EAAOoC,UAAWrC,SAAU,QAAST,SACpC,IAAhBqE,EAAKM,OACF,QACgB,IAAhBN,EAAKM,OACL,cACgB,IAAhBN,EAAKM,OACL,eACgB,IAAhBN,EAAKM,OACL,WACA,gBAGR7E,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAEqE,EAAKO,cAEvC9E,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,SACtC,QADsCuE,EAC/CF,EAAKQ,YAAI,IAAAN,OAAA,EAATA,EAAWH,KAAKU,IACfhF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAC3B8E,EAAEC,YAD+BD,EAAEE,WAM/B,QADNR,EACNH,EAAKY,eAAO,IAAAT,OAAA,EAAZA,EAAcJ,KAAKc,IAAE,IAAAC,EAAA,OACpBlF,EAAAA,EAAAA,MAACkE,EAAAA,GAAI,CAAC3D,MAAOE,EAAO+B,SAASzC,SAAA,EAC3BF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,MAAOxB,UAC/CF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,eAEtBhD,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAEkF,EAAGR,gBAErC5E,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAC,SAEjCF,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,UAChDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAAEkF,EAAGN,cAErC9E,EAAAA,EAAAA,KAACqE,EAAAA,GAAI,CAAC3D,MAAO,IAAKE,EAAOiC,SAAUnB,MAAO,OAAQxB,SACxC,QADwCmF,EAC/CD,EAAGL,YAAI,IAAAM,OAAA,EAAPA,EAASf,KAAKU,IACbhF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOoC,UAAU9C,SAC3B8E,EAAEC,YAD+BD,EAAEE,UAfTE,EAAGE,QAoB/B,MArDIf,EAAKe,QAuDT,QAGftF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CACHpD,MAAOE,EAAOmB,WACdwD,OAAQC,IAAA,IAAC,WAAEzD,EAAU,WAAE0D,GAAYD,EAAA,SAAAnF,OAAQ0B,EAAU,OAAA1B,OAAMoF,EAAU,KAEvEzF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACpD,MAAOE,EAAOwB,QAASmD,OAAQnC,QAE9B,C,sLC5LXsC,EAAY,CAAC,WAAY,YAAa,eAAgB,YAAa,QAAS,MAAO,MAAO,WAAY,UAAW,QAAS,MAAO,QAAS,MAAO,QAAS,WAAY,mBAAoB,qBAC9L,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIvB,EAAI,EAAGA,EAAIwB,UAAUC,OAAQzB,IAAK,CAAE,IAAI0B,EAASF,UAAUxB,GAAI,IAAK,IAAI2B,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,GAAU,CAAE,OAAOJ,CAAQ,EAAUJ,EAASY,MAAMC,KAAMR,UAAY,CAClV,SAASS,EAAQC,EAAQC,GAAkB,IAAIC,EAAOhB,OAAOgB,KAAKF,GAAS,GAAId,OAAOiB,sBAAuB,CAAE,IAAIC,EAAUlB,OAAOiB,sBAAsBH,GAASC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOpB,OAAOqB,yBAAyBP,EAAQM,GAAKE,UAAY,KAAKN,EAAKO,KAAKZ,MAAMK,EAAME,EAAU,CAAE,OAAOF,CAAM,CACpV,SAASQ,EAAcrB,GAAU,IAAK,IAAIvB,EAAI,EAAGA,EAAIwB,UAAUC,OAAQzB,IAAK,CAAE,IAAI0B,EAAS,MAAQF,UAAUxB,GAAKwB,UAAUxB,GAAK,CAAC,EAAGA,EAAI,EAAIiC,EAAQb,OAAOM,IAAS,GAAImB,SAAQ,SAAUlB,GAAOmB,EAAgBvB,EAAQI,EAAKD,EAAOC,GAAO,IAAKP,OAAO2B,0BAA4B3B,OAAO4B,iBAAiBzB,EAAQH,OAAO2B,0BAA0BrB,IAAWO,EAAQb,OAAOM,IAASmB,SAAQ,SAAUlB,GAAOP,OAAO6B,eAAe1B,EAAQI,EAAKP,OAAOqB,yBAAyBf,EAAQC,GAAO,GAAI,CAAE,OAAOJ,CAAQ,CACzf,SAASuB,EAAgBI,EAAKvB,EAAKwB,GAAiK,OAApJxB,KAAOuB,EAAO9B,OAAO6B,eAAeC,EAAKvB,EAAK,CAAEwB,MAAOA,EAAOT,YAAY,EAAMU,cAAc,EAAMC,UAAU,IAAkBH,EAAIvB,GAAOwB,EAAgBD,CAAK,CAChN,SAASI,EAAyB5B,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAK3B,EAAnEuB,EACzF,SAAuCG,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAK3B,EAA5DuB,EAAS,CAAC,EAAOiC,EAAapC,OAAOgB,KAAKV,GAAqB,IAAK1B,EAAI,EAAGA,EAAIwD,EAAW/B,OAAQzB,IAAO2B,EAAM6B,EAAWxD,GAAQuD,EAASE,QAAQ9B,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,CAAQ,CADhNmC,CAA8BhC,EAAQ6B,GAAuB,GAAInC,OAAOiB,sBAAuB,CAAE,IAAIsB,EAAmBvC,OAAOiB,sBAAsBX,GAAS,IAAK1B,EAAI,EAAGA,EAAI2D,EAAiBlC,OAAQzB,IAAO2B,EAAMgC,EAAiB3D,GAAQuD,EAASE,QAAQ9B,IAAQ,GAAkBP,OAAOQ,UAAUgC,qBAAqB9B,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,GAAQ,CAAE,OAAOJ,CAAQ,CAM3e,IAAIsC,EAAY,CAEdC,SAAUC,IAAAA,KACVC,IAAKD,IAAAA,KACLE,kBAAmBF,IAAAA,OACnBG,iBAAkBH,IAAAA,OAClBI,aAAcJ,IAAAA,OACdK,SAAUL,IAAAA,OACVrI,SAAUqI,IAAAA,KAEVtI,UAAWsI,IAAAA,OAEXM,UAAWN,IAAAA,OAEXxI,MAAOwI,IAAAA,OAEPO,IAAKP,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAE5CQ,IAAKR,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAC5CS,MAAOT,IAAAA,KAEPU,QAASV,IAAAA,KACT7H,MAAO6H,IAAAA,OAEPW,IAAKC,EAAAA,GAELxB,MAAOY,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,UAEhD,SAASa,EAASC,GAChB,IAAInJ,EAAWmJ,EAAMnJ,SACnBD,EAAYoJ,EAAMpJ,UAClB0I,EAAeU,EAAMV,aACrBE,EAAYQ,EAAMR,UAClBS,EAAeD,EAAM1B,MACrBA,OAAyB,IAAjB2B,EAA0B,EAAIA,EACtCC,EAAaF,EAAMN,IACnBA,OAAqB,IAAfQ,EAAwB,EAAIA,EAClCC,EAAaH,EAAMP,IACnBA,OAAqB,IAAfU,EAAwB,IAAMA,EACpClB,EAAWe,EAAMf,SACjBW,EAAUI,EAAMJ,QAChBlJ,EAAQsJ,EAAMtJ,MACdyI,EAAMa,EAAMb,IACZQ,EAAQK,EAAML,MACdS,EAAaJ,EAAMH,IACnBQ,OAAqB,IAAfD,EAAwB,MAAQA,EACtCE,EAAeN,EAAM3I,MACrBA,OAAyB,IAAjBiJ,EAA0B,CAAC,EAAIA,EACvCC,EAAkBP,EAAMT,SACxBA,OAA+B,IAApBgB,EAA6B,CAAC,EAAIA,EAC7ClB,EAAmBW,EAAMX,iBACzBD,EAAoBY,EAAMZ,kBAC1BoB,EAAa/B,EAAyBuB,EAAO3D,GAC3CoE,GAAUC,EAAAA,EAAAA,IAASpC,IAASoC,EAAAA,EAAAA,IAASjB,GAAO,IAC5CkB,GAAkBC,EAAAA,EAAAA,IAAgBC,IAAWjK,EAAW,YAAa4I,GAErEsB,EAAmB,CACrBlK,WAFuBgK,EAAAA,EAAAA,IAAgBC,IAAW,eAAgB1B,GAAMvI,GAA4B0I,EAAcL,EAAW,wBAA0B,KAAMvI,EAAQ,MAAMM,OAAON,GAAS,KAAMkJ,GAAWX,EAAW,uBAAyB,MAAOO,GAGvPnI,MAAO0G,EAAcA,EAAcA,EAAc,CAAC,EAAGoB,EAAM9H,EAAQ,CAAC,GAAIkI,GAAW,CAAC,EAAG,CACrFlH,MAAO,GAAGrB,OAAOyJ,EAAS,OAE5BM,KAAM,cACN,gBAAiBzC,EACjB,gBAAiBoB,EACjB,gBAAiBD,EACjB,iBAAkBJ,EAClB,kBAAmBD,EACnBvI,SAAUA,GAEZ,OAAIsI,EACkB6B,EAAAA,cAAoBX,EAAK/D,EAAS,CAAC,EAAGkE,EAAYM,IAEpDE,EAAAA,cAAoBX,EAAK/D,EAAS,CAAC,EAAGkE,EAAY,CACpEnJ,MAAOA,EACPT,UAAW+J,IACThB,EAAQ9I,EAAwBmK,EAAAA,cAAoB,MAAOF,GACjE,CACAf,EAASf,UAAYA,EACrB,U,mRCzDA,MAAMiC,GAAqBC,EAAAA,EAAAA,MAErBC,EAAgBC,IACpB,MAIMC,GAJY,IAAIpH,MAEeE,iBAEDC,MAAM,KAAK,GAEzCkH,EAAMD,EAASjH,MAAM,KAAK,GAC1BmH,EAAQF,EAASjH,MAAM,KAAK,GAC5BoH,EAAOH,EAASjH,MAAM,KAAK,GAE3BqH,EAAU,GAAAzK,OAAMwK,EAAI,KAAAxK,OAAIuK,EAAK,KAAAvK,OAAIsK,GAEjCvH,EAAQ,IAAIE,KAAKwH,GAQvB,OANiB,IAAIxH,KAAKmH,GAEJM,UAAY3H,EAAM2H,WAErB,KAEN,EAihBf,EA9gBoBC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,MACX,UAAEC,IAAcC,EAAAA,EAAAA,OACfC,EAASC,IAAcC,EAAAA,EAAAA,aACvBC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BG,EAAQC,IAAaJ,EAAAA,EAAAA,aACrBK,EAAcC,IAAkBN,EAAAA,EAAAA,aAChCO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCS,EAAKC,IAAUV,EAAAA,EAAAA,UAAS,KACxBW,EAAaC,IAAkBZ,EAAAA,EAAAA,eAASa,IACxCC,GAAgBC,KAAqBf,EAAAA,EAAAA,UAAS,KAC9CgB,GAAYC,KAAiBjB,EAAAA,EAAAA,aAC7BkB,GAAgBC,KAAqBnB,EAAAA,EAAAA,UAAS,KAC9CoB,GAAiBC,KAAsBrB,EAAAA,EAAAA,eAASa,IAChDS,GAAUC,KAAevB,EAAAA,EAAAA,UAAS,IAClCwB,GAAcC,KAAmBzB,EAAAA,EAAAA,UAAS,CAC/C0B,KAAM,EACNC,WAAY,EACZC,YAAa,EACbC,KAAM,IAEFC,IAAMC,EAAAA,EAAAA,KAENC,GAASA,KACb9B,GAAUD,EAAM,GAGZ,UAAEgC,GAAS,MAAEC,GAAK,KAAEjO,GAAI,QAAEkO,KAAYC,EAAAA,EAAAA,GAAS,CACnDC,SAAU,CAAC,YACXC,QAASA,IACPR,GAAIS,IAAI,eAAD/N,OAAgBoL,IAAa4C,MAAMC,GACjCA,EAAIxO,KAAKA,UAItByO,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACd,MAAMC,EAAoB,OAAJ/O,SAAI,IAAJA,IAAyB,QAArB0O,EAAJ1O,GAAMgP,2BAAmB,IAAAN,OAArB,EAAJA,EAA2BzH,QAAQgI,GAClB,IAA9BC,SAASD,EAAKlK,OAAQ,KAA2C,IAA9BmK,SAASD,EAAKlK,OAAQ,MAG5DoK,EAA0B,OAAJnP,SAAI,IAAJA,IAAyB,QAArB2O,EAAJ3O,GAAMgP,2BAAmB,IAAAL,OAArB,EAAJA,EAA2B1H,QAAQgI,GACxB,IAA9BC,SAASD,EAAKlK,OAAQ,MAGzBqK,EAAmB,OAAJpP,SAAI,IAAJA,IAAyB,QAArB4O,EAAJ5O,GAAMgP,2BAAmB,IAAAJ,OAArB,EAAJA,EAA2B3H,QAAQgI,GACjB,IAA9BC,SAASD,EAAKlK,OAAQ,KAA2C,IAA9BmK,SAASD,EAAKlK,OAAQ,MAG5DsK,EAA0B,OAAJrP,SAAI,IAAJA,IAAyB,QAArB6O,EAAJ7O,GAAMgP,2BAAmB,IAAAH,OAArB,EAAJA,EAA2B5H,QAAQgI,GACxB,IAA9BC,SAASD,EAAKlK,OAAQ,MAG/ByI,GAAgB,CACdC,KAAmB,OAAbsB,QAAa,IAAbA,OAAa,EAAbA,EAAe5I,OACrBuH,WAA+B,OAAnByB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBhJ,OACjCwH,YAAgC,OAAnB0B,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBlJ,OAClCyH,KAAkB,OAAZwB,QAAY,IAAZA,OAAY,EAAZA,EAAcjJ,SAGtBwG,EAAmB,OAAJ3M,SAAI,IAAJA,IAAmB,QAAf8O,EAAJ9O,GAAMsP,qBAAa,IAAAR,OAAf,EAAJA,EAAqBS,UACb,cAAf,OAAJvP,SAAI,IAAJA,QAAI,EAAJA,GAAMwP,UACRxC,IAAc,GAEdA,IAAc,GAGhByC,uBACQ5B,GACH6B,KAAK,kCAAmC,CAAEC,IAAK,CAAChE,KAChD4C,MAAMC,IAAS,IAADoB,EACbtC,GAA4B,QAAjBsC,EAACpB,EAAIxO,KAAKA,KAAK,UAAE,IAAA4P,OAAA,EAAhBA,EAAkBvC,SAAS,IAExCwC,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAEAG,EAAe,GACd,CAACjQ,KAEJ,MAAMkQ,GAAcT,gBACZ5B,GACHS,IAAI,eAAD/N,OAAgBoL,EAAS,aAC5B4C,MAAMC,GAAQ1C,EAAW0C,EAAIxO,KAAKA,QAClC6P,OAAOC,GAAQC,QAAQC,IAAIF,IAAK,GAGrCrB,EAAAA,EAAAA,YAAU,KACRyB,IAAa,GACZ,CAACvE,KAEJ8C,EAAAA,EAAAA,YAAU,MACRgB,uBACQ5B,GACHS,IAAI,+BACJC,MAAMC,GAAQnC,EAAemC,EAAIxO,KAAKA,QACtC6P,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAEAK,EAAgB,GACf,IAEH,MA6BMC,GAAoB,CAAC,UAAW,YAgBtC,OAdA3B,EAAAA,EAAAA,YAAU,MACRgB,uBACQ5B,GACHS,IAAI,+BACJC,MAAMC,GAAQtB,GAAkBsB,EAAIxO,KAAKA,QACzC6P,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CACAO,EAAqB,GACpB,KAEH5B,EAAAA,EAAAA,YAAU,KACRP,IAAS,GACR,CAACvC,KAGFzL,EAAAA,EAAAA,KAAAoQ,EAAAA,SAAA,CAAAlQ,SACG4N,IACC9N,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAACC,GAAG,KAAIpQ,UACVF,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAAArQ,UACHF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAQ,CAAAtQ,SAAC,mBAGZ6N,GACF,yBAEA5N,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFC,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACC,GAAG,IAAGpQ,SAAA,EACTF,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,iBAAgBC,UAC9BC,EAAAA,EAAAA,MAACqQ,EAAAA,EAAQ,CAAAtQ,SAAA,EACPF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAS,CAACxH,IAAI,KAAKjJ,UAAU,oBAAmBC,SAAC,mBAIpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAClC2M,GAA+B,QAArB5B,EAAGnL,GAAKsP,qBAAa,IAAAnE,OAAA,EAAlBA,EAAoB0F,KAAW,OAAJ7Q,SAAI,IAAJA,QAAI,EAAJA,GAAM8Q,SAEjDzQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,WAC9BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAEJ,GAAK+Q,iBAEpC1Q,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,UACrB,OAAJJ,SAAI,IAAJA,QAAI,EAAJA,GAAMgR,iBAAiBC,OAAO9K,QAAS,GAAE,GAAA5F,OAC/B,OAAJP,SAAI,IAAJA,QAAI,EAAJA,GAAMgR,iBAAiBE,UAAU,EAAG,IAAG,OACtC,OAAJlR,SAAI,IAAJA,QAAI,EAAJA,GAAMgR,oBAEZ9Q,EAAAA,EAAAA,KAAA,QAAMmB,MAAW,OAAJrB,SAAI,IAAJA,QAAI,EAAJA,GAAMgR,iBAAiB5Q,UAClCF,EAAAA,EAAAA,KAAA,KACEC,UAAU,2BACVS,MAAO,CAAEC,SAAU,OAAQuC,WAAY,kBAK/C/C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,gBAC9BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,UACxB+Q,EAAAA,EAAAA,IAAa,OAAJnR,SAAI,IAAJA,QAAI,EAAJA,GAAMsP,iBAAmC,QAAtBlE,EAAIpL,GAAKsP,qBAAa,IAAAlE,OAAA,EAAlBA,EAAoBgG,mBAGzD/Q,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,cAC9BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,UACxB+Q,EAAAA,EAAAA,GAAiC,QAApB,OAAJnR,SAAI,IAAJA,QAAI,EAAJA,GAAMsP,iBAA4C,QAAtBjE,EAAIrL,GAAKsP,qBAAa,IAAAjE,OAAA,EAAlBA,EAAoBrG,oBAIpE3E,EAAAA,EAAAA,MAAA,OACEF,UAAU,mEACVS,MAAO,CAAEyQ,aAAc,OAAQjR,SAAA,EAE/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OACEoR,IAAKC,EACLpR,UAAU,iBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAETxB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,SAC9BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,SAAEJ,GAAKyR,WAAWtM,oBAIzD9E,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4DAA2DC,SAAA,CAAC,cAChEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,UAAEsR,EAAAA,EAAAA,GAAO1R,GAAK2R,sBAEnDtR,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4DAA2DC,SAAA,CAAC,gBAC9DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,UAAEsR,EAAAA,EAAAA,GAAO1R,GAAK4R,mCAM7D1R,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,YAAWC,UACzBC,EAAAA,EAAAA,MAACqQ,EAAAA,EAAQ,CAAAtQ,SAAA,EACPF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAS,CAACxH,IAAI,KAAKjJ,UAAU,oBAAmBC,SAAC,yBAIpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SACrCyL,EAES,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASrH,KAAKqN,IAAC,IAAAC,EAAA,OACbzR,EAAAA,EAAAA,MAAA,OAEEF,UAAU,wEACVS,MAAO,CAAEmD,gBAAiB,UAAWsN,aAAc,OAAQjR,SAAA,EAE3DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAEyR,EAAEE,qBAC/B7R,EAAAA,EAAAA,KAAA,SAAAE,SAAQyR,EAAEG,gBACL,OAAJvG,QAAI,IAAJA,GAAU,QAANqG,EAAJrG,EAAMwG,YAAI,IAAAH,OAAN,EAAJA,EAAYI,MAAMC,MAAM7H,GAAS8F,GAAkBgC,SAAS9H,QAC3DpK,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHC,GAAE,qBAAA/R,OAAuBoL,EAAS,SAAApL,OAAQsR,EAAEU,gBAAe,kBAC3D3R,MAAO,CAAE4R,eAAgB,QAASpS,SACnC,qBAKLF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,QACEC,UAAS,kBAAAI,OACM,aAAbsR,EAAE9M,QAAsC,IAAb8M,EAAEY,OACzB,qBACa,aAAbZ,EAAE9M,OACF,uBACa,WAAb8M,EAAE9M,OACF,qBACA,uBAAsB,wCACW3E,SAEzB,aAAbyR,EAAE9M,QAAsC,IAAb8M,EAAEY,OAC1B,uBACc,aAAbZ,EAAE9M,QAAsC,IAAb8M,EAAEY,QAA8B,IAAbZ,EAAEY,OACjD,SACAZ,EAAE9M,YAGV7E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,KAAA,SAAAE,UAAQsS,EAAAA,EAAAA,GAAQb,EAAEc,iBAEpBtS,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,OACEkF,GAAE,WAAA7E,OAAasR,EAAEe,YACjBtB,IAAKO,EAAEgB,KAAOtB,EACdpR,UAAU,iBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAET3B,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CAACzR,MAAOwQ,EAAE1M,WAAYC,GAAIyM,EAAEe,WAAWG,kBA/CjDlB,EAAEe,WAiDH,IApDR,wBA0DZvS,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACC,GAAG,IAAGpQ,SAAA,EACTF,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,iBAAgBC,UAC9BC,EAAAA,EAAAA,MAACqQ,EAAAA,EAAQ,CAAAtQ,SAAA,EACPC,EAAAA,EAAAA,MAACuQ,EAAAA,EAAS,CAACxH,IAAI,KAAKjJ,UAAU,yCAAwCC,SAAA,CAAC,kBAErEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,uBAAsBC,SAAA,CAAEiN,GAAS2F,UAAU,WAE7D9S,EAAAA,EAAAA,KAACoJ,EAAQ,CACPnJ,UAAU,GACVF,MAAM,UACN4H,MAAOwF,GAAS2F,UAChBpS,MAAO,CAAEiB,OAAQ,gBAIvB3B,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,YAAWC,UACzBC,EAAAA,EAAAA,MAACqQ,EAAAA,EAAQ,CAAAtQ,SAAA,EACPC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,oBAC3BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAC1BsK,EACyB,QAApB,OAAJ1K,SAAI,IAAJA,QAAI,EAAJA,GAAMsP,iBAA4C,QAAtBhE,EAAItL,GAAKsP,qBAAa,IAAAhE,OAAA,EAAlBA,EAAoBtG,WACpDgO,gBAGN9S,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,cAErB7S,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,eAC3BF,EAAAA,EAAAA,KAAA,QAAAE,SAAmB,OAAZmN,SAAY,IAAZA,QAAY,EAAZA,GAAcE,WAEvBvN,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,oBAGvB7S,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,sBAC3BF,EAAAA,EAAAA,KAAA,QAAAE,SAAmB,OAAZmN,SAAY,IAAZA,QAAY,EAAZA,GAAcG,iBAEvBxN,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,4BAErB7S,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,eAC3BF,EAAAA,EAAAA,KAAA,QAAAE,SAAmB,OAAZmN,SAAY,IAAZA,QAAY,EAAZA,GAAcK,WAEvB1N,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,wBAK1BnG,IACCtB,EAAKwG,KAAKC,MAAME,SAAS,YACzB3G,EAAKwG,KAAKkB,cAAmB,OAAJnT,SAAI,IAAJA,IAAgB,QAAZuL,EAAJvL,GAAMyR,kBAAU,IAAAlG,OAAZ,EAAJA,EAAkB4H,cACzCjT,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAAArQ,UACHF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLpT,MAAM,OACNqT,SACe,MAAbjG,IAC8B,KAAlB,OAAZE,SAAY,IAAZA,QAAY,EAAZA,GAAcI,cACS,KAAX,OAAZJ,SAAY,IAAZA,QAAY,EAAZA,GAAcE,OACe,KAAjB,OAAZF,SAAY,IAAZA,QAAY,EAAZA,GAAcG,YAEhB6F,SAAO,EACPC,QAASzF,GAAO/H,KAAK,MAAM5F,SAC5B,2BAiDTC,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQ1H,EAAO+B,OAAQA,GAAO/H,KAAK,MAAO2N,KAAK,KAAKC,MAAM,EAAOC,UAAQ,EAAAzT,SAAA,EAC9EF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQA,GAAO/H,KAAK,MAAM5F,SAAC,sBACxCC,EAAAA,EAAAA,MAAA,QAAM0T,SA/TKtE,UACnBuE,EAAEC,iBACF1H,GAAW,SACLsB,GACH6B,KAAK,uBAEJ,CACEwE,WAAYvI,EACZwI,QAASjI,EAAOrE,MAChBuM,KAAM5H,EAENlI,OAAwB,IAAhBoI,EAAoBG,GAAiB,GAC7C1I,QAAyB,IAAhBuI,EAAoBS,GAAkB,IAEjD,CACEkH,QAAS,CACP,eAAgB,yBAIrB9F,MAAK,KACJ2B,MACAoE,EAAAA,EAAAA,GAAM,UAAW,uBAAuB,IAEzCzE,OAAOC,GAAQC,QAAQC,IAAIF,KAC9BvD,GAAW,GACXN,GAAS,EAAM,EAqSsB7L,SAAA,EAC3BC,EAAAA,EAAAA,MAACkU,EAAAA,EAAS,CAAAnU,SAAA,EACRC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAAArU,SAAC,YACPC,EAAAA,EAAAA,MAACqU,EAAAA,EAAK,CAACrB,KAAK,SAASjO,GAAG,UAAUuP,KAAK,UAAUC,aAAa,IAAGxU,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,IAAIyL,UAAQ,EAAAlT,SAAC,YAG3BF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,GAAEzH,SAAC,eACjBF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,GAAEzH,SAAC,eAIJ,IAAhBsM,IACCrM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,CACoC,QAA7B,OAAJJ,SAAI,IAAJA,IAAmB,QAAfwL,EAAJxL,GAAMsP,qBAAa,IAAA9D,OAAf,EAAJA,EAAqBrH,WACpB9D,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,UAASzU,SAAC,aACrBC,EAAAA,EAAAA,MAACqU,EAAAA,EAAK,CACJrB,KAAK,SACLjO,GAAG,UACHuP,KAAK,UACLC,aAAa,KACbE,SAAWd,GAAM5G,GAAmB4G,EAAE/N,OAAO4B,OAAOzH,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,UAAQoT,UAAQ,EAACzL,MAAM,KAAIzH,SAAC,eAG3B6M,GAAe9G,OAAS,GACvB8G,GAAezI,KAAKU,IAClBhF,EAAAA,EAAAA,KAAA,UAAmB2H,MAAO3C,EAAEE,GAAGhF,SAC5B8E,EAAEyP,MADQzP,EAAEE,aAOzB/E,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAAArU,SAAC,YACPC,EAAAA,EAAAA,MAACqU,EAAAA,EAAK,CACJrB,KAAK,SACLjO,GAAG,UACHuP,KAAK,UACLC,aAAa,IACbE,SAAWd,GAAMlH,GAAkBkH,EAAE/N,OAAO4B,OAAOzH,SAAA,EAEnDF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,IAAIyL,UAAQ,EAAAlT,SAAC,YAG3BF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,KAAIzH,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,KAAIzH,SAAC,iBAM3BC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAAArU,SAAC,SACPF,EAAAA,EAAAA,KAAC6U,EAAAA,GAAM,CACLC,WAAYxK,EACZyK,QAAS7I,EACT0I,SAAWI,GAAW/I,EAAU+I,SAGpC7U,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,MAAK/U,SAAC,UACrBF,EAAAA,EAAAA,KAACsU,EAAAA,EAAS,CAAApU,UACRF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLsB,KAAK,OACLvP,GAAG,MACH0P,SAAWd,GAAMvH,EAAOuH,EAAE/N,OAAOmP,kBAKzC/U,EAAAA,EAAAA,MAACgV,EAAAA,EAAW,CAAAjV,SAAA,EACVF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACnT,MAAM,YAAYsT,SAAO,EAACC,QAASzF,GAAO/H,KAAK,MAAM5F,SAAC,YAG9DF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLpT,MAAM,OACNqT,SAAUhH,EACVnM,UAAU,kCAAiCC,SAE1CkM,GACCjM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAACnV,UAAU,OAAOwT,KAAK,KAAK1T,MAAM,UAAU,cAItDI,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,OAAOtS,MAAO,CAAEC,SAAU,UAAY,yBAUxE,E,0BCvjBP,MAwOA,EAxOkB0I,IAChB,MAAM,KAAEkC,IAASC,EAAAA,EAAAA,MACX,UAAEC,EAAS,eAAE4J,EAAc,kBAAEC,EAAiB,QAAEtH,EAAO,KAAEmF,EAAI,OAAEoC,EAAM,MAAEpU,EAAK,KAAEsT,GAClFpL,GACK+C,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCkD,EAAMyG,IAAW3J,EAAAA,EAAAA,UAAS,CAAC,IAC3BC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5B4J,EAAmBC,IAAwB7J,EAAAA,EAAAA,UAAS,KACpDK,EAAcC,IAAkBN,EAAAA,EAAAA,YAGjCvB,GAAqBC,EAAAA,EAAAA,MACrBoL,GAAWC,EAAAA,EAAAA,MAEX/H,EAASA,KACb9B,GAAUD,EAAM,EAGZ6B,GAAMC,EAAAA,EAAAA,MAEZW,EAAAA,EAAAA,YAAU,MACRgB,uBACQ5B,EACHS,IAAI,sCAAD/N,OAAuCoU,IAC1CpG,MAAMC,IACLnC,EAAemC,EAAIxO,KAAKA,KAAK,IAE9B6P,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAEAK,GAEAyF,EAAqB,CACnB,CACE/N,MAAO4D,EAAKwG,KAAKkB,WACjB4C,MAAOtK,EAAKwG,KAAK9M,aAEnB,GACD,IAEH,MAAM6Q,EAAgBhC,IACpB0B,GAASO,IAAI,IAAWA,EAAM,CAACjC,EAAE/N,OAAO0O,MAAOX,EAAE/N,OAAO4B,SAAS,EAO7DqO,EAAYA,KACH,IAAT7C,EACFkC,GAAe,GAEfC,OAAkB5I,EACpB,EA2CF,OACEvM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAoBqT,QAAS0C,KAE5ChW,EAAAA,EAAAA,KAAA,QAAM6T,SA5CStE,UACjBuE,EAAEC,iBACF1H,GAAW,IACU,OAAjBoJ,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBxP,QAAS,GAC9B8I,EAAKiF,WAAavI,EAClBsD,EAAKkH,SAAWR,EAIH,IAATtC,IACFpE,EAAKmH,YAAcX,SAGf5H,EACH6B,KAAK,WAAYT,EAAM,CACtBoF,QAAS,CACP,eAAgB,yBAGnB9F,MAAK,KACJ,GAAQ,OAAJ9C,QAAI,IAAJA,GAAAA,EAAMwG,KAAKC,MAAME,SAAS,WAAY,CACxC,MAAMiE,EAAU,GAChBV,EAAkBnR,KAAK8R,GAAOD,EAAQhP,KAAKiP,EAAGzO,SACzCwO,EAAQjE,SAAa,OAAJ3G,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAKkB,aAC/B0C,EAAS,iBAEb,MACEA,EAAS,KAEXvB,EAAAA,EAAAA,GAAM,SAAU,6BAA6B,IAE9CzE,OAAM,KAAMyE,EAAAA,EAAAA,GAAM,QAAS,6BAC9BpG,IACAgI,MAEA5B,EAAAA,EAAAA,GAAM,QAAS,8BAEjB/H,GAAW,EAAM,EAOa3L,MAAO,CAAEgB,MAAO,QAAU2U,QAAQ,sBAAqBnW,UACjFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,WACLsB,KAAK,aACL6B,YAAW,GAAAjW,OAAKc,EAAK,OACrBoV,UAAQ,EACR3B,SAAUkB,EACVU,KAAK,IACL7O,OAAW,OAAJoH,QAAI,IAAJA,OAAI,EAAJA,EAAMnK,aAAc,GAC3BlE,MAAO,CAAEC,SAAU,eAIzBR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,oBAAmBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BC,UACxCF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,sBAErBhT,EAAAA,EAAAA,KAAA,SACEmT,KAAK,OACLsB,KAAK,aACLxU,UAAU,mBACVsW,UAAQ,EACR3B,SAAUkB,QAGd3V,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAaS,MAAO,CAAEC,SAAU,QAAST,SAAC,gBAG3DF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,YAAYS,MAAO,CAAEuC,UAAW,QAAS/C,SACvD6O,EAAKmC,oBAIZ/Q,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,oBAAmBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BC,UACxCF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,sBAErBhT,EAAAA,EAAAA,KAAA,SACEmT,KAAK,OACLjO,GAAG,WACHuP,KAAK,WACLxU,UAAU,mBACVsW,UAAQ,EACR3B,SAAUkB,QAGd3V,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,SAAOiV,QAAQ,WAAWhV,UAAU,aAAaS,MAAO,CAAEC,SAAU,QAAST,SAAC,cAG9EF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,YAAYS,MAAO,CAAEuC,UAAW,QAAS/C,SACvD6O,EAAKjK,qBAKd3E,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,UAAQgT,KAAK,SAASlT,UAAU,cAAciF,GAAG,YAAYoO,QAzHpDmD,KACnB1K,GAAS,EAAK,EAwH+E7L,SAAA,EACjFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yBACbD,EAAAA,EAAAA,KAAA,QAAAE,UAAwB,OAAjBuV,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBxP,SAAU,QAEtCjG,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CAACzR,MAAM,UAAU+D,GAAG,aAGrC/E,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAQfE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACC,KAAK,SAASM,KAAK,KAAK1T,MAAM,QAAQqT,SAAUhH,EAASkH,QAAS0C,EAAU9V,SAAC,YAGrFF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLM,KAAK,KACLxT,UAAU,kCACVmT,SAAUhH,EAAQlM,SAEjBkM,GACCjM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,OAAO,gBAIvB,qBAOZtT,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQ1H,EAAO+B,OAAQA,EAAO/H,KAAK,MAAO2N,KAAK,KAAKC,MAAM,EAAOC,UAAQ,EAAAzT,SAAA,EAC9EF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQA,EAAO/H,KAAK,MAAM5F,SAAC,eACxCF,EAAAA,EAAAA,KAACqU,EAAAA,EAAS,CAAAnU,UACRF,EAAAA,EAAAA,KAAC6U,EAAAA,GACC,CACAC,WAAYxK,EACZoM,SAAO,EACPhC,aAAce,EACdV,QAAS7I,EACT0I,SAAWI,GAAWU,EAAqBV,YAIhD,E,wCC5NP,MAmKA,GAnKuBnV,IAQhB,IAAD+R,EAAA,IARkB,UACtB+E,EAAS,gBACTC,EAAe,cACfC,EAAa,mBACbC,EAAkB,sBAClBC,EAAqB,aACrBC,EAAY,QACZhJ,GACDnO,EACC,MAAM,KAAE0L,IAASC,EAAAA,EAAAA,MACVM,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5B4J,EAAmBC,IAAwB7J,EAAAA,EAAAA,UAAS,CAAC,IACrDK,EAAcC,IAAkBN,EAAAA,EAAAA,YAEjCvB,GAAqBC,EAAAA,EAAAA,MAErBsD,EAASA,KACb9B,GAAUD,EAAM,EAGZ6B,GAAMC,EAAAA,EAAAA,MAEZW,EAAAA,EAAAA,YAAU,MACRgB,uBACQ5B,EACHS,IAAI,kDACJC,MAAMC,IACLnC,EAAemC,EAAIxO,KAAKA,KAAK,IAE9B6P,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAEAK,GAEAyF,EAAqB,CACnB/N,MAAW,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAKkB,WAClB4C,MAAW,OAAJtK,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAK9M,YAClB,GACD,IAEH,MAwCMwR,EAAgBQ,IACpBlL,EAASkL,EAAI,EAGf,OACE9W,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAAA,SACEmT,KAAK,OACLmD,YAAY,sBAEZ1B,SAAWd,GAAMkD,EAAalD,EAAE/N,OAAO4B,OAEvCuP,WAAS,OAGb/W,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,cACViF,GAAG,YACHoO,QAASA,IAAMmD,GAAa,GAAMvW,UAElCF,EAAAA,EAAAA,KAAA,KACEC,UAAS,GAAAI,OACH,OAAJkL,QAAI,IAAJA,GAAU,QAANqG,EAAJrG,EAAMwG,YAAI,IAAAH,GAAVA,EAAYI,MAAME,SAAS,SAAW,iBAAmB,4BAI/DlS,EAAAA,EAAAA,KAAA,QAAAE,SAAOuV,EAAkBI,YAE3B1V,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLjT,UAAU,aACVkT,KAAK,SACLM,KAAK,KACL1T,MAAM,QACNuT,QAASA,KACPuD,GAAc,GACdE,OAAsBrK,EAAU,EAChCxM,SACH,YAGDF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SAELG,QAASA,IAxFG/D,WAAa,IAAD4H,EAChC,GAAkB,KAAdR,GACFvC,EAAAA,EAAAA,GAAM,QAAS,8BACV,GAA+C,KAAb,QAA9B+C,EAAAvR,OAAOgB,KAAK6O,UAAkB,IAAA0B,OAAA,EAA9BA,EAAgClR,SACzCmO,EAAAA,EAAAA,GAAM,QAAS,iCACV,CACLwC,GAAgB,GAEhB,MAAMQ,EAAU,CACdC,IAAK,CACH,CACEA,IAAKV,EACL9R,OAAQ,UACRoO,WAA6B,OAAjBwC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB9N,eAK/BgG,EACH2J,MAAM,YAADjX,OAAayW,EAAkB,qBAAqBM,GACzD/I,MAAK,KACJL,GAAS,IAEV2B,OAAM,KAAMyE,EAAAA,EAAAA,GAAM,QAAS,mBAC9B2C,IACAF,GAAc,GACdD,GAAgB,GAChBI,EAAa,CAAC,GACdtB,EAAqB,CAAC,EACxB,GA2DuB6B,GAAgBrX,SAChC,aAIHC,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQ1H,EAAO+B,OAAQA,EAAO/H,KAAK,MAAO2N,KAAK,KAAKC,MAAM,EAAOC,UAAQ,EAAAzT,SAAA,EAC9EF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQA,EAAO/H,KAAK,MAAM5F,SAAC,eACxCF,EAAAA,EAAAA,KAACqU,EAAAA,EAAS,CAAAnU,UACRF,EAAAA,EAAAA,KAAC6U,EAAAA,GACC,CACAC,WAAYxK,EACZoK,aAAce,EACdV,QAAS7I,EACT0I,SAAWI,IACTU,EAAqBV,GACrByB,GAAa,EAAM,cAMzB,ECzIJe,GAAwB,CAAC,WACzBC,GAA0B,CAAC,aAAc,WACzCC,GAA6B,CAAC,QAAS,aAAc,WA6mB3D,GA3mBkB7X,IAAqE,IAAD+R,EAAA+F,EAAA,IAAnE,iBAAEC,EAAgB,KAAE9X,EAAI,UAAE2L,EAAS,QAAEuC,EAAO,eAAE6J,GAAgBhY,EAC/E,MAAM,KAAE0L,IAASC,EAAAA,EAAAA,MACVM,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BiM,EAAgBxC,IAAqBzJ,EAAAA,EAAAA,eAASa,IAC9CqC,EAAMyG,IAAW3J,EAAAA,EAAAA,eAASa,IAC1BqL,EAAUC,IAAenM,EAAAA,EAAAA,aACzBoM,EAAcC,IAAmBrM,EAAAA,EAAAA,aACjChH,EAAQsT,IAAatM,EAAAA,EAAAA,aACrBiL,EAAoBC,IAAyBlL,EAAAA,EAAAA,eAASa,IACtD0L,EAAYvB,IAAiBhL,EAAAA,EAAAA,WAAS,IACtC8K,EAAWK,IAAgBnL,EAAAA,EAAAA,UAAS,KACpCwM,EAAczB,IAAmB/K,EAAAA,EAAAA,WAAS,IAC1CyM,EAAkBC,IAAuB1M,EAAAA,EAAAA,aACzC2M,EAAeC,IAAoB5M,EAAAA,EAAAA,aACnC6M,EAAYC,IAAiB9M,EAAAA,EAAAA,WAAS,IACtC+M,EAAeC,IAAoBhN,EAAAA,EAAAA,WAAS,IAC5CiN,EAAcC,IAAmBlN,EAAAA,EAAAA,UAAS,OAC1CmN,EAAeC,IAAoBpN,EAAAA,EAAAA,WAAS,IAC5CqN,GAAkBC,KAAuBtN,EAAAA,EAAAA,UAAS,IACnD8B,IAAMC,EAAAA,EAAAA,KAENwL,GAAgB,OAAJ7N,QAAI,IAAJA,GAAU,QAANqG,EAAJrG,EAAMwG,YAAI,IAAAH,OAAN,EAAJA,EAAYI,MACxBqH,GAAa,OAAJ9N,QAAI,IAAJA,GAAU,QAANoM,EAAJpM,EAAMwG,YAAI,IAAA4F,OAAN,EAAJA,EAAY1E,WAMrBqG,GAAaC,IACjBxN,GAAS,GACTyJ,EAAQ+D,EAAa,EAKjBC,GAAmBjK,MAAOgG,EAAQkE,KACtCvB,EAAgB3C,GAChB4C,EAAUsB,GACVzB,GAAY,SACNrK,GACH+L,IAAI,YAADrZ,OAAakV,EAAM,WAAW,CAChCtC,WAAY1H,EAAKwG,KAAKkB,WACtBpO,OAAQ4U,IAETpL,MAAK,MACJ+F,EAAAA,EAAAA,GACiB,IAAfqF,EAAmB,QAAyB,IAAfA,EAAmB,OAAS,UAAU,mCAADpZ,OAEjD,IAAfoZ,EAAmB,QAAyB,IAAfA,EAAmB,cAAgB,QAEnE,IAEF9J,OAAOC,KACNwE,EAAAA,EAAAA,GAAM,QAASxE,EAAI+J,SAAS7Z,KAAKiO,MAAM,IAE3CC,IACAgK,GAAY,GACZE,IACAC,GAAW,EAoEPyB,GAAeC,IACnBZ,GAAiB,GACjBa,YAAW,KACTb,GAAiB,EAAM,GACtB,KACHpJ,QAAQC,IAAI+J,EAAI,EAMZE,GAAc,CAClBhF,QAAS,CACP,CACE7P,GAAI,EACJ8N,MAAMhT,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,cACzBG,KAAM,SACN0C,MAAO,QACPzD,GAAI,GAEN,CACElN,GAAI,EACJ8N,MAAMhT,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,wBACzBG,KAAM,SACN0C,MAAO,cACPzD,GAAI,GAEN,CACElN,GAAI,EACJ8N,MAAMhT,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,aACzBG,KAAM,SACN0C,MAAO,OACPzD,GAAI,GAEN,CACElN,GAAI,EACJ8N,MAAMhT,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,iBACzBG,KAAM,OACN0C,MAAO,YACPzD,GAAI,eAKJ4H,GAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAClDC,GAASL,GAAY5L,IAAI,QAe/B,OAbAG,EAAAA,EAAAA,YAAU,KACRwK,EAAgBsB,GAAO,GACtB,CAACL,MAEJzL,EAAAA,EAAAA,YAAU,KACR,GAAqB,OAAjBuK,EAAuB,CACzB,MAAMwB,EAASC,SAASC,eAAe1B,GACxB,OAAXwB,GACFA,EAAOG,gBAEX,IACC,CAAC3B,KAGF3Y,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,SACV,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,KAAI,CAACoW,EAAIlW,KAAC,IAAAmW,EAAAC,EAAAC,EAAA,OACf1a,EAAAA,EAAAA,MAAA,OAAsBF,UAAU,kBAAiBC,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAeS,MAAO,CAAEiB,OAAQ,eAAgBzB,SAAA,EAC7DC,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CACJ/a,MAAM,OACNE,UAAS,YAAAI,OACO,IAAdqa,EAAG7V,OAAe,UAA0B,IAAd6V,EAAG7V,OAAe,UAAY,UAAS,UAAAxE,OAEvD,IAAdqa,EAAG7V,OAAe,UAA0B,IAAd6V,EAAG7V,OAAe,UAAY,UAAS,YAC5D3E,SAAA,CACZ,IACGsE,EAAI,KAEqB,IAA5BwK,SAAS0L,EAAG7V,OAAQ,MACnB1E,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,SAAQG,SAAA,EACnBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAwBS,MAAO,CAAEC,SAAU,UAAc,sBAK/C,IAA5BqO,SAAS0L,EAAG7V,OAAQ,KACO,IAA5BmK,SAAS0L,EAAG7V,OAAQ,KACQ,IAA5BmK,SAAS0L,EAAG7V,OAAQ,IAClBkT,GAAYE,IAAiByC,EAAGpV,SAC9BnF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,aACzBI,EAAAA,EAAAA,MAAA,QAAMO,MAAO,CAAEC,SAAU,QAAST,SAAA,CAAC,qBACd,KACnBF,EAAAA,EAAAA,KAAA,UAAAE,SACc,IAAX2E,EACG,QACW,IAAXA,EACA,cACW,IAAXA,EACA,OACA,WAIRmU,GACF7Y,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,aACzBC,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEC,SAAU,QAAST,SAAC,+BAGrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,SACc,IAA5B8O,SAAS0L,EAAG7V,OAAQ,MACnB1E,EAAAA,EAAAA,MAAA,QAAMO,MAAO,CAAEC,SAAU,QAAST,SAAA,CAAC,WACxB,MACTC,EAAAA,EAAAA,MAAA,UACEO,MAAO,CACLC,SAAU,OACVZ,MAA4B,MAArB2a,EAAGK,cAAwB,UAAY,WAC9C7a,SAAA,CAGDwa,EAAGK,cAAcjI,UAAU,aAgBpC9S,EAAAA,EAAAA,KAAA,OAAAE,SAcG2X,IACC7X,EAAAA,EAAAA,KAACgb,GAAAA,EAAU,CACTjB,YAAaA,GACbxE,OAAQmF,EAAGpV,QACXT,OAAQmK,SAAS0L,EAAG7V,OAAQ,IAC5BoW,OAAQzB,GACRrM,SAAUuN,EAAGK,cACPnB,kBArBFc,EAAGpV,YA2Ba,IAA5B0J,SAAS0L,EAAG7V,OAAQ,KACtB1E,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,mBAAkBC,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAgBS,MAAO,CAAEC,SAAU,UAAc,+BAGlC,IAA5BqO,SAAS0L,EAAG7V,OAAQ,KACtB1E,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,UAAUE,UAAU,SAAQC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAwBS,MAAO,CAAEC,SAAU,UAAc,mBAIxE,OAGJR,EAAAA,EAAAA,MAAA,OACEF,UAAS,mBAAAI,OACPga,KAAWK,EAAGpV,QAAQuN,YAAc,oBACnC3S,SAAA,EAEHF,EAAAA,EAAAA,KAAA,OACEC,UAAU,qBACVqT,QAASA,IAAMgG,GAAUoB,GACzBxV,GAAIwV,EAAGpV,QAAQuN,aAAeiG,EAAeA,EAAe,GAAG5Y,SAE9Dwa,EAAG9V,cAENzE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SAEvBkZ,GAAUnH,MAAM7H,GAA8B,OAArBoN,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBtF,SAAS9H,MAC5B,IAA5B4E,SAAS0L,EAAG7V,OAAQ,KACQ,IAA5BmK,SAAS0L,EAAG7V,OAAQ,MAClB7E,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,YACVqT,QAASA,IAAMgC,EAAkBoF,EAAGpV,SAASpF,UAE7CF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,oBAI3BhT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,aACnBhT,EAAAA,EAAAA,KAAA,OAAAE,SAAMwa,EAAGQ,mBAIdpD,IAAmB4C,EAAGpV,UACrBtF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAACmb,EAAQ,CACD1P,YAAW6J,oBAAmBtH,UAASmF,KApTlD,EAqTKhS,MAAM,mBACNoU,OAAQmF,EAAGpV,gBAKR,QAAVqV,EAAAD,EAAGvV,eAAO,IAAAwV,OAAA,EAAVA,EAAY1U,QAAS,GACpByU,EAAGvV,QAAQb,KAAK8W,IAAE,IAAAC,EAAA,OAEhBlb,EAAAA,EAAAA,MAAA,OAAsBF,UAAU,kBAAiBC,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,OAEEF,UAAS,sBAAAI,OACPga,KAAWe,EAAG9V,QAAQuN,YAAc,oBACnC3S,SAAA,EAGHF,EAAAA,EAAAA,KAAA,OACEC,UAAU,aACVqT,QAASA,IAAMgG,GAAU8B,GACzBlW,GAAIkW,EAAG9V,QAAQuN,aAAeiG,EAAeA,EAAe,GAAG5Y,SAE9Dkb,EAAGxW,cAENzE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SAEvBkZ,GAAUnH,MAAM7H,GAAgC,OAAvBqN,SAAuB,IAAvBA,QAAuB,EAAvBA,GAAyBvF,SAAS9H,MAC9B,IAA5B4E,SAAS0L,EAAG7V,OAAQ,KACQ,IAA5BmK,SAAS0L,EAAG7V,OAAQ,MAClB7E,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,YACVqT,QAASA,IAAMgC,EAAkB8F,EAAG9V,SAASpF,UAE7CF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,oBAI3B7S,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAACsb,GAAAA,EAAkB,CAACxb,KAAMkP,SAASoM,EAAGL,cAAcjI,UAAW,SAEjE3S,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,aACnBhT,EAAAA,EAAAA,KAAA,OAAAE,SAAMkb,EAAGF,oBAIdpD,IAAmBsD,EAAG9V,UACrBtF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAACmb,EAAQ,CACD1P,YAAW6J,oBAAmBtH,UAASmF,KAzWxD,EA0WWhS,MAAM,qBACNoU,OAAQ6F,EAAG9V,QACXmP,KAAK,iBA5CN2G,EAAG9V,UAiDC,QAAV+V,EAAAD,EAAGG,eAAO,IAAAF,OAAA,EAAVA,EAAYpV,QAAS,GACpBmV,EAAGG,QAAQjX,KAAKkX,IAAE,IAAAC,EAAA,OAChBtb,EAAAA,EAAAA,MAAA,OAEEF,UAAS,6BAAAI,OACPga,KAAWmB,EAAGlW,QAAQuN,YAAc,oBACnC3S,SAAA,EAEHF,EAAAA,EAAAA,KAAA,OACEC,UAAU,aACVqT,QAASA,KACPgG,GAAUkC,GACVrC,GAAoB,WAAW,EAC/BjZ,SAEDsb,EAAG5W,cAENzE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,aAAYC,SAAA,CACd,OAAXsb,EAAGnE,IAAeqE,KAAKC,MAAMH,EAAGnE,KAAKpR,OAAS,EAAE,UAElDmT,GAAUnH,MAAM7H,GAAmC,OAA1BsN,SAA0B,IAA1BA,QAA0B,EAA1BA,GAA4BxF,SAAS9H,MAC7DoR,EAAGlW,UAAYwR,GACa,IAA5B9H,SAAS0L,EAAG7V,OAAQ,KACQ,IAA5BmK,SAAS0L,EAAG7V,OAAQ,MAClB7E,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,YACVqT,QAASA,IAlXfkI,KACxB,GAAa,OAATpC,SAAS,IAATA,IAAAA,GAAWlH,SAAS,SAAU,CAChC,MAAM0J,EAAS,GAEf,IAAK,IAAIC,EAAQ,EAAGA,GAAU,OAAFL,QAAE,IAAFA,OAAE,EAAFA,EAAIzW,KAAKkB,QAAQ4V,IAC3CD,EAAOzU,KAAKqU,EAAGzW,KAAK8W,GAAO5I,WAAWJ,YAGpC+I,EAAO1J,SAAS0F,IAAqBgE,EAAO1J,SAASmH,KACvDxC,GAAc,GACdE,EAAsByE,EAAGlW,WAEzB8O,EAAAA,EAAAA,GAAM,QAAS,sBAEnB,MACEyC,GAAc,GACdE,EAAsByE,EAAGlW,QAC3B,EAiW6CwW,CAAiBN,GAAItb,UAEpCF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,cAI3B7S,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAACsb,GAAAA,EAAkB,CAACxb,KAAMkP,SAASwM,EAAGT,cAAcjI,UAAW,SAEjE3S,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,aACnBhT,EAAAA,EAAAA,KAAA,OAAAE,SAAMsb,EAAGN,oBAId9C,IACCpY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,SACtBmY,GAAgBvB,IAAuB0E,EAAGlW,SACzCnF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,aACzBC,EAAAA,EAAAA,KAAA,QAAAE,SAAM,gBAGR4W,IAAuB0E,EAAGlW,UACxBtF,EAAAA,EAAAA,KAAC+b,GAAc,CAEXpF,YACAC,kBACAC,gBACAC,qBACAC,wBACAC,eACAhJ,cAOA,OAAXwN,EAAGnE,MACFrX,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,SACJ,QADIub,EACtBC,KAAKC,MAAMH,EAAGnE,YAAI,IAAAoE,OAAA,EAAlBA,EAAoBnX,KAAKC,IACxBpE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLG,QAASA,IA5YrB/D,OAAOyM,EAAWR,KACpC7C,GAAc,GACdJ,EAAoBiD,EAAGlW,SACvBmT,EAAiBuD,GACjB,MAEMC,EAFSP,KAAKC,MAAMH,EAAGnE,KAEJ/S,KAAKC,GACxBA,EAAKW,KAAO8W,EACP,IAAKzX,EAAMM,OAAwB,YAAhBN,EAAKM,OAAuB,UAAY,WAE7DN,UAGHoJ,GACH2J,MAAM,YAADjX,OAAamb,EAAGlW,QAAO,wBAAwB,CAAE+R,IAAK4E,IAC3D5N,MAAK,KACJL,GAAS,IAEV2B,OAAM,KAAMyE,EAAAA,EAAAA,GAAM,QAAS,0BAE9BqE,IACAE,GAAc,EAAM,EAuXyBuD,CAAY3X,EAAKW,GAAIsW,GACpCpI,SAAU7O,EAAK0O,aAAeoG,GAAOnZ,UAErCC,EAAAA,EAAAA,MAAA,OACEF,UAAS,cAAAI,OACPqY,GACAnU,EAAKW,KAAOsT,GACZgD,EAAGlW,UAAYgT,GACf,YACCpY,SAAA,EAEHC,EAAAA,EAAAA,MAAA,OACEF,UAAS,eAAAI,OACPqY,GAAcnU,EAAKW,KAAOsT,GAAiB,eAC1CtY,SAAA,CAEFwY,GACCnU,EAAKW,KAAOsT,GACZgD,EAAGlW,UAAYgT,IACbtY,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,YAEZ,YAAhBwE,EAAKM,QAAwB2T,IAAkBjU,EAAKW,KACnDlF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,aAGvBhT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACmB,YAAhBqE,EAAKM,QAAuB7E,EAAAA,EAAAA,KAAA,KAAAE,SAAIqE,EAAK8S,MAAW9S,EAAK8S,IAAK,eAKnErX,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,SA2BzBqE,EAAK0O,aAAeoG,KACnBrZ,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,SACVqT,QAASA,IAnbrB/D,OAAO4M,EAAYX,KACzC3C,GAAiB,GACjBN,EAAoBiD,EAAGlW,SACvBmT,EAAiB0D,GAEjB,MAEMF,EAFSP,KAAKC,MAAMH,EAAGnE,KAEJtQ,QAAQW,GACxBA,EAAIxC,KAAOiX,UAGdxO,GACH2J,MAAM,YAADjX,OAAamb,EAAGlW,QAAO,wBAAwB,CAAE+R,IAAK4E,IAC3D5N,MAAK,KACJL,GAAS,IAEV2B,OAAM,KAAMyE,EAAAA,EAAAA,GAAM,QAAS,0BAE9ByE,GAAiB,EAAM,EAia0BuD,CAAgB7X,EAAKW,GAAIsW,GAAItb,SAE3C0Y,GACDrU,EAAKW,KAAOsT,GACZgD,EAAGlW,UAAYgT,GACbtY,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,YAEzBC,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,iBAzEEzO,EAAKW,UArErCsW,EAAGlW,QAuJJ,MA7MF8V,EAAG9V,QA+MP,IAEmB,IAA5B0J,SAAS0L,EAAG7V,OAAQ,MACnB7E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,QAAQtS,MAAO,CAAEC,SAAU,WAC9CX,EAAAA,EAAAA,KAAA,QACEC,UAAS,GAAAI,QAAKgc,EAAAA,GAAAA,GAAU3B,EAAG5V,UAAY,cAAgB,GAAE,KACzDpE,MAAO,CAAEC,SAAU,QAAST,UAE3B+Q,EAAAA,EAAAA,GAASyJ,EAAG5V,gBAGjB9E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACxB,OAAFwa,QAAE,IAAFA,GAAQ,QAANE,EAAFF,EAAI3V,YAAI,IAAA6V,OAAN,EAAFA,EAAUtW,KACT,CAACgY,EAAKC,IACJA,EAAM,IACJpc,EAAAA,EAAAA,MAACwE,EAAAA,SAAQ,CAAAzE,SAAA,EACPF,EAAAA,EAAAA,KAAA,OACEkF,GAAE,WAAA7E,OAAaic,EAAIpX,IACnBkM,IAAKC,EACLpR,UAAU,yBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAET3B,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CAACzR,MAAOmb,EAAIrX,WAAYC,GAAIoX,EAAIpX,GAAG2N,eATnCyJ,EAAIpX,OAatB,OAAFwV,QAAE,IAAFA,GAAQ,QAANG,EAAFH,EAAI3V,YAAI,IAAA8V,OAAN,EAAFA,EAAU5U,QAAS,IAClB9F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8CAA6CC,SAAA,CAAC,IACzDwa,EAAG3V,KAAKkB,OAAS,iBAlZzByU,EAAGpV,QA0ZP,MAGTwG,IACC9L,EAAAA,EAAAA,KAACwc,EAAAA,EAAS,CAAO1Q,QAAOC,WAAU8B,OApkBzBA,KACb9B,GAAUD,EAAM,EAmkB8BiD,OAAMf,UAAWyG,KAAMyE,OAElE,EC/mBDuD,GAAsB,CAAC,WAqE7B,GAnEkB5c,IAQX,IAAD+R,EAAA,IARa,iBACjBgG,EAAgB,KAChB9X,EAAI,UACJgO,EAAS,MACTC,EAAK,QACLC,EAAO,aACP0O,EAAY,eACZ7E,GACDhY,EACC,MAAM,KAAE0L,IAASC,EAAAA,EAAAA,MACVmR,EAAatH,IAAkBxJ,EAAAA,EAAAA,WAAS,IAEzC,UAAEJ,IAAcC,EAAAA,EAAAA,MAItB,OACEvL,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACC,GAAG,IAAIrQ,UAAU,OAAMC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2GAA0GC,SAAA,EACvHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,WAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAM,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,YAElC6H,EACC,aACEC,EACF,yBAEA5N,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,CACG2X,IACK,OAAJtM,QAAI,IAAJA,GAAU,QAANqG,EAAJrG,EAAMwG,YAAI,IAAAH,OAAN,EAAJA,EAAYI,MAAMC,MAAM7H,GAA4B,OAAnBqS,SAAmB,IAAnBA,QAAmB,EAAnBA,GAAqBvK,SAAS9H,QAC7DuS,GAaA3c,EAAAA,EAAAA,KAACmb,EAAQ,CACD1P,YAAW4J,iBAAgBrH,UAASmF,KA9B3C,EA+BChS,MAAM,uBAdRhB,EAAAA,EAAAA,MAAC+S,EAAAA,EAAM,CACLC,KAAK,SACLM,KAAK,KACL1T,MAAM,YACNE,UAAU,6DACV2c,OAAK,EACLtJ,QAASA,IAAM+B,GAAe,GAAMnV,SAAA,EAEpCF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,MAAMtS,MAAO,CAAEC,SAAU,UAAY,gBAS9DX,EAAAA,EAAAA,KAAC6c,GAAS,CACFjF,mBAAkB9X,OAAM2L,YAAWuC,UAAS0O,eAAc7E,wBAIlE,ECEV,GA1DwBhY,IAQjB,IARkB,iBACvB+X,EAAgB,KAChB9X,EAAI,UACJgO,EAAS,MACTC,EAAK,QACLC,EAAO,aACP0O,EAAY,eACZ7E,GACDhY,EAGC,MAAM,UAAE4L,IAAcC,EAAAA,EAAAA,MAEtB,OACEvL,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACC,GAAG,IAAIrQ,UAAU,OAAMC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2GAA0GC,SAAA,EACvHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,iBAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAM,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,YAElC6H,EACC,aACEC,EACF,yBAEA/N,EAAAA,EAAAA,KAAAoQ,EAAAA,SAAA,CAAAlQ,UAeEF,EAAAA,EAAAA,KAAC6c,GAAS,CACFjF,mBAAkB9X,OAAM2L,YAAWuC,UAAS0O,eAAc7E,uBAIlE,EChBV,GA9BkBhY,IAAwD,IAAvD,KAAEC,EAAI,UAAEgO,EAAS,MAAEC,EAAK,QAAEC,EAAO,aAAE0O,GAAc7c,EAClE,MAAM,UAAE4L,IAAcC,EAAAA,EAAAA,MAEtB,OACEvL,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACC,GAAG,IAAIrQ,UAAU,OAAMC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2GAA0GC,SAAA,EACvHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,UAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAM,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,YAElC6H,EACC,aACEC,EACF,yBAEA/N,EAAAA,EAAAA,KAAAoQ,EAAAA,SAAA,CAAAlQ,UACEF,EAAAA,EAAAA,KAAC6c,GAAS,CAAO/c,OAAM2L,YAAWuC,UAAS0O,qBAG3C,ECdJI,GAAoBC,GACd,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKhW,QACV,CAACW,EAAKmU,KAAa,OAAHkB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WAAWzY,GAASA,EAAKe,UAAYoC,EAAIpC,aAAauW,IA+H/E,GA3HiBoB,KACf,MAAM,UAAExR,IAAcC,EAAAA,EAAAA,OACfwR,EAAOC,IAAYtR,EAAAA,EAAAA,UAAS,KAC5BuR,EAAYC,IAAiBxR,EAAAA,EAAAA,UAAS,KACtCyR,EAAMC,IAAW1R,EAAAA,EAAAA,UAAS,KAC1B+L,EAAkB4F,IAAuB3R,EAAAA,EAAAA,UAAS,KAClDgM,EAAgB4F,IAAqB5R,EAAAA,EAAAA,WAAS,GAE/C8B,GAAMC,EAAAA,EAAAA,MAEN,UAAEE,EAAS,MAAEC,EAAK,KAAEjO,EAAI,QAAEkO,EAAO,aAAE0O,IAAiBzO,EAAAA,EAAAA,GAAS,CACjEC,SAAU,CAAC,SACXC,QAASA,IACPR,EAAIS,IAAI,YAAD/N,OAAaoL,EAAS,kBAAiB4C,MAAMC,IAClDmP,EAAkBnP,EAAIxO,KAAK4d,kBAC3BF,EAAoBlP,EAAIxO,KAAK6d,kBAAkB9K,YACxCvE,EAAIxO,KAAKA,UA0BtB,OAtBAyO,EAAAA,EAAAA,YAAU,KACR,MAAMM,EAAoB,OAAJ/O,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,QAAQ6W,GACI,IAA/B5O,SAAS4O,EAAM/Y,OAAQ,KAA4C,IAA/BmK,SAAS4O,EAAM/Y,OAAQ,MAG9DoK,EAA0B,OAAJnP,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,QAAQ6W,GACF,IAA/B5O,SAAS4O,EAAM/Y,OAAQ,MAG1BgZ,EAAmB,OAAJ/d,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,QAAQ6W,GACK,IAA/B5O,SAAS4O,EAAM/Y,OAAQ,KAA4C,IAA/BmK,SAAS4O,EAAM/Y,OAAQ,MAGpEsY,EAAStO,GACTwO,EAAcP,GAAiB7N,IAC/BsO,EAAQT,GAAiBe,GAAc,GACtC,CAAC/d,KAEJyO,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,CAACvC,KAGFzL,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CAAAvQ,SAcD4N,GACC9N,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAAnQ,UACFF,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAAArQ,UACHF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAQ,CAACvQ,UAAU,cAAaC,UAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,sBAKhCF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAAnQ,UAgBFC,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFF,EAAAA,EAAAA,KAAC8d,GAAS,CACRhe,KAAMod,EACAtF,mBAAkB9J,YAAWC,QAAOC,UAAS0O,eAAc7E,oBAEnE7X,EAAAA,EAAAA,KAAC+d,GAAe,CACdje,KAAMsd,EACAxF,mBAAkB9J,YAAWC,QAAOC,UAAS0O,eAAc7E,oBAEnE7X,EAAAA,EAAAA,KAACge,GAAS,CAACle,KAAMwd,EAAYxP,YAAWC,QAAOC,UAAS0O,uBA4B1D,EC3HV,GARqB7c,IAAmB,IAAlB,SAAEK,GAAUL,EAChC,OAAOG,EAAAA,EAAAA,KAAA,SAAOC,UAAU,kBAAiBC,SAAEA,GAAiB,ECoF9D,GA5EkB+d,KAChB,MAAOC,EAAWC,IAAgBtS,EAAAA,EAAAA,YAC5B8B,GAAMC,EAAAA,EAAAA,MAEN,UAAEnC,IAAcC,EAAAA,EAAAA,OAEhB,UAAEoC,EAAS,MAAEC,EAAK,KAAEjO,EAAI,QAAEkO,IAAYC,EAAAA,EAAAA,GAAS,CACnDC,SAAU,CAAC,WACXC,QAASA,IACPR,EAAIS,IAAI,eAAD/N,OAAgBoL,EAAS,aAAY4C,MAAMC,IAChD6P,EAAa7P,EAAIxO,KAAKse,YACf9P,EAAIxO,KAAKA,UAUtB,OANAyO,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,CAACvC,KAKFzL,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAAnQ,UACFF,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAQ,CAAAtQ,SAcN4N,EACC,aACEC,EACF,yBACM,OAAJjO,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,QAAS,GACjBjG,EAAAA,EAAAA,KAACqe,GAAY,CAAAne,UACXC,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,OACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAGRF,EAAAA,EAAAA,KAAA,SAAOU,MAAO,CAAE4d,SAAU,UAAWpe,SAC9B,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,KAAI,CAACia,EAAG/Z,KACbrE,SAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsE,EAAI,KACTxE,EAAAA,EAAAA,KAAA,MAAAE,SAAKqe,EAAEtZ,cACPjF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqe,EAAEC,iBACPxe,EAAAA,EAAAA,KAAA,MAAAE,SAAKge,GA/DJxW,EA+D8BwW,EA/DzBO,EA+DoCF,EAAEtL,WAAWJ,WA9DpEnL,EAAI+W,IA8D8E,QAJ9DF,EAAEtZ,YA3DTyZ,IAAChX,EAAK+W,CAiET,YAKPze,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAKR,E,gBC9EV,MAyEA,GArEgBye,KAAO,IAADC,EACpB,MAAM,UAAEnT,IAAcC,EAAAA,EAAAA,MAEhBiC,GAAMC,EAAAA,EAAAA,MAIN,UAAEE,EAAS,MAAEC,EAAK,KAAEjO,EAAI,QAAEkO,IAAYC,EAAAA,EAAAA,GAAS,CACnDC,SAAU,CAAC,SACXC,QAASA,IACPR,EAAIS,IAAI,eAAD/N,OAAgBoL,EAAS,WAAU4C,MAAMC,GACvCA,EAAIxO,KAAKA,SAQtB,OAJAyO,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,CAACvC,KAGFzL,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAQ,CAAAtQ,SACN4N,EACC,aACEC,EACF,yBAEA5N,EAAAA,EAAAA,MAAC0e,GAAAA,EAAK,CAAC5e,UAAU,uBAAuB6e,OAAK,EAACpe,MAAO,CAAEqe,OAAQ,KAAMpe,SAAU,QAAST,SAAA,EACtFF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAI0B,MAAM,KAAIxB,SAAC,OACfF,EAAAA,EAAAA,KAAA,MAAI0B,MAAM,MAAKxB,SAAC,cAChBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAI0B,MAAM,MAAKxB,SAAC,qBAGf,OAAJJ,QAAI,IAAJA,GAAAA,EAAMmG,QACLjG,EAAAA,EAAAA,KAAA,SAAOU,MAAO,CAAE4d,SAAU,UAAWpe,SACd,QA1Cb6c,EA0CQjd,EADmB8e,EAxC1C7B,EAAIiC,MAAK,CAAAnf,EAAA2F,KAAA,IAAGiN,WAAYwM,GAAGpf,GAAI4S,WAAYyM,GAAG1Z,EAAA,OAAMyZ,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,CAAC,WAyClD,IAAAN,OAAA,EAApBA,EACGO,UACD7a,KAAI,CAAC8a,EAAG5a,KACPrE,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsE,EAAI,KACTxE,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CAACC,GAAE,GAAA/R,OAvCdgf,4BAuC0B,cAAAhf,OAAa+e,EAAEE,WAAavZ,OAAO,QAAO7F,SAC3Dkf,EAAEE,eAGPtf,EAAAA,EAAAA,KAAA,MAAAE,SAAKkf,EAAEG,UAAY,OACnBvf,EAAAA,EAAAA,KAAA,MAAAE,UAAKsS,EAAAA,EAAAA,GAAQ4M,EAAE3M,gBARR2M,EAAEI,cAajBxf,EAAAA,EAAAA,KAAA,SAAOU,MAAO,CAAE4d,SAAU,UAAWpe,UACnCF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIyf,QAAQ,IAAIxf,UAAU,cAAaC,SAAC,4BA5DlC6c,KAqEb,E,gBClDX,MAgOA,GAhOkBld,IAAyB,IAAxB,eAAE6f,GAAgB7f,EACnC,MAAM,UAAE4L,IAAcC,EAAAA,EAAAA,OACfI,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5B8T,EAAMC,IAAW/T,EAAAA,EAAAA,UAAS,KAC1B0J,EAAQsK,IAAahU,EAAAA,EAAAA,aACrBO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCqP,EAAU4E,IAAejU,EAAAA,EAAAA,aACzBkU,EAAWC,IAAgBnU,EAAAA,EAAAA,YAC5B8B,GAAMC,EAAAA,EAAAA,MACLqS,EAAYC,IAAiBrU,EAAAA,EAAAA,UAAS,KAEvC,UAAEiC,EAAS,MAAEC,EAAK,QAAEC,EAAO,aAAE0O,IAAiBzO,EAAAA,EAAAA,GAAS,CAC3DC,SAAU,CAAC,UACXC,QAASA,IACPR,EAAIS,IAAI,YAAD/N,OAAaoL,EAAS,mBAAkB4C,MAAMC,IACnD4R,EAAc5R,EAAIxO,KAAKA,MAChBwO,EAAIxO,KAAKA,UAIhB+N,EAASA,KACb9B,GAAUD,EAAM,GAGlByC,EAAAA,EAAAA,YAAU,KACRmR,EAAeO,EAAWha,OAAO,GAChC,CAACga,KAEJ1R,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,CAACvC,IAEJ,MAEM0U,EAAaA,CAACC,EAASrR,EAAMsR,KACjCtU,GAAS,GACT6T,EAAQQ,GACRP,EAAU9Q,GACViR,EAAaK,EAAQ,EAqBvB,OACElgB,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAAnQ,SACD4N,GAAa4O,GAEZ1c,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,SAAC,eAC7C6N,GACF5N,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gCAA+BC,SAAA,CAAC,yBACxBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAC,mCAGxD+f,EAAW3b,KAAI,CAACyK,EAAMvK,KAAC,IAAA8b,EAAAC,EAAA,OACrBvgB,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAAwBtQ,UAAU,wBAAuBC,UAC5DC,EAAAA,EAAAA,MAACqQ,EAAAA,EAAQ,CAAAtQ,SAAA,EACPC,EAAAA,EAAAA,MAACuQ,EAAAA,EAAS,CAACxH,IAAI,KAAKjJ,UAAU,iCAAgCC,SAAA,EAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,YAAWC,SAAA,CAAC,IACvCsE,EAAI,MAERxE,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,OAAOE,UAAU,GAAEC,SAC7B6O,EAAK9J,iBAGVjF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEC,SAAU,QAAST,UAAEsS,EAAAA,EAAAA,GAAQzD,EAAKyR,iBAEnDxgB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAS6O,EAAKnK,gBAEhB5E,EAAAA,EAAAA,KAAA,KAAAE,SAAI6O,EAAK0R,aACTzgB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,iBAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,SACd6O,EAAKmG,MAAMjP,OAAS,EACjB8I,EAAKmG,MAAM5Q,KAAI,CAAC8a,EAAG7C,KACjBpc,EAAAA,EAAAA,MAAA,OAAuBF,UAAU,eAAcC,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAOqc,EAAM,EAAE,QACfvc,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHlS,UAAU,YACVmS,GAAE,GAAA/R,OAhEZgf,4BAgEwB,cAAAhf,OAAa+e,EAAEE,WAC7BvZ,OAAO,QAAO7F,SAEbkf,EAAEE,cAPGF,EAAEE,aAWd,OAENnf,EAAAA,EAAAA,MAAA,OACEF,UAAU,2EACVS,MAAO,CAAEyQ,aAAc,QAASjR,SAAA,EAEhCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKJ,MAAM,QAAOG,SAAA,EAChBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,gBAC5BF,EAAAA,EAAAA,KAAA,SAAM,IAA2B,QAA1BsgB,GAACrP,EAAAA,EAAAA,GAASlC,EAAKmC,mBAAW,IAAAoP,OAAA,EAAzBA,EAA2B7c,MAAM,KAAK,OAEhDtD,EAAAA,EAAAA,MAAA,OAAKJ,MAAM,QAAOG,SAAA,EAChBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,cAC5BF,EAAAA,EAAAA,KAAA,SAAM,IAAyB,QAAxBugB,GAACtP,EAAAA,EAAAA,GAASlC,EAAKjK,iBAAS,IAAAyb,OAAA,EAAvBA,EAAyB9c,MAAM,KAAK,UAGhDtD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLM,KAAK,KACL1T,MAAM,UACNsT,SAAO,EACPC,QAASA,IAAM6M,EAAW,WAAYpR,EAAKzJ,QAASyJ,EAAKkE,YAAY/S,SACtE,cAGDF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLM,KAAK,KACL1T,MAAM,UACNuT,QAASA,IAAM6M,EAAW,UAAWpR,EAAKzJ,QAASyJ,EAAKkE,YAAY/S,SACrE,sBA/DE6O,EAAK2R,YAqET,OAiCbvgB,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQ1H,EAAO+B,OAAQA,EAAO/H,KAAK,MAAO2N,KAAK,KAAKC,MAAM,EAAOC,UAAQ,EAAAzT,SAAA,EAC9EF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQA,EAAO/H,KAAK,MAAM5F,SAC3B,YAATyf,EAAqB,WAAa,cAErCxf,EAAAA,EAAAA,MAACwgB,GAAAA,EAAI,CAAC9M,SAxIStE,UACnBuE,EAAEC,iBACF1H,GAAW,SACLsB,EACH+L,IAAI,YAADrZ,OAAakV,EAAM,WAAW,CAChCtC,WAAY8M,EACZlb,OAAiB,YAAT8a,EAAqB,EAAI,EACjCiB,KAAM1F,IAEP7M,MAAK,MACJ+F,EAAAA,EAAAA,GAAM,UAAU,iBAAD/T,OAA4B,YAATsf,EAAqB,WAAa,YAAa,IAElFhQ,OAAOC,GAAQC,QAAQC,IAAIF,KAC9B5B,IACAjC,GAAS,GACTM,GAAW,EAAM,EAyHgBnM,SAAA,EAC3BF,EAAAA,EAAAA,KAACqU,EAAAA,EAAS,CAAAnU,UACRF,EAAAA,EAAAA,KAACsU,EAAAA,EAAS,CAAApU,UACRF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,WACLjO,GAAG,QACHuP,KAAK,QACL6B,YAAY,iBACZE,KAAK,IACLD,UAAQ,EACR3B,SAAWd,GAAMgM,EAAYhM,EAAE/N,OAAO4B,cAI5CxH,EAAAA,EAAAA,MAACgV,EAAAA,EAAW,CAAAjV,SAAA,EACVF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACnT,MAAM,YAAYsT,SAAO,EAACC,QAASzF,EAAO/H,KAAK,MAAM5F,SAAC,YAG9DF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLpT,MAAK,GAAAM,OAAc,YAATsf,EAAqB,UAAY,WAC3CvM,SAAUhH,EACVnM,UAAU,kCAAiCC,SAE1CkM,GACCjM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAACnV,UAAU,OAAOwT,KAAK,OAAO,iBAIxCtT,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,OAAOtS,MAAO,CAAEC,SAAU,UACnC,YAATgf,EAAqB,UAAY,uBAO7C,EC3BP,GA7LoBkB,KAAO,IAADjS,EAAA3D,EACxB,MAAOa,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCiV,EAAUC,IAAelV,EAAAA,EAAAA,UAAS,CAAC,IACpC,KAAEN,IAASC,EAAAA,EAAAA,MACX,UAAEC,IAAcC,EAAAA,EAAAA,MAChBiC,GAAMC,EAAAA,EAAAA,KAENC,EAASA,KACb9B,GAAUD,EAAM,GAGZ,UAAEgC,EAAS,MAAEC,EAAK,KAAEjO,EAAI,QAAEkO,EAAO,aAAE0O,IAAiBzO,EAAAA,EAAAA,GAAS,CACjEC,SAAU,CAAC,YACXC,QAASA,IACPR,EAAIS,IAAI,eAAD/N,OAAoB,OAAJkL,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAKkB,WAAU,KAAA5S,OAAIoL,EAAS,cAAa4C,MAAMC,GACnEA,EAAIxO,KAAKA,SAsBhBgW,EAAgBhC,IACpBiN,GAAahL,IAAI,IAAWA,EAAM,CAACjC,EAAE/N,OAAO0O,MAAOX,EAAE/N,OAAO4B,SAAS,EAOvE,OAJA4G,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,CAACvC,KAGFtL,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAAnQ,SACD4N,GAAa4O,GACZ1c,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,SAAC,eAC7C6N,GACF5N,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gCAA+BC,SAAA,CAAC,yBACxBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAC,mCAG/C,OAATJ,IACEE,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,cAAaC,UAC3BC,EAAAA,EAAAA,MAACqQ,EAAAA,EAAQ,CAAAtQ,SAAA,EACPC,EAAAA,EAAAA,MAACuQ,EAAAA,EAAS,CAACxH,IAAI,KAAKjJ,UAAU,iCAAgCC,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,YAAWC,SAAC,wBAI7CF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEC,SAAU,QAAST,UAAEsS,EAAAA,EAAAA,GAAQ1S,EAAK2S,kBAEnDzS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC7CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,iCAC2BF,EAAAA,EAAAA,KAAA,UAAAE,SAASJ,EAAKkhB,gBAAuB,MAAI,KACtEhhB,EAAAA,EAAAA,KAAA,UAAAE,SAASJ,EAAKmhB,oBAGlBjhB,EAAAA,EAAAA,KAAA,SACAA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,gBAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHlS,UAAU,YACVmS,GAAE,GAAA/R,OA3DNgf,4BA2DkB,YAAAhf,OAAWP,EAAKoU,MAC9BnO,OAAO,QAAO7F,SAEbJ,EAAKoU,YAIZ/T,EAAAA,EAAAA,MAAA,OACEF,UAAU,2EACVS,MAAO,CAAEyQ,aAAc,QAASjR,SAAA,EAEhCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OACEoR,IAAKC,EACLpR,UAAU,iBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAETxB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,SAAEJ,EAAKohB,WAC1ClhB,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAEJ,EAAKkhB,yBAI1ChhB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLM,KAAK,KACL1T,MAAM,UACNsT,SAAO,EACPC,QAASzF,EAAO/H,KAAK,MAAM5F,SAC5B,yBAUfC,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQ1H,EAAO+B,OAAQA,EAAO/H,KAAK,MAAO2N,KAAK,KAAKC,MAAM,EAAOC,UAAQ,EAAAzT,SAAA,EAC9EF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQA,EAAO/H,KAAK,MAAM5F,SAAC,kBACxCC,EAAAA,EAAAA,MAAA,QAAM0T,SAtGUtE,UACpBuE,EAAEC,iBACF1H,GAAW,GACXsB,EACG6B,KAAK,eAADnP,OAAoB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAM4S,WAAU,YAAYoO,GAChDzS,MAAMC,IACLN,KACAoG,EAAAA,EAAAA,GAAM,UAAW9F,EAAIxO,KAAKqhB,QAAQ,IAEnCxR,OAAOC,KACNwE,EAAAA,EAAAA,GAAM,QAASxE,EAAI+J,SAAS7Z,KAAKiO,MAAM,IAE3ChC,GAAS,GACTM,GAAW,EAAM,EAyFiBnM,SAAA,EAC5BC,EAAAA,EAAAA,MAACkU,EAAAA,EAAS,CAAAnU,SAAA,EACRF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,UAASC,SAAA,CAAC,cACV,IACoB,KAA3B,OAAJJ,QAAI,IAAJA,GAAmB,QAAf8O,EAAJ9O,EAAMsP,qBAAa,IAAAR,OAAf,EAAJA,EAAqBzK,OAClB,WAC+B,KAA3B,OAAJrE,QAAI,IAAJA,GAAmB,QAAfmL,EAAJnL,EAAMsP,qBAAa,IAAAnE,OAAf,EAAJA,EAAqB9G,OACrB,kCACA,SAGRhE,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,aAAY/U,SAAC,iBAC5BF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,WACLsB,KAAK,aACLvP,GAAG,aACHoR,YAAY,2BACZE,KAAK,IACL5B,SAAUkB,QAGd3V,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,aAAYzU,SAAC,gBACxBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CAACrB,KAAK,OAAOjO,GAAG,aAAauP,KAAK,aAAaG,SAAUkB,UAGnE9V,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,WAAUzU,SAAC,cACtBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CAACrB,KAAK,OAAOjO,GAAG,WAAWuP,KAAK,WAAWG,SAAUkB,gBAKnE3V,EAAAA,EAAAA,MAACgV,EAAAA,EAAW,CAAAjV,SAAA,EACVF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACnT,MAAM,YAAYsT,SAAO,EAACC,QAASzF,EAAO/H,KAAK,MAAM5F,SAAC,YAG9DF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLpT,MAAM,UACNqT,SAAUhH,EACVnM,UAAU,kCACVC,SAECkM,GACCjM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAACnV,UAAU,OAAOwT,KAAK,KAAK1T,MAAM,UAAU,aAItD,oBAMT,E,6DCnNA,MAAMshB,GAAkBpK,IAC7B,MAAMqK,EAAY,OAAHrK,QAAG,IAAHA,OAAG,EAAHA,EAAKsE,QAEpB,IAAIgG,EAAM,EACNC,EAAQ,EACZ,IAAU,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQrb,QAAS,EAAG,CACtB,IAAK,IAAIzB,EAAI,EAAGA,GAAU,OAAN8c,QAAM,IAANA,OAAM,EAANA,EAAQrb,QAAQzB,IAClC+c,GAAOD,EAAO9c,GAAGuW,cAGnByG,EAAQD,EAAMD,EAAOrb,MACvB,MACEub,EAAW,OAAHvK,QAAG,IAAHA,OAAG,EAAHA,EAAK8D,cAGf,OAAOyG,CAAK,EAGDC,GAAkBxK,IAC7B,MAAMyK,EAAY,OAAHzK,QAAG,IAAHA,OAAG,EAAHA,EAAK9R,QAEpB,IAAIoc,EAAM,EACNC,EAAQ,EAEZ,IAAU,OAANE,QAAM,IAANA,OAAM,EAANA,EAAQzb,QAAS,EAAG,CACtB,IAAK,IAAIzB,EAAI,EAAGA,EAAIkd,EAAOzb,OAAQzB,IACjC+c,GAAOF,GAAeK,EAAOld,IAG/Bgd,EAAQD,EAAMG,EAAOzb,MACvB,MACEub,EAAW,OAAHvK,QAAG,IAAHA,OAAG,EAAHA,EAAK8D,cAGf,OAAOyG,CAAK,EC0iBd,GAljBoBG,KAClB,MAAM,KAAEpW,IAASC,EAAAA,EAAAA,MACX,UAAEC,IAAcC,EAAAA,EAAAA,OACfI,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BkD,EAAMyG,IAAW3J,EAAAA,EAAAA,eAASa,IAC1BkV,EAAgBC,IAAqBhW,EAAAA,EAAAA,aACrCiW,EAAgBC,IAAqBlW,EAAAA,EAAAA,aACrCmW,EAAYC,IAAiBpW,EAAAA,EAAAA,WAAS,IACtCnI,EAAcwe,IAAmBrW,EAAAA,EAAAA,aACjCsW,EAAcC,IAAmBvW,EAAAA,EAAAA,aACjCsB,EAAUC,IAAevB,EAAAA,EAAAA,UAAS,GACnC8B,GAAMC,EAAAA,EAAAA,MAEN,OAAEwM,IAAWiI,EAAAA,EAAAA,OAEb,UAAEvU,EAAS,MAAEC,EAAK,KAAEjO,EAAI,QAAEkO,IAAYC,EAAAA,EAAAA,GAAS,CACnDC,SAAU,CAAC,OACXC,QAASA,IACPR,EAAIS,IAAI,YAAD/N,OAAaoL,EAAS,mBAAApL,OAAkB+Z,IAAU/L,MAAMC,IAC7D4T,EAAgB5T,EAAIxO,KAAKwiB,SAClBhU,EAAIxO,KAAKA,WAItByO,EAAAA,EAAAA,YAAU,KACR6T,EAAgBtiB,GAEhByP,uBACQ5B,EACH6B,KAAK,kCAAmC,CAAEC,IAAK,CAAChE,KAChD4C,MAAMC,IAAS,IAADoB,EACbtC,EAA4B,QAAjBsC,EAACpB,EAAIxO,KAAKA,KAAK,UAAE,IAAA4P,OAAA,EAAhBA,EAAkBvC,SAAS,IAExCwC,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAEAG,EAAe,GACd,CAACjQ,IAEJ,MAIMwZ,EAAaC,IACjBxN,GAAS,GACTyJ,EAAQ+D,EAAa,EAGjBgJ,EAAiBhT,UACrBsS,EAAkBtM,GAClBwM,GAAkB,SACZpU,EACH6B,KAAK,YAADnP,OAAiB,OAAJkL,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAKkB,WAAU,KAAA5S,OAAIkV,EAAM,cAChDlH,MAAMC,IACLN,KACAoG,EAAAA,EAAAA,GAAM,UAAW9F,EAAIxO,KAAKqhB,QAAQ,IAEnCxR,OAAM,MACLyE,EAAAA,EAAAA,GAAM,QAAS,wBAAwB,IAE3CyN,IACAE,GAAkB,EAAM,EAGpBS,EAAuB,CAAC,YACxBC,EAAyB,CAAC,YAEhClU,EAAAA,EAAAA,YAAU,KACA,OAAJhD,QAAI,IAAJA,GAAAA,EAAMwG,KAAKC,MAAMC,MAAM7H,GAASoY,EAAqBtQ,SAAS9H,MAChE6X,GAAc,EAChB,GACC,CAAC1W,IAEJ,MAQOmX,EAAUC,GAAetY,EAAAA,SAAe,MAUzCuY,EAAOC,QAAQH,GACfxd,EAAK0d,EAAO,sBAAmBlW,EAMrC,OAJA6B,EAAAA,EAAAA,YAAU,KACRP,GAAS,GACR,CAACvC,KAGFtL,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAAnQ,UACFF,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAQ,CAAAtQ,SACN4N,EACC,aACEC,EACF,yBAEA5N,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEC,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAACyS,GAAG,UAAU1B,GAAG,IAAGlhB,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAC+S,EAAAA,EAAM,CACLC,KAAK,SACLlT,UAAU,4CACVF,MAAM,QACN0T,KAAK,KAAIvT,SAAA,EAETF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,cAActS,MAAO,CAAEC,SAAU,UAAY,WAGlER,EAAAA,EAAAA,MAAC+S,EAAAA,EAAM,CACLC,KAAK,SACLlT,UAAU,4CACVF,MAAM,QACN0T,KAAK,KAAIvT,SAAA,EAETF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,OAAOtS,MAAO,CAAEC,SAAU,UAAY,mBAK/DX,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAACyS,GAAG,KAAK1B,GAAG,IAAGlhB,UACjBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLlT,UAAU,YACV8iB,OAAO,KACPzM,YAAY,iBACZ1B,SAAWd,GAnEbnM,KACpB,MAAMqb,EAAgBljB,EAAKiH,QAAQxC,GACjCA,EAAKK,WAAWqe,cAAc/Q,SAASvK,EAAMsb,iBAG/Cb,EAAgBY,EAAc,EA8DSE,CAAapP,EAAE/N,OAAO4B,UAEzCxH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0CAAyCC,SAAA,EACtDF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLlT,UAAU,0DACV,mBAAkBiF,EAClBie,QAAQ,YACR7P,QAjEL8P,IACnBT,EAAYS,EAAMC,cAAc,EAgEanjB,UAErBF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,aAAatS,MAAO,CAAEC,SAAU,aAErDX,EAAAA,EAAAA,KAACsjB,GAAAA,GAAO,CACNpe,GAAIA,EACJ0d,KAAMA,EACNF,SAAUA,EACVpP,QArENiQ,KAClBZ,EAAY,KAAK,EAqEOa,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UACZxjB,UAEFF,EAAAA,EAAAA,KAAC4jB,GAAAA,EAAU,CAACC,GAAI,CAAE7e,EAAG,GAAI9E,UACvBC,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAAAnQ,SAAA,EACFF,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CAAAvQ,UACFF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CAACC,GAAG,IAAGlS,SAAC,YAEfF,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CAAAvQ,UACFF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CAACC,GAAG,IAAGlS,SAAC,gBAEfF,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CAAAvQ,UACFF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CAACC,GAAG,IAAGlS,SAAC,yBAOpB,OAAJqL,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAKC,MAAMC,MAAM7H,GAASqY,EAAuBvQ,SAAS9H,QAC/DpK,EAAAA,EAAAA,KAAC8jB,GAAAA,GAAe,CACdvJ,UAAUva,EAAAA,EAAAA,KAAC+jB,GAAAA,EAAO,CAAOrgB,eAAc5D,SACvCkkB,SAAQ,iBAAA3jB,OAA+B,OAAZqD,QAAY,IAAZA,OAAY,EAAZA,EAAcugB,eAAc,OAAA5jB,OAAkB,OAAZqD,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,UAC3ExD,MAAO,CAAE4R,eAAgB,QAASpS,UAsBlCF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLlT,UAAU,qDACVC,UAEAF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,gBAAgBtS,MAAO,CAAEC,SAAU,uBAQlER,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACyS,GAAG,mBAAkB5iB,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yDAAwDC,SAAA,EACrEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,UAASC,SAAA,CAAC,sBAAgC,OAAZwD,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,aAC1DlE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEgB,MAAO,OAAQxB,UAC3BF,EAAAA,EAAAA,KAACoJ,EAAQ,CACPnJ,UAAU,GACVF,MAAM,UACN4H,MAAOwF,EAAS2F,UAChBpS,MAAO,CAAEiB,OAAQ,aAGrBxB,EAAAA,EAAAA,MAAA,QAAMF,UAAU,UAASC,SAAA,CAAEiN,EAAS2F,UAAU,gBAIpD3S,EAAAA,EAAAA,MAAA,SAAOF,UAAU,4BAA2BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAI0B,MAAM,KAAIxB,SAAC,OACfF,EAAAA,EAAAA,KAAA,MAAIyf,QAAQ,IAAI/e,MAAO,CAAEwjB,SAAU,SAAUhkB,SAAC,gBAG9CF,EAAAA,EAAAA,KAAA,MAAI0B,MAAM,GAAExB,SAAC,YACbF,EAAAA,EAAAA,KAAA,MAAIU,MAAO,CAAEwjB,SAAU,SAAUhkB,SAAC,gBAClCF,EAAAA,EAAAA,KAAA,MAAIU,MAAO,CAAEwjB,SAAU,SAAUhkB,SAAC,cAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAI0B,MAAM,MAAKxB,SAAC,QACf8hB,IAAchiB,EAAAA,EAAAA,KAAA,MAAI0B,MAAM,aAG7B1B,EAAAA,EAAAA,KAAA,SAAAE,UACe,OAAZiiB,QAAY,IAAZA,OAAY,EAAZA,EAAclc,QAAS,EACV,OAAZkc,QAAY,IAAZA,OAAY,EAAZA,EAAc7d,KAAI,CAAC6f,EAAI5H,KAAG,IAAA6H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACxBtkB,EAAAA,EAAAA,MAACwE,EAAAA,SAAQ,CAAAzE,SAAA,EACPC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAKqc,EAAM,EAAE,QACbpc,EAAAA,EAAAA,MAAA,MACEsf,QAAQ,IACR/e,MAAO,CAAEgkB,OAAQ,WACjBpR,QAASA,IAAMgG,EAAU6K,GAAIjkB,SAAA,EAE7BF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEoB,WAAY,OAAQ5B,SAAEikB,EAAGvf,cACxC5E,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,aAAYC,SAAA,CACtC,OAAFikB,QAAE,IAAFA,GAAW,QAATC,EAAFD,EAAIhf,eAAO,IAAAif,OAAT,EAAFA,EAAane,OAAO,cAEtB,MACD9F,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,aAAYC,SAAA,EACzCF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,UAAUtS,MAAO,CAAEC,SAAU,UAC/CwjB,EAAGjJ,gBAIRlb,EAAAA,EAAAA,KAAA,MAAAE,SACiB,IAAdikB,EAAGtf,QACF7E,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,YAAWC,SAAC,UAG3B,IAAdikB,EAAGtf,QACL7E,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,UAASG,SAAC,gBACP,IAAdikB,EAAGtf,QACL7E,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,YAAWC,SAAC,iBAG3B,IAAdikB,EAAGtf,QACL7E,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,UAASG,SAAC,cAEvBF,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,SAAQG,SAAC,gBAG1BF,EAAAA,EAAAA,KAAA,MAAAE,UAAK+Q,EAAAA,EAAAA,GAASkT,EAAGjT,eACjBlR,EAAAA,EAAAA,KAAA,MAAIC,UAAS,GAAAI,QAAKgc,EAAAA,GAAAA,GAAU8H,EAAGrf,UAAY,cAAgB,IAAK5E,UAC7D+Q,EAAAA,EAAAA,GAASkT,EAAGrf,aAEf9E,EAAAA,EAAAA,KAAA,MAAAE,UACEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,0EAAyEC,SAAA,CACpE,QADoEmkB,EACtF5C,GAAe0C,UAAG,IAAAE,OAAA,EAAlBA,EAAoBvR,UAAU,UAGnC9S,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACxB,OAAFikB,QAAE,IAAFA,GAAQ,QAANG,EAAFH,EAAIpf,YAAI,IAAAuf,OAAN,EAAFA,EAAUhgB,KACT,CAACgY,EAAK9X,KAAC,IAAAmgB,EAAA,OACLngB,EAAI,IACFrE,EAAAA,EAAAA,MAACwE,EAAAA,SAAQ,CAAAzE,SAAA,EACPF,EAAAA,EAAAA,KAAA,OACEkF,GAAE,WAAA7E,OAAaic,EAAIpX,IACnBkM,IAAKC,EACLpR,UAAU,yBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAET3B,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXzR,MAAOmb,EAAIrX,WACXC,GAAU,QAARyf,EAAErI,EAAIpX,UAAE,IAAAyf,OAAA,EAANA,EAAQ9R,eAXDyJ,EAAIpX,GAcpB,KAEF,OAAFif,QAAE,IAAFA,GAAQ,QAANI,EAAFJ,EAAIpf,YAAI,IAAAwf,OAAN,EAAFA,EAAUte,QAAS,IAClB9F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8CAA6CC,SAAA,CAAC,IACzDikB,EAAGpf,KAAKkB,OAAS,YAM5B+b,IACChiB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SACxB4hB,GAAkBF,IAAmBuC,EAAG7e,SACvCtF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,aAEzBC,EAAAA,EAAAA,KAAA,QAAMmB,MAAM,YAAYT,MAAO,CAAE4R,eAAgB,QAASpS,UACxDF,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,UACVqT,QAASA,IAAMiP,EAAe4B,EAAG7e,SAASpF,UAE1CF,EAAAA,EAAAA,KAAC+S,IAAY,CACXC,KAAK,OACL/S,UAAS,GAAAI,OAAK8jB,EAAGS,YAAc,2BAQlC,QAAVJ,EAAAL,EAAGhf,eAAO,IAAAqf,OAAA,EAAVA,EAAYve,QAAS,IACV,QADWwe,EACrBN,EAAGhf,eAAO,IAAAsf,OAAA,EAAVA,EAAYngB,KAAI,CAACc,EAAIyf,KAAE,IAAAC,EAAAC,EAAA1f,EAAA2f,EAAAC,EAAAC,EAAA,OACrB/kB,EAAAA,EAAAA,MAACwE,EAAAA,SAAQ,CAAAzE,SAAA,EACPC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAA,MAAIuB,MAAM,IAAGxB,SAAA,CACVqc,EAAM,EAAE,IAAEsI,EAAK,MAElB1kB,EAAAA,EAAAA,MAAA,MACEsf,QAAQ,IACRnM,QAASA,IAAMgG,EAAUlU,GACzB1E,MAAO,CACLgkB,OAAQ,UACRtjB,UAAW,OACXU,WAAY,OACZ5B,SAAA,CAEDkF,EAAGR,YACJ5E,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,aAAYC,SAAA,CACtC,OAAFkF,QAAE,IAAFA,GAAW,QAAT0f,EAAF1f,EAAImW,eAAO,IAAAuJ,OAAT,EAAFA,EAAa7e,OAAO,cAEtB,MACD9F,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,aAAYC,SAAA,EACzCF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,UAAUtS,MAAO,CAAEC,SAAU,UAC/CyE,EAAG8V,gBAGRlb,EAAAA,EAAAA,KAAA,MAAAE,SAAI,OACJF,EAAAA,EAAAA,KAAA,MAAAE,UAAK+Q,EAAAA,EAAAA,GAAS7L,EAAG8L,eACjBlR,EAAAA,EAAAA,KAAA,MACEC,UAAS,GAAAI,QAAKgc,EAAAA,GAAAA,GAAUjX,EAAGN,UAAY,cAAgB,IAAK5E,UAE3D+Q,EAAAA,EAAAA,GAAS7L,EAAGN,aAEf9E,EAAAA,EAAAA,KAAA,MAAAE,UACEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,0EAAyEC,SAAA,CACpE,QADoE6kB,EACtF1D,GAAejc,UAAG,IAAA2f,OAAA,EAAlBA,EAAoBjS,UAAU,UAGnC9S,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACxB,OAAFkF,QAAE,IAAFA,GAAQ,QAANC,EAAFD,EAAIL,YAAI,IAAAM,OAAN,EAAFA,EAAUf,KACT,CAACgY,EAAK9X,KAAC,IAAA2gB,EAAA,OACL3gB,EAAI,IACFrE,EAAAA,EAAAA,MAACwE,EAAAA,SAAQ,CAAAzE,SAAA,EACPF,EAAAA,EAAAA,KAAA,OACEkF,GAAE,WAAA7E,OAAaic,EAAIpX,IACnBkM,IAAKC,EACLpR,UAAU,yBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAET3B,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXzR,MAAOmb,EAAIrX,WACXC,GAAU,QAARigB,EAAE7I,EAAIpX,UAAE,IAAAigB,OAAA,EAANA,EAAQtS,eAXDyJ,EAAIpX,GAcpB,KAEF,OAAFE,QAAE,IAAFA,GAAQ,QAAN4f,EAAF5f,EAAIL,YAAI,IAAAigB,OAAN,EAAFA,EAAU/e,QAAS,IAClB9F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8CAA6CC,SAAA,CAAC,IACzDkF,EAAGL,KAAKkB,OAAS,YAM5B+b,IACChiB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SACxB4hB,GAAkBF,IAAmBxc,EAAGE,SACvCtF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,aAEzBC,EAAAA,EAAAA,KAAA,QACEmB,MAAM,YACNT,MAAO,CAAE4R,eAAgB,QAASpS,UAElCF,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,UACVqT,QAASA,IAAMiP,EAAend,EAAGE,SAASpF,UAE1CF,EAAAA,EAAAA,KAAC+S,IAAY,CACXC,KAAK,OACL/S,UAAS,GAAAI,OAAK+E,EAAGwf,YAAc,yBAnFpCxf,EAAGE,UA2FD,QAAV2f,EAAA7f,EAAGmW,eAAO,IAAA0J,OAAA,EAAVA,EAAYhf,QAAS,IACV,QADWif,EACrB9f,EAAGmW,eAAO,IAAA2J,OAAA,EAAVA,EAAY5gB,KAAI,CAAC8gB,EAAKC,KAAG,IAAAC,EAAAC,EAAAC,EAAA,OACvBrlB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAA,MAAIuB,MAAM,IAAGxB,SAAA,CACVqc,EAAM,EAAE,IAAEsI,EAAK,EAAE,IAAEQ,EAAM,MAE5BllB,EAAAA,EAAAA,MAAA,MACEmT,QAASA,IAAMgG,EAAU8L,GACzB1kB,MAAO,CAAEgkB,OAAQ,UAAWtjB,UAAW,QAASlB,SAAA,CAE/CklB,EAAIxgB,YACL5E,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC2a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,aAAYC,SAAA,EACzCF,EAAAA,EAAAA,KAAC+S,IAAY,CACXC,KAAK,UACLtS,MAAO,CAAEC,SAAU,UAEpBykB,EAAIlK,gBAGTlb,EAAAA,EAAAA,KAAA,MAAAE,SAAI,OACJF,EAAAA,EAAAA,KAAA,MAAAE,UAAK+Q,EAAAA,EAAAA,GAASmU,EAAIlU,eAClBlR,EAAAA,EAAAA,KAAA,MACEC,UAAS,GAAAI,QACPgc,EAAAA,GAAAA,GAAU+I,EAAItgB,UAAY,cAAgB,IACzC5E,UAEF+Q,EAAAA,EAAAA,GAASmU,EAAItgB,aAEhB9E,EAAAA,EAAAA,KAAA,MAAAE,UACEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,0EAAyEC,SAAA,CACnF,OAAHklB,QAAG,IAAHA,GAAkB,QAAfE,EAAHF,EAAKrK,qBAAa,IAAAuK,OAAf,EAAHA,EAAoBxS,UAAU,UAGnC9S,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACvB,OAAHklB,QAAG,IAAHA,GAAS,QAANG,EAAHH,EAAKrgB,YAAI,IAAAwgB,OAAN,EAAHA,EAAWjhB,KACV,CAACgY,EAAK9X,KAAC,IAAAihB,EAAA,OACLjhB,EAAI,IACFrE,EAAAA,EAAAA,MAACwE,EAAAA,SAAQ,CAAAzE,SAAA,EACPF,EAAAA,EAAAA,KAAA,OACEkF,GAAE,WAAA7E,OAAaic,EAAIpX,IACnBkM,IAAKC,EACLpR,UAAU,yBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAET3B,EAAAA,EAAAA,KAAC4S,EAAAA,EAAY,CACXzR,MAAOmb,EAAIrX,WACXC,GAAU,QAARugB,EAAEnJ,EAAIpX,UAAE,IAAAugB,OAAA,EAANA,EAAQ5S,eAXDyJ,EAAIpX,GAcpB,KAED,OAAHkgB,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKrgB,YAAI,IAAAygB,OAAN,EAAHA,EAAWvf,QAAS,IACnB9F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8CAA6CC,SAAA,CAAC,IACzDklB,EAAIrgB,KAAKkB,OAAS,YAM7B+b,IACChiB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SACxB4hB,GAAkBF,IAAmBwD,EAAI9f,SACxCtF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAAC3B,KAAK,KAAK1T,MAAM,aAEzBC,EAAAA,EAAAA,KAAA,QACEmB,MAAM,YACNT,MAAO,CAAE4R,eAAgB,QAASpS,UAElCF,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,UACVqT,QAASA,IAAMiP,EAAe6C,EAAI9f,SAASpF,UAE3CF,EAAAA,EAAAA,KAAC+S,IAAY,CACXC,KAAK,OACL/S,UAAS,GAAAI,OAAK+kB,EAAIR,YAAc,yBAhFrCQ,EAAI9f,QAuFR,OArLIF,EAAGE,QAuLP,OA1RF6e,EAAG7e,QA4RP,KAGbtF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIyf,QAAQ,IAAIiG,MAAM,SAAQxlB,SAAC,yCAalD4L,IAAS9L,EAAAA,EAAAA,KAACwc,EAAAA,EAAS,CAAO1Q,QAAOC,WAAU8B,OAtgBjCA,KACb9B,GAAUD,EAAM,EAqgBsCiD,OAAQ4Q,KAAK,iBAChE,EC/WP,GA9LsB9f,IAA6B,IAA5B,mBAAE8lB,GAAoB9lB,EAC3C,MAAM,KAAE0L,IAASC,EAAAA,EAAAA,MACX,UAAEC,IAAcC,EAAAA,EAAAA,OACfI,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5B8T,EAAMC,IAAW/T,EAAAA,EAAAA,UAAS,KAC1BqP,EAAU4E,IAAejU,EAAAA,EAAAA,aACzB+Z,EAAQC,IAAaha,EAAAA,EAAAA,aACrBia,EAASC,IAAcla,EAAAA,EAAAA,aACvBma,EAAUC,IAAepa,EAAAA,EAAAA,aACzBO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,GAEjC8B,GAAMC,EAAAA,EAAAA,MAEN,UAAEE,EAAS,MAAEC,EAAK,KAAEjO,EAAI,QAAEkO,IAAYC,EAAAA,EAAAA,GAAS,CACnDC,SAAU,CAAC,eACXC,QAASA,IACPR,EAAIS,IAAI,eAAD/N,OAAgBoL,EAAS,KAAApL,OAAQ,OAAJkL,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAKkB,WAAU,iBAAgB5E,MAAMC,GACtEA,EAAIxO,KAAKA,UAItByO,EAAAA,EAAAA,YAAU,KACRoX,EAAmB,GAAG,GACrB,CAAC7lB,IAEJ,MAAMqgB,EAAaA,CAACC,EAAS8F,EAASC,EAAWC,KAC/Cra,GAAS,GACT6T,EAAQQ,GACRyF,EAAUK,GAAW,MACrBH,EAAWI,GACXF,EAAYG,EAAU,EAGlBvY,EAASA,KACb9B,GAAUD,EAAM,EAwBlB,OACE3L,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAAnQ,SACD4N,GACC9N,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAAArQ,UACHF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAQ,CAAAtQ,SAAC,iBAEV6N,EACF,yBAEA/N,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,cAAaC,SAC1BJ,IACCK,EAAAA,EAAAA,MAACqQ,EAAAA,EAAQ,CAAAtQ,SAAA,EACPC,EAAAA,EAAAA,MAACuQ,EAAAA,EAAS,CAACxH,IAAI,KAAKjJ,UAAU,iCAAgCC,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC/a,MAAM,QAAQE,UAAU,YAAWC,SAAC,mBAI7CF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEC,SAAU,QAAST,UAAEsS,EAAAA,EAAAA,GAAQ1S,EAAK2S,kBAEnDzS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC7CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,iCAC2BF,EAAAA,EAAAA,KAAA,UAAAE,SAASJ,EAAKumB,mBAA0B,MAAI,KACzErmB,EAAAA,EAAAA,KAAA,UAAAE,SAASJ,EAAKwmB,yBAGlBtmB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,gBAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CAAClS,UAAU,YAAYmS,GAAG,GAAGrM,OAAO,QAAO7F,SAC7CJ,EAAKoU,YAIZ/T,EAAAA,EAAAA,MAAA,OACEF,UAAU,2EACVS,MAAO,CAAEyQ,aAAc,QAASjR,SAAA,EAEhCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OACEoR,IAAKC,EACLpR,UAAU,iBACVqR,IAAI,SACJ5P,MAAM,KACNC,OAAO,QAETxB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,SAAEJ,EAAKohB,WAC1ClhB,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAEJ,EAAKumB,4BAI1ClmB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLM,KAAK,KACL1T,MAAM,UACNsT,SAAO,EACPC,QAASA,IAAM6M,EAAW,WAAYrgB,EAAKymB,WAAYzmB,EAAK0mB,WAAWtmB,SACxE,cAGDF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLM,KAAK,KACL1T,MAAM,UACNuT,QAASA,IACP6M,EAAW,UAAWrgB,EAAKymB,WAAYzmB,EAAK2mB,WAAY3mB,EAAK0mB,WAC9DtmB,SACF,0BAUfC,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQ1H,EAAO+B,OAAQA,EAAO/H,KAAK,MAAO2N,KAAK,KAAKC,MAAM,EAAOC,UAAQ,EAAAzT,SAAA,EAC9EF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQA,EAAO/H,KAAK,MAAM5F,SAC3B,YAATyf,EAAqB,WAAa,cAErCxf,EAAAA,EAAAA,MAACwgB,GAAAA,EAAI,CAAC9M,SA1GStE,UACnBuE,EAAEC,iBACF1H,GAAW,SACLsB,EACH6B,KAAK,eAADnP,OAAoB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAM4S,WAAU,kBAAkB,CACrDsB,WAAYvI,EACZyV,QAAS0E,EACTc,SAAUZ,EACVU,UAAWR,EACXnhB,OAAiB,YAAT8a,EAAqB,WAAa,WAC1CiB,KAAM1F,IAEP7M,MAAK,KACJL,KACAoG,EAAAA,EAAAA,GAAM,UAAU,iBAAD/T,OAA4B,YAATsf,EAAqB,WAAa,YAAa,IAElFhQ,OAAOC,GAAQC,QAAQC,IAAIF,KAC9B7D,GAAS,GACTM,GAAW,EAAM,EAwFgBnM,SAAA,EAC3BF,EAAAA,EAAAA,KAACqU,EAAAA,EAAS,CAAAnU,UACRF,EAAAA,EAAAA,KAACsU,EAAAA,EAAS,CAAApU,UACRF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,WACLjO,GAAG,QACHuP,KAAK,QACL6B,YAAY,iBACZE,KAAK,IACLD,UAAQ,EACR3B,SAAWd,GAAMgM,EAAYhM,EAAE/N,OAAO4B,cAI5CxH,EAAAA,EAAAA,MAACgV,EAAAA,EAAW,CAAAjV,SAAA,EACVF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACnT,MAAM,YAAYsT,SAAO,EAACC,QAASzF,EAAO/H,KAAK,MAAM5F,SAAC,YAG9DF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLpT,MAAK,GAAAM,OAAc,YAATsf,EAAqB,UAAY,WAC3CvM,SAAUhH,EACVnM,UAAU,kCAAiCC,SAE1CkM,GACCjM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAACnV,UAAU,OAAOwT,KAAK,OAAO,iBAIxCtT,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,OAAOtS,MAAO,CAAEC,SAAU,UACnC,YAATgf,EAAqB,UAAY,uBAO7C,EChLP,GAtByB9f,IAA+D,IAA9D,UAAE8mB,EAAS,eAAEjH,EAAc,mBAAEiG,EAAkB,MAAE3T,GAAOnS,EAChF,OACEM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,CACiB,IAAdymB,IAAmB3mB,EAAAA,EAAAA,KAACgL,EAAW,KAC9BgH,EAAME,SAAS,aAA6B,IAAdyU,IAAmB3mB,EAAAA,EAAAA,KAACid,GAAQ,IAC7C,IAAd0J,IAAmB3mB,EAAAA,EAAAA,KAACie,GAAS,IACf,IAAd0I,IAAmB3mB,EAAAA,EAAAA,KAAC2e,GAAO,IACb,IAAdgI,IAAmB3mB,EAAAA,EAAAA,KAAC4mB,GAAS,CAAOlH,oBACnC1N,EAAME,SAAS,aAA6B,IAAdyU,IAAmB3mB,EAAAA,EAAAA,KAAC6gB,GAAW,IAChD,IAAd8F,IAAmB3mB,EAAAA,EAAAA,KAAC2hB,GAAW,IACjB,IAAdgF,IAAmB3mB,EAAAA,EAAAA,KAAC6mB,GAAa,CAAOlB,yBACxC,E,gDCCP,MAscA,GAtcyB9lB,IAAiD,IAADinB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA/C,MAAErb,EAAK,SAAEC,EAAQ,OAAE8B,EAAM,KAAE/N,EAAI,QAAEkO,GAASnO,EAClE,MAAOunB,EAAaC,IAAkBxb,EAAAA,EAAAA,UAAS,CAAC,IACzCyb,EAAYC,IAAiB1b,EAAAA,EAAAA,UAAS,CAAC,IACvCkJ,EAASyS,IAAc3b,EAAAA,EAAAA,UAAS,CAAC,IACjCkB,EAAgBC,IAAqBnB,EAAAA,EAAAA,UAAS,KAC9C5H,EAASwjB,IAAc5b,EAAAA,EAAAA,UAAS,CAAC,IACjCO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChC6b,EAAeC,IAAoB9b,EAAAA,EAAAA,WAAS,IAC5C+b,EAAgBC,IAAqBhc,EAAAA,EAAAA,WAAS,IAC9Cic,EAAWC,IAAgBlc,EAAAA,EAAAA,aAC3Bmc,EAAcC,IAAmBpc,EAAAA,EAAAA,UAAS,CAAC,IAC3Cqc,EAAgBC,IAAqBtc,EAAAA,EAAAA,UAAS,CAAC,IAC/Cuc,EAAqBC,IAA0Bxc,EAAAA,EAAAA,aAC/Cyc,EAAcC,KAAmB1c,EAAAA,EAAAA,WAAS,GAC3CvB,IAAqBC,EAAAA,EAAAA,MAErBoD,IAAMC,EAAAA,EAAAA,MAEZW,EAAAA,EAAAA,YAAU,KAAO,IAADK,EAAA3D,EAAAC,EAAAC,EAAAC,EAAAE,EACd+b,EAAevnB,GACfynB,EAAc,CACZtD,eAAoB,OAAJnkB,QAAI,IAAJA,OAAI,EAAJA,EAAMmkB,eACtBjgB,aAAkB,OAAJlE,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,aACpB4M,MAAW,OAAJ9Q,QAAI,IAAJA,OAAI,EAAJA,EAAM8Q,MACbc,iBAAsB,OAAJ5R,QAAI,IAAJA,OAAI,EAAJA,EAAM4R,iBACxBD,eAAoB,OAAJ3R,QAAI,IAAJA,OAAI,EAAJA,EAAM2R,eACtB+W,QAAa,OAAJ1oB,QAAI,IAAJA,OAAI,EAAJA,EAAM0oB,QACfC,SAAc,OAAJ3oB,QAAI,IAAJA,OAAI,EAAJA,EAAM2oB,SAChBC,YAAiB,OAAJ5oB,QAAI,IAAJA,OAAI,EAAJA,EAAM4oB,YACnBpZ,SAAc,OAAJxP,QAAI,IAAJA,OAAI,EAAJA,EAAMwP,SAChB4B,WAAgB,OAAJpR,QAAI,IAAJA,GAAmB,QAAf8O,EAAJ9O,EAAMsP,qBAAa,IAAAR,OAAf,EAAJA,EAAqBsC,WACjCpM,SAAc,OAAJhF,QAAI,IAAJA,GAAmB,QAAfmL,EAAJnL,EAAMsP,qBAAa,IAAAnE,OAAf,EAAJA,EAAqBnG,SAC/B6L,KAAU,OAAJ7Q,QAAI,IAAJA,GAAmB,QAAfoL,EAAJpL,EAAMsP,qBAAa,IAAAlE,OAAf,EAAJA,EAAqByF,KAC3B1M,QAAa,OAAJnE,QAAI,IAAJA,GAAmB,QAAfqL,EAAJrL,EAAMsP,qBAAa,IAAAjE,OAAf,EAAJA,EAAqBwd,aAGhCN,EAAuB,CACrB1gB,MAAW,OAAJ7H,QAAI,IAAJA,OAAI,EAAJA,EAAM4oB,YACb7S,MAAW,OAAJ/V,QAAI,IAAJA,OAAI,EAAJA,EAAM8oB,gBAGfT,EAAkB,CAChBxgB,MAAW,OAAJ7H,QAAI,IAAJA,GAAmB,QAAfsL,EAAJtL,EAAMsP,qBAAa,IAAAhE,OAAf,EAAJA,EAAqByd,aAC5BhT,MAAW,OAAJ/V,QAAI,IAAJA,GAAmB,QAAfwL,EAAJxL,EAAMsP,qBAAa,IAAA9D,OAAf,EAAJA,EAAqBud,cAC5B,GACD,CAAC/oB,IAEJ,MAAMgpB,GAAuBvZ,gBACrB5B,GACHS,IAAI,gCACJC,MAAMC,GAAQkZ,EAAWlZ,EAAIxO,QAC7B6P,OAAOC,GAAQC,QAAQC,IAAIF,IAAK,GAGrCrB,EAAAA,EAAAA,YAAU,KAQRua,KAPAvZ,uBACQ5B,GACHS,IAAI,kBACJC,MAAMC,GAAQtB,EAAkBsB,EAAIxO,KAAKA,QACzC6P,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAGAO,EAAqB,GACpB,KAEH5B,EAAAA,EAAAA,YAAU,KACRxB,EAAegc,QAAQ,CAAElT,MAAO,iBAAkBlO,MAAO,WAAY,GACpE,CAACoF,KAEJwB,EAAAA,EAAAA,YAAU,KACe,aAAZ,OAAPtK,QAAO,IAAPA,OAAO,EAAPA,EAAS0D,SACX4gB,IAAgB,GAChBd,EAAW,CAAC,GACd,GACC,CAACxjB,IAEJ,MAAM6R,GAAgBhC,IACpByT,GAAexR,IAAI,IAAWA,EAAM,CAACjC,EAAE/N,OAAO0O,MAAOX,EAAE/N,OAAO4B,SAAS,GAGzE4G,EAAAA,EAAAA,YAAU,KACoB,aAAd,OAAV+Y,QAAU,IAAVA,OAAU,EAAVA,EAAYkB,UACdb,GAAiB,EACnB,GACC,CAACL,IAiDJ,OACEtnB,EAAAA,EAAAA,KAAAoQ,EAAAA,SAAA,CAAAlQ,UACEC,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQ1H,EAAO+B,OAAQA,EAAO/H,KAAK,MAAO2N,KAAK,KAAKC,MAAM,EAAMxT,SAAA,EACrEF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQA,EAAO/H,KAAK,MAAM5F,SAAC,oBACxCC,EAAAA,EAAAA,MAACwgB,GAAAA,EAAI,CAAC9M,SAnDStE,UAAc,IAADyZ,EAAA7R,EAAA8R,EAAAC,EAChCpV,EAAEC,iBACF1H,GAAW,GACXib,EAAW6B,SAAsB,OAAX/B,QAAW,IAAXA,GAA0B,QAAf4B,EAAX5B,EAAahY,qBAAa,IAAA4Z,OAAf,EAAXA,EAA4BG,SAClD7B,EAAWrjB,QACwB,KAAb,QAApBkT,EAAAvR,OAAOgB,KAAK3C,UAAQ,IAAAkT,OAAA,EAApBA,EAAsBlR,QAClBhC,EAAQ0D,MACE,OAAV2f,QAAU,IAAVA,GAAAA,EAAYrjB,QACF,OAAVqjB,QAAU,IAAVA,OAAU,EAAVA,EAAYrjB,QACR,OAAJnE,QAAI,IAAJA,GAAmB,QAAfmpB,EAAJnpB,EAAMsP,qBAAa,IAAA6Z,OAAf,EAAJA,EAAqBJ,aAC3BvB,EAAWoB,YAC6B,KAAb,QAAzBQ,EAAAtjB,OAAOgB,KAAKohB,UAAa,IAAAkB,OAAA,EAAzBA,EAA2BjjB,QAAe+hB,EAAargB,MAAY,OAAJ7H,QAAI,IAAJA,OAAI,EAAJA,EAAM4oB,kBAEjE/a,GACH2J,MAAM,eAADjX,OAA2B,OAAX+mB,QAAW,IAAXA,OAAW,EAAXA,EAAapT,WAAU,WAAWsT,GACvDjZ,MAAK,KACJL,KACAoG,EAAAA,EAAAA,GAAM,UAAW,4BAA4B,IAE9CzE,OAAM,MACLyE,EAAAA,EAAAA,GAAM,QAAS,wBAAwB,IAE3CmU,IAAgB,GAChBlc,GAAW,GACXN,GAAS,EAAM,EA2BkB7L,SAAA,EAC3BC,EAAAA,EAAAA,MAACkU,EAAAA,EAAS,CAAAnU,SAAA,EACRC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,iBAAgB/U,SAAC,oBAChCF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLsB,KAAK,iBACLvP,GAAG,iBACHoR,YAAY,sBACZ1B,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAanD,iBAAkB,SAGjD9jB,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,eAAc/U,SAAC,kBAC9BF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLsB,KAAK,eACLvP,GAAG,eACHoR,YAAY,oBACZ1B,SAAUkB,GACVpB,aAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAapjB,mBAG/B7D,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,aAAYzU,SAAC,gBACxBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLjO,GAAG,aACHuP,KAAK,aACLG,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,GAA0B,QAAfN,EAAXM,EAAahY,qBAAa,IAAA0X,OAAf,EAAXA,EAA4B5V,aAAc,WAI9DlR,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,WAAUzU,SAAC,cACtBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLjO,GAAG,WACHuP,KAAK,WACLG,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,GAA0B,QAAfL,EAAXK,EAAahY,qBAAa,IAAA2X,OAAf,EAAXA,EAA4BjiB,WAAY,cAK9D3E,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,QAAO/U,SAAC,WACvBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,WACLjO,GAAG,QACHuP,KAAK,QACL6B,YAAY,wCACZE,KAAK,IACL5B,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAaxW,QAAS,SAGxCzQ,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,WAAUzU,SAAC,oBACtBC,EAAAA,EAAAA,MAACqU,EAAAA,EAAK,CACJrB,KAAK,SACLjO,GAAG,WACHuP,KAAK,WACLG,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAaqB,WAAY,GAAGvoB,SAAA,EAE1CF,EAAAA,EAAAA,KAAA,UAAQoT,UAAQ,EAACzL,MAAM,KAAIzH,SAAC,eAGpB,OAAP6U,QAAO,IAAPA,GAAuB,QAAhBiS,EAAPjS,EAASqU,sBAAc,IAAApC,OAAhB,EAAPA,EAAyB1iB,KAAK+kB,IAC7BrpB,EAAAA,EAAAA,KAAA,UAA0B2H,MAAO0hB,EAAGZ,SAASvoB,SAC1CmpB,EAAGxY,YADOwY,EAAGZ,qBAOxBzoB,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,WAAUzU,SAAC,cACtBC,EAAAA,EAAAA,MAACqU,EAAAA,EAAK,CACJrB,KAAK,SACLjO,GAAG,WACHuP,KAAK,WACLG,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAa9X,WAAY,GAAGpP,SAAA,EAE1CF,EAAAA,EAAAA,KAAA,UAAQoT,UAAQ,EAACzL,MAAM,MAAKzH,SAAC,gBAG7BF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,WAAUzH,SAAC,cACzBF,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,eAAczH,SAAC,6BAKT,cAAf,OAAXknB,QAAW,IAAXA,OAAW,EAAXA,EAAa9X,WAAoD,cAAf,OAAVgY,QAAU,IAAVA,OAAU,EAAVA,EAAYhY,aACpDnP,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,UAASzU,SAAC,YACpBooB,GACCtoB,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLsB,KAAK,UACLvP,GAAG,UACHoR,YAAY,cACZ1B,SAAUkB,MAGZ9V,EAAAA,EAAAA,KAAC6U,EAAAA,GAAM,CACLC,WAAYxK,GACZyK,QAAShI,EACT2H,aAAcwT,EACdtT,SAAWI,GAAWyS,EAAWzS,SAIvC7U,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,OAAM/U,SAAC,mDACtBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,WACLjO,GAAG,OACHuP,KAAK,OACL6B,YAAY,gCACZE,KAAK,IACL5B,SAAUkB,GACVpB,aAAyB,OAAX0S,QAAW,IAAXA,GAA0B,QAAfH,EAAXG,EAAahY,qBAAa,IAAA6X,OAAf,EAAXA,EAA4BtW,WAG9CxQ,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,mBAAkB/U,SAAC,sBAClCC,EAAAA,EAAAA,MAACmpB,GAAAA,EAAU,CAAAppB,SAAA,EACTF,EAAAA,EAAAA,KAACupB,GAAAA,EAAc,CAAArpB,SAAC,SAChBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,SACLpK,IAAI,IACJ7D,GAAG,mBACHuP,KAAK,mBACLG,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAa1V,mBAAoB,cAKvD1R,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACU,QAAQ,iBAAgB/U,SAAC,oBAChCC,EAAAA,EAAAA,MAACmpB,GAAAA,EAAU,CAAAppB,SAAA,EACTF,EAAAA,EAAAA,KAACupB,GAAAA,EAAc,CAAArpB,SAAC,SAChBF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,SACLpK,IAAI,IACJ7D,GAAG,iBACHuP,KAAK,iBACLG,SAAUkB,GACVpB,cAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAa3V,iBAAkB,mBAQ1DiW,GACC1nB,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CAAAvQ,UACFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,KAAIlhB,UACVC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,gBAAezU,SAAC,uBAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEgB,MAAO,OAAQxB,UAC3BF,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CACJrB,KAAK,OACLsB,KAAK,gBACLvP,GAAG,gBACHoR,YAAY,cACZ1B,SAAWd,GAAMiU,EAAajU,EAAE/N,OAAO4B,YAG3C3H,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLjT,UAAU,4BACVkT,KAAK,SACLpT,MAAM,UACN0T,KAAK,KACLH,QAxND/D,UACnBsY,GAAkB,GACdC,QACIna,GACH6B,KAAK,gCAAiC,CAAEga,cAAe1B,IACvDzZ,MAAMC,IACLwa,MACA1U,EAAAA,EAAAA,GAAM,UAAW9F,EAAIxO,KAAKqhB,QAAQ,IAEnCxR,OAAM,MACLyE,EAAAA,EAAAA,GAAM,QAAS,uBAAuB,KAG1CA,EAAAA,EAAAA,GAAM,QAAS,yBAEjB2T,IACAJ,GAAiB,GACjBE,GAAkB,EAAM,EAwMJzU,SAAUwU,EAAe1nB,SAExB0nB,GACCznB,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAACnV,UAAU,OAAOwT,KAAK,KAAK1T,MAAM,UAAU,aAItD,UAGJC,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CACLC,KAAK,SACLE,SAAO,EACPC,QAASA,IAAMqU,GAAiB,GAChCvU,SAAUwU,EAAe1nB,SAC1B,sBAQTC,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,UAASzU,SAAC,mBACrBC,EAAAA,EAAAA,MAACqU,EAAAA,EAAK,CACJrB,KAAK,SACLjO,GAAG,UACHuP,KAAK,UACLC,cAAyB,OAAX0S,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,UAAW,GACtC5T,SAAUkB,GACVpV,MAAO,CAAE+oB,aAAc,YAAavpB,SAAA,EAEpCF,EAAAA,EAAAA,KAAA,UAAQoT,UAAQ,EAACzL,MAAM,KAAIzH,SAAC,eAGpB,OAAP6U,QAAO,IAAPA,GAAsB,QAAfmS,EAAPnS,EAAS2U,qBAAa,IAAAxC,OAAf,EAAPA,EAAwB5iB,KAAKqlB,IAC5B3pB,EAAAA,EAAAA,KAAA,UAEE2H,MAAOgiB,EAAGnB,QACV9nB,MAAO,CACLgB,MAAO,OACP+nB,aAAc,YACdvpB,SAEDypB,EAAG7Y,kBAPC6Y,EAAGnB,YAUZxoB,EAAAA,EAAAA,KAAA,UAAQ2H,MAAM,UAASzH,SAAC,4BAI9BF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAAC+Q,GAAG,IAAGlhB,UACTC,EAAAA,EAAAA,MAACmU,EAAAA,EAAS,CAAApU,SAAA,EACRF,EAAAA,EAAAA,KAACuU,EAAAA,EAAK,CAACI,IAAI,cAAc1U,UAAU,aAAYC,SAAC,kBAGvB,OAAd,OAAVonB,QAAU,IAAVA,OAAU,EAAVA,EAAYkB,UAAwD,OAA1B,OAAXpB,QAAW,IAAXA,GAAoB,QAATD,EAAXC,EAAaoB,eAAO,IAAArB,OAAT,EAAXA,EAAsBtU,aACpD7S,EAAAA,EAAAA,KAAC6U,EAAAA,GAAM,CACLC,WAAYxK,GACZyK,QAAgB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAAS6U,cAClBlV,aAAc0T,EACdxT,SAAWI,GAAWiT,EAAgBjT,MAGxChV,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CAACrB,KAAK,SAASC,UAAQ,EAACsB,aAAa,iBA0BvDvU,EAAAA,EAAAA,MAACgV,EAAAA,EAAW,CAAAjV,SAAA,EACVF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACC,KAAK,SAASpT,MAAM,OAAOqT,SAAUhH,EAAQlM,SAClDkM,GACCjM,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAACoV,EAAAA,EAAO,CAACnV,UAAU,OAAOwT,KAAK,KAAK1T,MAAM,UAAU,iBAItD,YAGJC,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACnT,MAAM,YAAYsT,SAAO,EAACC,QAASzF,EAAO/H,KAAK,MAAM5F,SAAC,qBAMnE,ECzbD2pB,GAAwB,CAAC,UAAW,YACpCC,GAA4B,CAAC,YA4ZnC,GA1ZmBjqB,IAAgE,IAAD+R,EAAA+F,EAAAoS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxb,EAAA3D,EAAAC,EAAAC,EAAA,IAA9D,UAAEwb,EAAS,aAAE0D,EAAY,YAAEC,EAAW,gBAAEC,GAAiB1qB,EAC3E,MAAO2qB,EAAoBC,IAAyB5e,EAAAA,EAAAA,UAAS,KACtD6e,EAAwBC,IAA6B9e,EAAAA,EAAAA,UAAS,IAC/D,KAAEN,IAASC,EAAAA,EAAAA,MACX,MAAEwG,GAAUzG,EAAKwG,KACjBpE,GAAMC,EAAAA,EAAAA,MACN,UAAEnC,IAAcC,EAAAA,EAAAA,OACfkf,EAAYC,IAAiBhf,EAAAA,EAAAA,WAAS,IACtCgB,EAAYC,IAAiBjB,EAAAA,EAAAA,aAE7BC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5Bif,EAAQC,IAAalf,EAAAA,EAAAA,WAAS,IAC9Bmf,EAAYC,IAAiBpf,EAAAA,EAAAA,WAAS,GACvC8J,IAAWC,EAAAA,EAAAA,MAOXsV,GAAUA,KACdH,GAAWD,EAAO,EAGd9Q,GAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAElD+Q,GAAUnR,GAAY5L,IAAI,OAEhCG,EAAAA,EAAAA,YAAU,KACQ,WAAZ4c,GACFd,EAAa,GACQ,aAAZc,GACTd,EAAa,GACQ,aAAZc,GACTd,EAAa,GACQ,eAAZc,GACTd,EAAa,GACQ,gBAAZc,IACTd,EAAa,EACf,GACC,CAACrQ,MAEJzL,EAAAA,EAAAA,YAAU,KAOC,OAALyD,QAAK,IAALA,GAAAA,EAAOC,MAAM7H,GAASyf,GAAsB3X,SAAS9H,MANzDmF,uBACQ5B,EACHS,IAAI,YAAD/N,OAAaoL,EAAS,mBACzB4C,MAAMC,GAAQmc,EAAsBnc,EAAIxO,KAAKA,QAC7C6P,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAEEwb,EACF,GACC,CAACd,KAEJ/b,EAAAA,EAAAA,YAAU,KASC,OAALyD,QAAK,IAALA,GAAAA,EAAOC,MAAM7H,GAAS0f,GAA0B5X,SAAS9H,MAR7DmF,uBACQ5B,EACHS,IAAI,eAAD/N,OAAgBoL,EAAS,KAAApL,OAAQ,OAAJkL,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAKkB,WAAU,iBACrD5E,MAAMC,IACLqc,EAA0Brc,EAAIxO,KAAKA,KAAK,IAEzC6P,OAAOC,GAAQC,QAAQC,IAAIF,IAChC,CAEEyb,EACF,GACC,CAACd,IAEJ,MAAM,UAAEzc,GAAS,KAAEhO,GAAI,QAAEkO,KAAYC,EAAAA,EAAAA,GAAS,CAC5CC,SAAU,CAAC,kBACXC,QAASA,IACPR,EAAIS,IAAI,eAAD/N,OAAgBoL,IAAa4C,MAAMC,GACjCA,EAAIxO,KAAKA,UAItByO,EAAAA,EAAAA,YAAU,KACRP,IAAS,GACR,CAACvC,KAEJ8C,EAAAA,EAAAA,YAAU,KACe,cAAf,OAAJzO,SAAI,IAAJA,QAAI,EAAJA,GAAMwP,UACRxC,GAAc,GAEdA,GAAc,EAChB,GACC,CAAChN,KAEJ,MAyBMwrB,GAAoB,CAAC,QAAS,WAC9BC,GAAsB,CAAC,QAAS,UAAW,YAC3CC,GAAyB,CAAC,UAAW,YACrCC,GAAoB,CAAC,QAAS,WAC9BC,GAAyB,CAAC,YAE1BC,GAAyB,CAAC,UAAW,YACrCC,GAAuB,CAAC,WAE9B,OACEzrB,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEC,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACpQ,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAACqS,GAAG,KAAKxS,GAAG,IAAIrQ,UAAU,4BAA2BC,SAAA,EACvDF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAChC,cAGI,OAAJqL,QAAI,IAAJA,GAAU,QAANqG,EAAJrG,EAAMwG,YAAI,IAAAH,OAAN,EAAJA,EAAYI,MAAMC,MAAM7H,GAASkhB,GAAkBpZ,SAAS9H,QAC3DpK,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAChC,WAIE,OAAJqL,QAAI,IAAJA,GAAU,QAANoM,EAAJpM,EAAMwG,YAAI,IAAA4F,OAAN,EAAJA,EAAY3F,MAAMC,MAAM7H,GAASohB,GAAuBtZ,SAAS9H,QAChEpK,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAChC,gBAIE,OAAJqL,QAAI,IAAJA,GAAU,QAANwe,EAAJxe,EAAMwG,YAAI,IAAAgY,OAAN,EAAJA,EAAY/X,MAAMC,MAAM7H,GAASqhB,GAAkBvZ,SAAS9H,QAC3DpK,EAAAA,EAAAA,KAAAoQ,EAAAA,SAAA,CAAAlQ,UACEF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAChC,aAKA,OAAJqL,QAAI,IAAJA,GAAU,QAANye,EAAJze,EAAMwG,YAAI,IAAAiY,OAAN,EAAJA,EAAYhY,MAAMC,MAAM7H,GAASshB,GAAuBxZ,SAAS9H,SAC3D,OAAJmB,QAAI,IAAJA,GAAU,QAAN0e,EAAJ1e,EAAMwG,YAAI,IAAAkY,GAAVA,EAAYjY,MAAME,SAzCQ,cA0CzB/R,EAAAA,EAAAA,MAACgS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAAA,CAChC,cACa,KACZF,EAAAA,EAAAA,KAAA,OACED,MAAM,SACNE,UAAS,SAAAI,OACPqqB,EAAyB,uBAAyB,sBACjDxqB,SAEoB,OAAtBwqB,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBzkB,aAI5B,OAAJsF,QAAI,IAAJA,GAAU,QAAN2e,EAAJ3e,EAAMwG,YAAI,IAAAmY,OAAN,EAAJA,EAAYlY,MAAMC,MAAM7H,GAASuhB,GAAuBzZ,SAAS9H,QAChEpK,EAAAA,EAAAA,KAAAoQ,EAAAA,SAAA,CAAAlQ,UACEC,EAAAA,EAAAA,MAACgS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAAA,CAChC,SACQ,KACPF,EAAAA,EAAAA,KAAA,OACED,MAAM,SACNE,UAAS,SAAAI,QACW,OAAlBmqB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBvkB,QAAS,EAAI,uBAAyB,sBACzD/F,SAEgB,OAAlBsqB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBvkB,eAKxB,OAAJsF,QAAI,IAAJA,GAAU,QAAN4e,EAAJ5e,EAAMwG,YAAI,IAAAoY,OAAN,EAAJA,EAAYnY,MAAMC,MAAM7H,GAASwhB,GAAqB1Z,SAAS9H,QAC9DjK,EAAAA,EAAAA,MAACgS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAAA,CAChC,WACU,QAGR,OAAJqL,QAAI,IAAJA,GAAU,QAAN6e,EAAJ7e,EAAMwG,YAAI,IAAAqY,OAAN,EAAJA,EAAYpY,MAAMC,MAAM7H,GAASmhB,GAAoBrZ,SAAS9H,QAC7DpK,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHlS,UAAS,GAAAI,OAAmB,IAAdsmB,GAAmB,SAAQ,uBACzCrT,QAASA,IAAM+W,EAAa,GAAGnqB,SAChC,gBAKLF,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CACFqS,GAAG,KACHpiB,MAAO,CACLC,SAAU,OACVwC,YAAa,OACb/B,UAAW,QACX8iB,SAAU,OACVhkB,UAEFF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAE4N,GAAY,YAAkB,OAAJhO,SAAI,IAAJA,QAAI,EAAJA,GAAMmkB,uBAG/DjkB,EAAAA,EAAAA,KAACuQ,EAAAA,EAAI,CAACtQ,UAAU,iBAAgBC,UAC9BF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAQ,CAAAtQ,SACN4N,IACC9N,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gBAEHC,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAAAvQ,SAAA,EACFC,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACC,GAAG,IAAGpQ,SAAA,EACTF,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CAAC2Q,GAAG,KAAIlhB,UACVF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAASC,SAAM,OAAJJ,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,iBAEhC6I,GACC1M,EAAAA,EAAAA,MAACsQ,EAAAA,EAAG,CAACH,GAAG,KAAIpQ,SAAA,EACVF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAACyS,GAAG,UAAU1B,GAAG,IAAGlhB,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAC+S,IAAY,CACXC,KAAK,kBACL/S,UAAU,aACVS,MAAO,CAAEC,SAAU,WAErBR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QACEC,UAAU,aACVS,MAAO,CAAEC,SAAU,OAAQkB,aAAc,QAAS3B,SACnD,aAGDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,UACnB,OAAJJ,SAAI,IAAJA,IAAmB,QAAf8O,EAAJ9O,GAAMsP,qBAAa,IAAAR,OAAf,EAAJA,EAAqBia,eAAgB,eAK9C7oB,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAACyS,GAAG,UAAU1B,GAAG,IAAGlhB,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAC+S,IAAY,CACXC,KAAK,YACL/S,UAAU,aACVS,MAAO,CAAEC,SAAU,WAErBR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QACEC,UAAU,aACVS,MAAO,CAAEC,SAAU,OAAQkB,aAAc,QAAS3B,SACnD,YAGDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SACS,QAA5B,OAAJJ,SAAI,IAAJA,IAAmB,QAAfmL,EAAJnL,GAAMsP,qBAAa,IAAAnE,OAAf,EAAJA,EAAqB7G,QAClB,mBACgC,QAA5B,OAAJtE,SAAI,IAAJA,IAAmB,QAAfoL,EAAJpL,GAAMsP,qBAAa,IAAAlE,OAAf,EAAJA,EAAqB9G,QACrB,eACA,eAKZpE,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAACyS,GAAG,UAAU1B,GAAG,IAAGlhB,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAC+S,IAAY,CACXC,KAAK,sBACL/S,UAAU,aACVS,MAAO,CAAEC,SAAU,WAErBR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QACEC,UAAU,aACVS,MAAO,CAAEC,SAAU,OAAQkB,aAAc,QAAS3B,SACnD,WAGDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAM,OAAJJ,SAAI,IAAJA,IAAmB,QAAfqL,EAAJrL,GAAMsP,qBAAa,IAAAjE,OAAf,EAAJA,EAAqBhH,oBAMzDnE,EAAAA,EAAAA,KAACyQ,EAAAA,EAAG,CAACH,GAAG,KAAIpQ,UACVC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,WAAWtS,MAAO,CAAEC,SAAU,WACjDX,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAC,0BAKnCC,EAAAA,EAAAA,MAACkQ,EAAAA,EAAG,CAACC,GAAG,IAAIrQ,UAAU,gDAA+CC,SAAA,EACnEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,MAAA,OACEF,UAAU,qCACVS,MAAO,CAAEwC,WAAY,QAAShD,SAAA,EAE9BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAM,OAAJJ,SAAI,IAAJA,QAAI,EAAJA,GAAMyR,WAAWtM,cAC7CjF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAAUS,MAAO,CAAEC,SAAU,QAAST,SAC/C,OAAJJ,SAAI,IAAJA,QAAI,EAAJA,GAAMyR,WAAWM,wBAWtB7R,EAAAA,EAAAA,KAAA,OAAKoR,IAAKC,EAAOpR,UAAU,iBAAiBqR,IAAI,SAAS5P,MAAM,KAAKC,OAAO,QACtE,OAAJ4J,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,KAAK9M,eAAmB,OAAJnF,SAAI,IAAJA,QAAI,EAAJA,GAAM+rB,aAC/B1rB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,UACEmT,KAAK,SACLlT,UAAU,aACVqT,QAASA,IAAMuX,GAAc,GAAM3qB,UAEnCF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,gBAEpB4X,IACCzqB,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBqT,QAASA,IAAMuX,GAAc,MAC7D1qB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAACgS,EAAAA,GAAI,CAACgB,KAAK,SAASlT,UAAU,aAAaqT,QA3PhDwY,KACnB/f,GAAS,GACT8e,OAAcne,EAAU,EAyPiExM,SAAA,EAC/DF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,WAAW,aAGhC7S,EAAAA,EAAAA,MAAA,UACEgT,KAAK,SACLlT,UAAU,qBACVqT,QA7PPyY,KACnBhB,GAAWD,GACXD,GAAc,EAAM,EA2P4B3qB,SAAA,EAEtBF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,WAAW,qBAQxC,OAGJhT,EAAAA,EAAAA,KAACgsB,GAAgB,CAAOlgB,QAAOC,WAAU8B,OAvVxCA,KACb9B,GAAUD,EAAM,EAsV6ChM,QAAMkO,cACvD7N,EAAAA,EAAAA,MAACoT,EAAAA,EAAK,CAACC,OAAQsX,EAAQjd,OAAQqd,GAAQplB,KAAK,MAAO6N,UAAQ,EAAAzT,SAAA,EACzDF,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CAAC/F,OAAQqd,GAAQplB,KAAK,MAAM5F,SAAC,kBACzCF,EAAAA,EAAAA,KAACqU,EAAAA,EAAS,CAAAnU,UACRC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,MAAAE,SAAS,OAAJJ,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,eAAkB,sDAIjC7D,EAAAA,EAAAA,MAACgV,EAAAA,EAAW,CAAAjV,SAAA,EACVF,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACnT,MAAM,SAAS0T,KAAK,KAAKH,QA/Q7B/D,UACpB0b,GAAc,SACRtd,EACHse,OAAO,eAAD5rB,OAAgBoL,IACtB4C,MAAK,MACJ+F,EAAAA,EAAAA,GAAM,UAAW,6BACjBuB,GAAS,YAAY,IAEtBhG,OAAM,MACLyE,EAAAA,EAAAA,GAAM,QAAS,wBAAwB,IAE3C2W,GAAWD,GACXG,GAAc,EAAM,EAmQqD7X,SAAU4X,EAAW9qB,SAC3E8qB,EAAa,aAAe,SAE/BhrB,EAAAA,EAAAA,KAACkT,EAAAA,EAAM,CAACnT,MAAM,YAAY0T,KAAK,KAAKJ,SAAO,EAACC,QAAS4X,GAAQplB,KAAK,MAAM5F,SAAC,4BAUvFF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAG,CAACC,GAAG,KAAIpQ,UACVF,EAAAA,EAAAA,KAACksB,GAAAA,EAAK,CAACnsB,MAAM,UAAUE,UAAU,YAAYS,MAAO,CAAEC,SAAU,QAAST,UACvEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BACNF,EAAAA,EAAAA,KAACmS,EAAAA,GAAI,CACHC,GAAG,qFACHrM,OAAO,QACPrF,MAAO,CAAE4R,eAAgB,QAASpS,SACnC,0BAIHF,EAAAA,EAAAA,KAAC+S,IAAY,CAACC,KAAK,kBAIxB,ECvaDmZ,GAAgB,CACpBpd,KAAM,CAAC,OAAQ,QAGJqd,IAAcC,EAAAA,EAAAA,eAAcF,IAEnCG,GAAcA,CAACC,EAAOtR,IAEnB,aADCA,EAAO9H,KAEJ,CACLpE,KAAMkM,EAAOuR,SAIRD,EAIAE,GAAsB5sB,IAAmB,IAAlB,SAAEK,GAAUL,EAC9C,MAAO0sB,EAAOG,IAAYC,EAAAA,EAAAA,YAAWL,GAAaH,IAElD,OACEnsB,EAAAA,EAAAA,KAACosB,GAAYQ,SAAQ,CACnBjlB,MAAO,CACLoH,KAAMwd,EAAMxd,KACZ2d,YACAxsB,SAEDA,GACoB,ECU3B,GAnCsB2sB,KACpB,MAAM,KAAEthB,IAASC,EAAAA,EAAAA,MACX,MAAEwG,GAAc,OAAJzG,QAAI,IAAJA,OAAI,EAAJA,EAAMwG,MACjB4U,EAAW0D,IAAgBxe,EAAAA,EAAAA,UAAS,IACpCye,EAAa5K,IAAkB7T,EAAAA,EAAAA,UAAS,IACxC0e,EAAiB5E,IAAsB9Z,EAAAA,EAAAA,UAAS,GAoBvD,OAjBA0C,EAAAA,EAAAA,YAAU,KACJyD,EAAME,SAAS,aACjBmY,EAAa,EACf,GACC,CAACrY,KAcFhS,EAAAA,EAAAA,KAACysB,GAAmB,CAAAvsB,UAClBC,EAAAA,EAAAA,MAAAiQ,EAAAA,SAAA,CAAAlQ,SAAA,EACEF,EAAAA,EAAAA,KAAC8sB,GAAU,CAAOnG,YAAW0D,eAAcC,cAAaC,qBACxDvqB,EAAAA,EAAAA,KAAC+sB,GAAgB,CAAOpG,YAAWjH,iBAAgBiG,qBAAoB3T,cAErD,C,gDCtC1B,MAqBA,EArBkB1R,IAChB,MAAM0sB,EAAO,IAAI1pB,KAAKhD,GAiBtB,MAAM,GAAND,OAAU2sB,EAAKC,UAAS,KAAA5sB,OAfV,CACZ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGgC2sB,EAAKE,YAAW,KAAA7sB,OAAI2sB,EAAKG,cAAa,C,gDClB1E,MAOA,EAPmBlW,IACjB,MAAM7T,EAAQ,IAAIE,KAGlB,QAFY,IAAIA,KAAK2T,GACC7T,GAAK,OACb0P,UAAY,CAAC,C,gDCJ7B,MAOA,EAPgBsa,GACP,IAAIC,KAAKC,aAAa,QAAS,CACpC5sB,MAAO,WACP6sB,SAAU,QACTC,OAAOJ,E,sICJR1nB,EAAY,CAAC,YAAa,YAAa,MAAO,OAAQ,QAC1D,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIvB,EAAI,EAAGA,EAAIwB,UAAUC,OAAQzB,IAAK,CAAE,IAAI0B,EAASF,UAAUxB,GAAI,IAAK,IAAI2B,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,GAAU,CAAE,OAAOJ,CAAQ,EAAUJ,EAASY,MAAMC,KAAMR,UAAY,CAClV,SAAS8B,EAAyB5B,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAK3B,EAAnEuB,EACzF,SAAuCG,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAK3B,EAA5DuB,EAAS,CAAC,EAAOiC,EAAapC,OAAOgB,KAAKV,GAAqB,IAAK1B,EAAI,EAAGA,EAAIwD,EAAW/B,OAAQzB,IAAO2B,EAAM6B,EAAWxD,GAAQuD,EAASE,QAAQ9B,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,CAAQ,CADhNmC,CAA8BhC,EAAQ6B,GAAuB,GAAInC,OAAOiB,sBAAuB,CAAE,IAAIsB,EAAmBvC,OAAOiB,sBAAsBX,GAAS,IAAK1B,EAAI,EAAGA,EAAI2D,EAAiBlC,OAAQzB,IAAO2B,EAAMgC,EAAiB3D,GAAQuD,EAASE,QAAQ9B,IAAQ,GAAkBP,OAAOQ,UAAUgC,qBAAqB9B,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,GAAQ,CAAE,OAAOJ,CAAQ,CAQ3e,IAAIsC,EAAY,CAEdpI,UAAWsI,IAAAA,OAEXM,UAAWN,IAAAA,OAEXkL,KAAMlL,IAAAA,OAENW,IAAKC,EAAAA,GACLgK,KAAM5K,IAAAA,QAER,SAAS+gB,EAAWjgB,GAClB,IAAIpJ,EAAYoJ,EAAMpJ,UACpB4I,EAAYQ,EAAMR,UAClBY,EAAaJ,EAAMH,IACnBQ,OAAqB,IAAfD,EAAwB,MAAQA,EAEtCgK,GADOpK,EAAM8J,KACN9J,EAAMoK,MACb5J,EAAa/B,EAAyBuB,EAAO3D,GAC3C+nB,GAAUxjB,EAAAA,EAAAA,IAAgBC,IAAWjK,EAAW,cAAewT,EAAO,eAAepT,OAAOoT,GAAQ,MAAO5K,GAC/G,MAAmB,aAAfQ,EAAM8J,KACY9I,EAAAA,cAAoBqjB,EAAAA,EAAU/nB,EAAS,CAAC,EAAGkE,EAAY,CACzE5J,UAAWwtB,KAGKpjB,EAAAA,cAAoBsjB,EAAAA,EAAkBf,SAAU,CAClEjlB,MAAO,CACLimB,kBAAkB,IAENvjB,EAAAA,cAAoBX,EAAK/D,EAAS,CAAC,EAAGkE,EAAY,CAChE5J,UAAWwtB,KAEf,CACAnE,EAAWjhB,UAAYA,EACvB,S,iHC5CI3C,EAAY,CAAC,YAAa,YAAa,OAC3C,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIvB,EAAI,EAAGA,EAAIwB,UAAUC,OAAQzB,IAAK,CAAE,IAAI0B,EAASF,UAAUxB,GAAI,IAAK,IAAI2B,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,GAAU,CAAE,OAAOJ,CAAQ,EAAUJ,EAASY,MAAMC,KAAMR,UAAY,CAClV,SAAS8B,EAAyB5B,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAK3B,EAAnEuB,EACzF,SAAuCG,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAK3B,EAA5DuB,EAAS,CAAC,EAAOiC,EAAapC,OAAOgB,KAAKV,GAAqB,IAAK1B,EAAI,EAAGA,EAAIwD,EAAW/B,OAAQzB,IAAO2B,EAAM6B,EAAWxD,GAAQuD,EAASE,QAAQ9B,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,CAAQ,CADhNmC,CAA8BhC,EAAQ6B,GAAuB,GAAInC,OAAOiB,sBAAuB,CAAE,IAAIsB,EAAmBvC,OAAOiB,sBAAsBX,GAAS,IAAK1B,EAAI,EAAGA,EAAI2D,EAAiBlC,OAAQzB,IAAO2B,EAAMgC,EAAiB3D,GAAQuD,EAASE,QAAQ9B,IAAQ,GAAkBP,OAAOQ,UAAUgC,qBAAqB9B,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,GAAQ,CAAE,OAAOJ,CAAQ,CAM3e,IAAIsC,EAAY,CAEdpI,UAAWsI,IAAAA,OAEXM,UAAWN,IAAAA,OAEXW,IAAKC,EAAAA,IAEP,SAASogB,EAAelgB,GACtB,IAAIpJ,EAAYoJ,EAAMpJ,UACpB4I,EAAYQ,EAAMR,UAClBY,EAAaJ,EAAMH,IACnBQ,OAAqB,IAAfD,EAAwB,OAASA,EACvCI,EAAa/B,EAAyBuB,EAAO3D,GAC3C+nB,GAAUxjB,EAAAA,EAAAA,IAAgBC,IAAWjK,EAAW,oBAAqB4I,GACzE,OAAoBwB,EAAAA,cAAoBX,EAAK/D,EAAS,CAAC,EAAGkE,EAAY,CACpE5J,UAAWwtB,IAEf,CACAlE,EAAelhB,UAAYA,EAC3B,S,iHC5BI3C,EAAY,CAAC,YAAa,YAAa,OAC3C,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIvB,EAAI,EAAGA,EAAIwB,UAAUC,OAAQzB,IAAK,CAAE,IAAI0B,EAASF,UAAUxB,GAAI,IAAK,IAAI2B,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,GAAU,CAAE,OAAOJ,CAAQ,EAAUJ,EAASY,MAAMC,KAAMR,UAAY,CAClV,SAAS8B,EAAyB5B,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAK3B,EAAnEuB,EACzF,SAAuCG,EAAQ6B,GAAY,GAAc,MAAV7B,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAK3B,EAA5DuB,EAAS,CAAC,EAAOiC,EAAapC,OAAOgB,KAAKV,GAAqB,IAAK1B,EAAI,EAAGA,EAAIwD,EAAW/B,OAAQzB,IAAO2B,EAAM6B,EAAWxD,GAAQuD,EAASE,QAAQ9B,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,CAAQ,CADhNmC,CAA8BhC,EAAQ6B,GAAuB,GAAInC,OAAOiB,sBAAuB,CAAE,IAAIsB,EAAmBvC,OAAOiB,sBAAsBX,GAAS,IAAK1B,EAAI,EAAGA,EAAI2D,EAAiBlC,OAAQzB,IAAO2B,EAAMgC,EAAiB3D,GAAQuD,EAASE,QAAQ9B,IAAQ,GAAkBP,OAAOQ,UAAUgC,qBAAqB9B,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,GAAQ,CAAE,OAAOJ,CAAQ,CAM3e,IAAIsC,EAAY,CAEdpI,UAAWsI,IAAAA,OAEXM,UAAWN,IAAAA,OAEXW,IAAKC,EAAAA,IAEP,SAASgM,EAAY9L,GACnB,IAAIpJ,EAAYoJ,EAAMpJ,UACpB4I,EAAYQ,EAAMR,UAClBY,EAAaJ,EAAMH,IACnBQ,OAAqB,IAAfD,EAAwB,MAAQA,EACtCI,EAAa/B,EAAyBuB,EAAO3D,GAC3C+nB,GAAUxjB,EAAAA,EAAAA,IAAgBC,IAAWjK,EAAW,gBAAiB4I,GACrE,OAAoBwB,EAAAA,cAAoBX,EAAK/D,EAAS,CAAC,EAAGkE,EAAY,CACpE5J,UAAWwtB,IAEf,CACAtY,EAAY9M,UAAYA,EACxB,S","sources":["components/atoms/circularPercentage/CircularPercentage.js","pages/projects/PDFFile.js","../node_modules/reactstrap/esm/Progress.js","pages/projects/OverviewTab.js","pages/projects/TaskForm.js","pages/projects/TaskFormAddSub.js","pages/projects/BoardTask.js","pages/projects/BoardToDo.js","pages/projects/BoardInProgress.js","pages/projects/BoardDone.js","pages/projects/BoardTab.js","components/roundedTable/RoundedTable.js","pages/projects/MemberTab.js","pages/projects/FileTab.js","pages/projects/ReviewTab.js","pages/projects/HandoverTab.js","utils/countTaskProgress.js","pages/projects/ActivityTab.js","pages/projects/ReviewBastTab.js","pages/projects/ProjectDetailTab.js","pages/projects/EditProjectModal.js","pages/projects/ProjectNav.js","context/TaskContext.js","pages/projects/ProjectDetail.js","utils/IndoDate.js","utils/isExpired.js","utils/rupiah.js","../node_modules/reactstrap/esm/InputGroup.js","../node_modules/reactstrap/esm/InputGroupText.js","../node_modules/reactstrap/esm/ModalFooter.js"],"sourcesContent":["import React from 'react';\r\nimport './CircularPercentage.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CircularPercentage = ({ data, color }) => {\r\n  return (\r\n    <div className=\"flex-wrapper\">\r\n      <div className=\"single-chart\">\r\n        <svg\r\n          viewBox=\"0 0 36 36\"\r\n          className={`circular-chart ${data === 100 ? 'green' : data !== 100 ? 'blue' : color}`}\r\n        >\r\n          <path\r\n            className=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            className=\"circle\"\r\n            strokeDasharray={`${data}, 100`}\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          {data === 100 ? (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\" style={{ fontSize: '14px' }}>\r\n              ✔\r\n            </text>\r\n          ) : (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\">\r\n              {data}%\r\n            </text>\r\n          )}\r\n        </svg>\r\n      </div>\r\n\r\n      {/* <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart green\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"60, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            60%\r\n          </text>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart blue\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"90, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            90%\r\n          </text>\r\n        </svg>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nCircularPercentage.propTypes = {\r\n  data: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default CircularPercentage;\r\n","import React, { Fragment } from 'react';\r\nimport { Page, Text, Document, StyleSheet, View } from '@react-pdf/renderer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 4,\r\n    marginHorizontal: 15,\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  header: {\r\n    fontSize: 10,\r\n    marginBottom: 5,\r\n    textAlign: 'left',\r\n    color: '#3f3f3f',\r\n    fontWeight: 'bold',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 10,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  printAt: {\r\n    position: 'absolute',\r\n    fontSize: 8,\r\n    bottom: 30,\r\n    left: 35,\r\n    right: 0,\r\n    textAlign: 'left',\r\n    color: 'grey',\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderRightWidth: 0,\r\n    borderBottomWidth: 0,\r\n    color: '#3f3f3f',\r\n  },\r\n  tableRow: {\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n  tableCol: {\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCell: {\r\n    // margin: 'auto',\r\n    marginTop: 3,\r\n    marginBottom: 3,\r\n    marginLeft: 3,\r\n    marginRight: 3,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nconst today = () => {\r\n  const currentDate = new Date();\r\n  return `${currentDate.toDateString()}, ${currentDate.toLocaleString().split(',')[1]}`;\r\n};\r\n\r\nconst PDFFile = ({ projectTitle, data }) => {\r\n  const pageColor = '#fff';\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={{ ...styles.body, backgroundColor: pageColor }}>\r\n        <Text style={styles.header} fixed>\r\n          Project : {projectTitle?.project_name}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Partner : {projectTitle?.partner}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Division : {projectTitle?.division}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Phase : {projectTitle?.phase}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Schema : {projectTitle?.schema === 'jo' ? 'Join Operational' : 'Join Venture'}\r\n        </Text>\r\n        <View style={styles.table}>\r\n          <View style={styles.tableRow}>\r\n            <View style={{ ...styles.tableCol, width: '5%' }}>\r\n              <Text style={styles.tableCell}>No.</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '35%' }}>\r\n              <Text style={styles.tableCell}>Task Title</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Status</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Deadline</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '30%' }}>\r\n              <Text style={styles.tableCell}>PIC</Text>\r\n            </View>\r\n          </View>\r\n          {data?.map((item, i) => (\r\n            <Fragment key={item.task_id}>\r\n              <View style={styles.tableRow}>\r\n                <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                  <Text style={{ ...styles.tableCell, textAlign: 'center' }}>{i + 1}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                  <Text style={styles.tableCell}>{item.task_title}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={{ ...styles.tableCell, fontSize: '10px' }}>\r\n                    {item.status === 0\r\n                      ? 'To do'\r\n                      : item.status === 1\r\n                      ? 'In progress'\r\n                      : item.status === 2\r\n                      ? 'Under review'\r\n                      : item.status === 3\r\n                      ? 'Approved'\r\n                      : 'Revision'}\r\n                  </Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={styles.tableCell}>{item.end_date}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                  {item.pics?.map((p) => (\r\n                    <Text style={styles.tableCell} key={p.id}>\r\n                      {p.first_name}\r\n                    </Text>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n              {item.level_2?.map((st) => (\r\n                <View style={styles.tableRow} key={st.task_id}>\r\n                  <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                    <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                    <Text style={styles.tableCell}>{st.task_title}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>-</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>{st.end_date}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                    {st.pics?.map((p) => (\r\n                      <Text style={styles.tableCell} key={p.id}>\r\n                        {p.first_name}\r\n                      </Text>\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              ))}\r\n            </Fragment>\r\n          ))}\r\n        </View>\r\n        <Text\r\n          style={styles.pageNumber}\r\n          render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\r\n        />\r\n        <Text style={styles.printAt} render={today} />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nPDFFile.propTypes = {\r\n  projectTitle: PropTypes.object,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default PDFFile;\r\n","var _excluded = [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\nvar propTypes = {\n  /** Enable animation to bar */\n  animated: PropTypes.bool,\n  bar: PropTypes.bool,\n  barAriaLabelledBy: PropTypes.string,\n  barAriaValueText: PropTypes.string,\n  barClassName: PropTypes.string,\n  barStyle: PropTypes.object,\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Add custom color to the placeholder */\n  color: PropTypes.string,\n  /** Maximum value of progress */\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Minimum value of progress, defaults to zero */\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  multi: PropTypes.bool,\n  /** Add stripes to progress bar */\n  striped: PropTypes.bool,\n  style: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Current value of progress */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nfunction Progress(props) {\n  var children = props.children,\n    className = props.className,\n    barClassName = props.barClassName,\n    cssModule = props.cssModule,\n    _props$value = props.value,\n    value = _props$value === void 0 ? 0 : _props$value,\n    _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    animated = props.animated,\n    striped = props.striped,\n    color = props.color,\n    bar = props.bar,\n    multi = props.multi,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    _props$style = props.style,\n    style = _props$style === void 0 ? {} : _props$style,\n    _props$barStyle = props.barStyle,\n    barStyle = _props$barStyle === void 0 ? {} : _props$barStyle,\n    barAriaValueText = props.barAriaValueText,\n    barAriaLabelledBy = props.barAriaLabelledBy,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\".concat(color) : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread(_objectSpread(_objectSpread({}, bar ? style : {}), barStyle), {}, {\n      width: \"\".concat(percent, \"%\")\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n  if (bar) {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React.createElement(\"div\", progressBarProps));\n}\nProgress.propTypes = propTypes;\nexport default Progress;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Progress,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport rupiah from '../../utils/rupiah';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst remaininDays = (endDate) => {\r\n  const todayDate = new Date();\r\n\r\n  const todayToLocalString = todayDate.toLocaleString();\r\n\r\n  const todayBad = todayToLocalString.split(',')[0];\r\n\r\n  const day = todayBad.split('/')[1];\r\n  const month = todayBad.split('/')[0];\r\n  const year = todayBad.split('/')[2];\r\n\r\n  const todayMerge = `${year}-${month}-${day}`;\r\n\r\n  const today = new Date(todayMerge);\r\n\r\n  const deadline = new Date(endDate);\r\n\r\n  const diff = deadline.getTime() - today.getTime();\r\n\r\n  const result = diff / (1000 * 3600 * 24);\r\n\r\n  return result;\r\n};\r\n\r\nconst OverviewTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [history, setHistory] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const [newPic, setNewPic] = useState();\r\n  const [listEmployee, setListEmploye] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [bst, setBst] = useState([]);\r\n  const [activePhase, setActivePhase] = useState(undefined);\r\n  const [selectedSchema, setSelectedSchema] = useState('');\r\n  const [isBusiness, setIsBusiness] = useState();\r\n  const [partnerOptions, setPartnerOptions] = useState([]);\r\n  const [selectedPartner, setSelectedPartner] = useState(undefined);\r\n  const [progress, setProgress] = useState(0);\r\n  const [taskByStatus, setTaskByStatus] = useState({\r\n    todo: 0,\r\n    inprogress: 0,\r\n    underReview: 0,\r\n    done: 0,\r\n  });\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['overview'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 0 || parseInt(task.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 1;\r\n    });\r\n\r\n    const doneFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2 || parseInt(task.status, 10) === 3;\r\n    });\r\n\r\n    const underReviewFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2;\r\n    });\r\n\r\n    setTaskByStatus({\r\n      todo: todofFiltered?.length,\r\n      inprogress: inProgressfFiltered?.length,\r\n      underReview: underReviewFiltered?.length,\r\n      done: doneFiltered?.length,\r\n    });\r\n\r\n    setActivePhase(data?.current_stage?.phase_id);\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n\r\n    async function fetchProgress() {\r\n      await api\r\n        .post('api/project/progress/collection', { ids: [projectId] })\r\n        .then((res) => {\r\n          setProgress(res.data.data[0]?.progress);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchProgress();\r\n  }, [data]);\r\n\r\n  const fetsHistory = async () => {\r\n    await api\r\n      .get(`api/project/${projectId}/history`)\r\n      .then((res) => setHistory(res.data.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetsHistory();\r\n  }, [projectId]);\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list`)\r\n        .then((res) => setListEmploye(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(\r\n        `api/project/handover`,\r\n        {\r\n          project_id: projectId,\r\n          new_pic: newPic.value,\r\n          file: bst,\r\n          // jika fase projek adalah planning\r\n          schema: activePhase === 2 ? selectedSchema : '',\r\n          partner: activePhase === 2 ? selectedPartner : '',\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        },\r\n      )\r\n      .then(() => {\r\n        fetsHistory();\r\n        alert('success', 'BAST is under review');\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n    setModal(false);\r\n  };\r\n\r\n  const allTaskPermission = ['Manager', 'Director'];\r\n\r\n  useEffect(() => {\r\n    async function fetchPartnerOptions() {\r\n      await api\r\n        .get(`api/project/partner/options`)\r\n        .then((res) => setPartnerOptions(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    fetchPartnerOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Col lg=\"12\">\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : error ? (\r\n        'Soemthing went wrong.'\r\n      ) : (\r\n        <Row>\r\n          <Col lg=\"8\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Description\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"ms-auto mt-3 mt-md-0\">\r\n                  {isBusiness ? data.current_stage?.desc : data?.goals}\r\n                </div>\r\n                <div className=\"d-flex justify-content-between mt-3\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Level</small>\r\n                    <span className=\"text-dark\">{data.level_desc}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column col-4\">\r\n                    <small className=\"text-muted\">Base</small>\r\n                    <div className=\"d-flex\">\r\n                      <span className=\"wtext-dark\">\r\n                        {data?.base_description.trim().length > 25\r\n                          ? `${data?.base_description.substring(0, 25)}...`\r\n                          : data?.base_description}\r\n                      </span>\r\n                      <abbr title={data?.base_description}>\r\n                        <i\r\n                          className=\"me-2 bi-info-circle-fill\"\r\n                          style={{ fontSize: '14px', marginLeft: '4px' }}\r\n                        ></i>\r\n                      </abbr>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Start date</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage && data.current_stage?.start_date)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Deadline</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage !== null && data.current_stage?.end_date)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between bg-light align-items-end p-2 mt-3\"\r\n                  style={{ borderRadius: '8px' }}\r\n                >\r\n                  <div className=\"d-flex gap-3 align-items-center\">\r\n                    <img\r\n                      src={user1}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"avatar\"\r\n                      width=\"45\"\r\n                      height=\"45\"\r\n                    />\r\n                    <div className=\"d-flex flex-column\">\r\n                      <small className=\"text-muted\">PIC</small>\r\n                      <span className=\"text-dark fw-bold\">{data.pic_active.first_name}</span>\r\n                      {/* <small className=\"text-muted\">Divisi Teknologi & Informasi</small> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-3\">\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Cost <span className=\"fw-bold\">{rupiah(data.estimated_cost)}</span>\r\n                    </span>\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Income <span className=\"fw-bold\">{rupiah(data.estimated_income)}</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Project Histories\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  {!history\r\n                    ? 'Loading...'\r\n                    : history?.map((h) => (\r\n                        <div\r\n                          key={h.history_id}\r\n                          className=\"col-md-12 d-flex justify-content-between align-items-center py-2 px-3\"\r\n                          style={{ backgroundColor: '#F3F2F2', borderRadius: '8px' }}\r\n                        >\r\n                          <div className=\"col-md-4 d-flex flex-column\">\r\n                            <span className=\"text-dark\">{h.organization_name}</span>\r\n                            <small>{h.history_desc}</small>\r\n                            {auth?.user?.roles.find((role) => allTaskPermission.includes(role)) && (\r\n                              <Link\r\n                                to={`/projects/details/${projectId}?div=${h.organization_id}&to=activities`}\r\n                                style={{ textDecoration: 'none' }}\r\n                              >\r\n                                See all task\r\n                              </Link>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-2\">\r\n                            <span\r\n                              className={`badge bg-light-${\r\n                                h.status === 'handover' && h.active === 0\r\n                                  ? 'danger text-danger'\r\n                                  : h.status === 'handover'\r\n                                  ? 'success text-success'\r\n                                  : h.status === 'review'\r\n                                  ? 'danger text-danger'\r\n                                  : 'primary text-primary'\r\n                              } rounded-pill d-inline-block fw-bold`}\r\n                            >\r\n                              {h.status === 'handover' && h.active === 0\r\n                                ? 'waiting for approval'\r\n                                : (h.status === 'handover' && h.active === 1) || h.active === 1\r\n                                ? 'active'\r\n                                : h.status}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-3 d-flex flex-column\">\r\n                            <small>{newDate(h.created_at)}</small>\r\n                          </div>\r\n                          <div className=\"col-md-1 d-flex justify-content-end\">\r\n                            <img\r\n                              id={`tooltip-${h.history_id}`}\r\n                              src={h.img || user1}\r\n                              className=\"rounded-circle\"\r\n                              alt=\"avatar\"\r\n                              width=\"35\"\r\n                              height=\"35\"\r\n                            />\r\n                            <TooltipHover title={h.first_name} id={h.history_id.toString()} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"4\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\" className=\"d-flex justify-content-between fw-bold\">\r\n                  Project Active\r\n                  <span className=\"text-success fw-bold\">{progress.toFixed()}%</span>\r\n                </CardTitle>\r\n                <Progress\r\n                  className=\"\"\r\n                  color=\"success\"\r\n                  value={progress.toFixed()}\r\n                  style={{ height: '15px' }}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Remaining days</h6>\r\n                      <span className=\"text-danger\">\r\n                        {remaininDays(\r\n                          data?.current_stage !== null && data.current_stage?.end_date,\r\n                        ).toFixed()}\r\n                      </span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"timer\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Todo</h6>\r\n                      <span>{taskByStatus?.todo}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"schedule\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task In Progress</h6>\r\n                      <span>{taskByStatus?.inprogress}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"play_circle_outline\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Done</h6>\r\n                      <span>{taskByStatus?.done}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"task_alt\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            {isBusiness &&\r\n              auth.user.roles.includes('Manager') &&\r\n              auth.user.employe_id === data?.pic_active?.employe_id && (\r\n                <Card>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"info\"\r\n                    disabled={\r\n                      progress !== 100 ||\r\n                      taskByStatus?.underReview !== 0 ||\r\n                      taskByStatus?.todo !== 0 ||\r\n                      taskByStatus?.inprogress !== 0\r\n                    }\r\n                    outline\r\n                    onClick={toggle.bind(null)}\r\n                  >\r\n                    Handover Project\r\n                  </Button>\r\n                </Card>\r\n              )}\r\n            {/* <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h4\">Recent Tasks</CardTitle>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Jaka joined the project</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Doni comment on your task </span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Lexa uploaded the file</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Charlie assign a new task to you</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardBody>\r\n        </Card> */}\r\n          </Col>\r\n          <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n            <ModalHeader toggle={toggle.bind(null)}>Handover Project</ModalHeader>\r\n            <form onSubmit={handleSubmit}>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <Label>Option</Label>\r\n                  <Input type=\"select\" id=\"base_id\" name=\"base_id\" defaultValue=\"a\">\r\n                    <option value=\"a\" disabled>\r\n                      Select\r\n                    </option>\r\n                    <option value=\"\">Hand Over</option>\r\n                    <option value=\"\">Done</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {/* current stage is Planning */}\r\n                {activePhase === 2 && (\r\n                  <>\r\n                    {data?.current_stage?.partner === null && (\r\n                      <FormGroup>\r\n                        <Label for=\"partner\">Partner</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          id=\"partner\"\r\n                          name=\"partner\"\r\n                          defaultValue=\"pa\"\r\n                          onChange={(e) => setSelectedPartner(e.target.value)}\r\n                        >\r\n                          <option disabled value=\"pa\">\r\n                            - Select -\r\n                          </option>\r\n                          {partnerOptions.length > 0 &&\r\n                            partnerOptions.map((p) => (\r\n                              <option key={p.id} value={p.id}>\r\n                                {p.name}\r\n                              </option>\r\n                            ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    )}\r\n                    <FormGroup>\r\n                      <Label>Schema</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        id=\"base_id\"\r\n                        name=\"base_id\"\r\n                        defaultValue=\"a\"\r\n                        onChange={(e) => setSelectedSchema(e.target.value)}\r\n                      >\r\n                        <option value=\"a\" disabled>\r\n                          Select\r\n                        </option>\r\n                        <option value=\"jo\">JO</option>\r\n                        <option value=\"jv\">JV</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </>\r\n                )}\r\n                {/* current stage is Planning */}\r\n                <FormGroup>\r\n                  <Label>PIC</Label>\r\n                  <Select\r\n                    components={animatedComponents}\r\n                    options={listEmployee}\r\n                    onChange={(choice) => setNewPic(choice)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"bst\">BAST</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"file\"\r\n                      name=\"file\"\r\n                      id=\"bst\"\r\n                      onChange={(e) => setBst(e.target.files)}\r\n                    />\r\n                  </FormGroup>\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"info\"\r\n                  disabled={loading}\r\n                  className=\"d-flex gap-1 align-items-center\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                      Sending\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                      Send\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </Modal>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OverviewTab;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Input, Modal, ModalBody, ModalHeader, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TaskForm.scss';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\nconst TaskForm = (props) => {\r\n  const { auth } = useAuth();\r\n  const { projectId, setNewTaskOpen, setAddSubtaskOpen, refetch, type, taskId, title, name } =\r\n    props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [task, setTask] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [listEmployee, setListEmploye] = useState();\r\n  // const [files, setFiles] = useState([]);\r\n\r\n  const animatedComponents = makeAnimated();\r\n  const navigate = useNavigate();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list?search=${name}`)\r\n        .then((res) => {\r\n          setListEmploye(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n\r\n    setAssignedEmployees([\r\n      {\r\n        value: auth.user.employe_id,\r\n        label: auth.user.first_name,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setTask((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const assigneModal = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    if (type === 1) {\r\n      setNewTaskOpen(false);\r\n    } else {\r\n      setAddSubtaskOpen(undefined);\r\n    }\r\n  };\r\n\r\n  const taskSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (assignedEmployees?.length > 0) {\r\n      task.project_id = projectId;\r\n      task.task_pic = assignedEmployees;\r\n      // eslint-disable-next-line prefer-destructuring\r\n      // task.files = files;\r\n\r\n      if (type === 2) {\r\n        task.task_parent = taskId;\r\n      }\r\n\r\n      await api\r\n        .post('api/task', task, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n        .then(() => {\r\n          if (auth?.user.roles.includes('Manager')) {\r\n            const arrayId = [];\r\n            assignedEmployees.map((em) => arrayId.push(em.value));\r\n            if (!arrayId.includes(auth?.user.employe_id)) {\r\n              navigate('?to=activities');\r\n            }\r\n          } else {\r\n            navigate('');\r\n          }\r\n          alert('create', 'New task has been created.');\r\n        })\r\n        .catch(() => alert('error', 'New task failed to save'));\r\n      refetch();\r\n      closeForm();\r\n    } else {\r\n      alert('error', 'Assignment cannot be empty');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task-form-overlay\" onClick={closeForm} />\r\n\r\n      <form onSubmit={taskSubmit} style={{ width: '100%' }} encType=\"multipart/form-data\">\r\n        <div className=\"new-task rounded-3\">\r\n          <div className=\"body\">\r\n            <div className=\"input\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"task_title\"\r\n                placeholder={`${title}...`}\r\n                required\r\n                onChange={handleChange}\r\n                rows=\"4\"\r\n                value={task?.task_title || ''}\r\n                style={{ fontSize: '13px' }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex gap-3 justify-content-between\">\r\n            <div className=\"d-flex gap-0 w-75\">\r\n              <div className=\"d-flex align-items-center w-50\">\r\n                <span className=\"datepicker-toggle\">\r\n                  <span className=\"datepicker-toggle-button\">\r\n                    <MaterialIcon icon=\"calendar_month\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"start_date\"\r\n                    className=\"datepicker-input\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  />\r\n                </span>\r\n                <div className=\"d-flex flex-column\">\r\n                  <small className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                    Start date\r\n                  </small>\r\n                  <small className=\"text-dark\" style={{ marginTop: '-7px' }}>\r\n                    {task.start_date}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center w-50\">\r\n                <span className=\"datepicker-toggle\">\r\n                  <span className=\"datepicker-toggle-button\">\r\n                    <MaterialIcon icon=\"calendar_month\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"end_date\"\r\n                    name=\"end_date\"\r\n                    className=\"datepicker-input\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  />\r\n                </span>\r\n                <div className=\"d-flex flex-column\">\r\n                  <small htmlFor=\"end_date\" className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                    Due date\r\n                  </small>\r\n                  <small className=\"text-dark\" style={{ marginTop: '-7px' }}>\r\n                    {task.end_date}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button type=\"button\" className=\"btn-assigne\" id=\"tooltip-2\" onClick={assigneModal}>\r\n                <i className=\"bi-person-plus-fill\"></i>\r\n                <span>{assignedEmployees?.length || 0}</span>\r\n              </button>\r\n              <TooltipHover title=\"Assigne\" id=\"2\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"footer mt-2\">\r\n            <div className=\"option\">\r\n              {/* <div className=\"attach\">\r\n                <Label for=\"attach\">\r\n                  <MaterialIcon icon=\"attach_file\" className=\"btn-icon\" />\r\n                </Label>\r\n                <input type=\"file\" id=\"attach\" hidden onChange={(e) => setFiles(e.target.files)} />\r\n              </div> */}\r\n            </div>\r\n            <div className=\"action\">\r\n              <Button type=\"button\" size=\"sm\" color=\"light\" disabled={loading} onClick={closeForm}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"sm\"\r\n                className=\"d-flex gap-2 align-items-center\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" />\r\n                    Loading...\r\n                  </>\r\n                ) : (\r\n                  'Save'\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Assign to</ModalHeader>\r\n        <ModalBody>\r\n          <Select\r\n            // closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            defaultValue={assignedEmployees}\r\n            options={listEmployee}\r\n            onChange={(choice) => setAssignedEmployees(choice)}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTaskForm.propTypes = {\r\n  projectId: PropTypes.string,\r\n  setNewTaskOpen: PropTypes.func,\r\n  setAddSubtaskOpen: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  type: PropTypes.number,\r\n  taskId: PropTypes.number,\r\n  title: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { Button, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport useAuth from '../../hooks/useAuth';\r\n// import useAuth from '../../hooks/useAuth';\r\n\r\nconst TaskFormAddSub = ({\r\n  itemValue,\r\n  setIsAddingItem,\r\n  setShowAddSub,\r\n  selectedActivityId,\r\n  setSelectedActivityId,\r\n  setItemValue,\r\n  refetch,\r\n}) => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [assignedEmployees, setAssignedEmployees] = useState({});\r\n  const [listEmployee, setListEmploye] = useState();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list?search=subordinate`)\r\n        .then((res) => {\r\n          setListEmploye(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n\r\n    setAssignedEmployees({\r\n      value: auth?.user.employe_id,\r\n      label: auth?.user.first_name,\r\n    });\r\n  }, []);\r\n\r\n  const handleAddItem = async () => {\r\n    if (itemValue === '') {\r\n      alert('error', 'Field cannot be empty');\r\n    } else if (Object.keys(assignedEmployees)?.length === 0) {\r\n      alert('error', 'Please select an employee');\r\n    } else {\r\n      setIsAddingItem(true);\r\n\r\n      const dataSub = {\r\n        sub: [\r\n          {\r\n            sub: itemValue,\r\n            status: 'created',\r\n            employe_id: assignedEmployees?.value,\r\n          },\r\n        ],\r\n      };\r\n\r\n      await api\r\n        .patch(`api/task/${selectedActivityId}/activity/add-sub`, dataSub)\r\n        .then(() => {\r\n          refetch();\r\n        })\r\n        .catch(() => alert('error', 'Action failed'));\r\n      setSelectedActivityId();\r\n      setShowAddSub(false);\r\n      setIsAddingItem(false);\r\n      setItemValue({});\r\n      setAssignedEmployees({});\r\n    }\r\n  };\r\n\r\n  //   const handleChange = (e) => {\r\n  //     setItemValue(e);\r\n  //     // if (e.key === 'Enter') {\r\n  //     //   e.preventDefault();\r\n  //     //   handleAddItem(e);\r\n  //     // }\r\n  //   };\r\n\r\n  const assigneModal = (val) => {\r\n    setModal(val);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrap\">\r\n      <div className=\"form-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Sub Activity...\"\r\n          //   onKeyDown={(e) => handleChange(e)}\r\n          onChange={(e) => setItemValue(e.target.value)}\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus\r\n        ></input>\r\n      </div>\r\n      <div className=\"form-assigne\">\r\n        <div className=\"assigne\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-assigne\"\r\n            id=\"tooltip-2\"\r\n            onClick={() => assigneModal(true)}\r\n          >\r\n            <i\r\n              className={`${\r\n                auth?.user?.roles.includes('Staff') ? 'bi-person-fill' : 'bi-person-plus-fill'\r\n              }`}\r\n            ></i>\r\n          </button>\r\n          <span>{assignedEmployees.label}</span>\r\n        </div>\r\n        <div className=\"action\">\r\n          <Button\r\n            className=\"btn-cancel\"\r\n            type=\"button\"\r\n            size=\"sm\"\r\n            color=\"light\"\r\n            onClick={() => {\r\n              setShowAddSub(false);\r\n              setSelectedActivityId(undefined);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            // className=\"btn-save\"\r\n            onClick={() => handleAddItem()}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n        <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n          <ModalHeader toggle={toggle.bind(null)}>Assign to</ModalHeader>\r\n          <ModalBody>\r\n            <Select\r\n              // closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={assignedEmployees}\r\n              options={listEmployee}\r\n              onChange={(choice) => {\r\n                setAssignedEmployees(choice);\r\n                assigneModal(false);\r\n              }}\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskFormAddSub.propTypes = {\r\n  itemValue: PropTypes.string,\r\n  setIsAddingItem: PropTypes.func,\r\n  setShowAddSub: PropTypes.func,\r\n  selectedActivityId: PropTypes.number,\r\n  setSelectedActivityId: PropTypes.func,\r\n  setItemValue: PropTypes.func,\r\n  refetch: PropTypes.func,\r\n};\r\n\r\nexport default TaskFormAddSub;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { Badge, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport TaskPopup from './TaskPopup';\r\nimport TaskForm from './TaskForm';\r\nimport ActionMenu from '../../components/actionMenu/ActionMenu';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\nimport TaskFormAddSub from './TaskFormAddSub';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\\\r\n\r\nconst addTargetAllowedRoles = ['Manager'];\r\nconst addActivityAllowedRoles = ['Supervisor', 'Manager'];\r\nconst addSubActivityAllowedRoles = ['Staff', 'Supervisor', 'Manager'];\r\n\r\nconst BoardTask = ({ directSupervisor, data, projectId, refetch, isMemberActive }) => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [addSubtaskOpen, setAddSubtaskOpen] = useState(undefined);\r\n  const [task, setTask] = useState(undefined);\r\n  const [updating, setUpdating] = useState();\r\n  const [taskIdActive, setTaskIdActive] = useState();\r\n  const [status, setStatus] = useState();\r\n  const [selectedActivityId, setSelectedActivityId] = useState(undefined);\r\n  const [showAddSub, setShowAddSub] = useState(false);\r\n  const [itemValue, setItemValue] = useState('');\r\n  const [isAddingItem, setIsAddingItem] = useState(false);\r\n  const [selectedParentId, setSelectedParentId] = useState();\r\n  const [selectedSubId, setSelectedSubId] = useState();\r\n  const [isChecking, setIsChecking] = useState(false);\r\n  const [isDeletingSub, setIsDeletingSub] = useState(false);\r\n  const [idTaskParams, setIdTaskParams] = useState(null);\r\n  const [isDuplicating, setIsDuplicating] = useState(false);\r\n  const [levelTaskClicked, setLevelTaskClicked] = useState('');\r\n  const api = useAxios();\r\n\r\n  const userRoles = auth?.user?.roles;\r\n  const userId = auth?.user?.employe_id;\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const type = 2;\r\n\r\n  const handleTaskStatus = async (taskId, taskStatus) => {\r\n    setTaskIdActive(taskId);\r\n    setStatus(taskStatus);\r\n    setUpdating(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: auth.user.employe_id,\r\n        status: taskStatus,\r\n      })\r\n      .then(() => {\r\n        alert(\r\n          taskStatus === 1 ? 'start' : taskStatus === 2 ? 'done' : 'success',\r\n          `Task status has been changed to ${\r\n            taskStatus === 0 ? 'To Do' : taskStatus === 1 ? 'In Progress' : 'Done'\r\n          }`,\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    refetch();\r\n    setUpdating(false);\r\n    setTaskIdActive();\r\n    setStatus();\r\n  };\r\n\r\n  const handleShowAddSub = (l3) => {\r\n    if (userRoles?.includes('Staff')) {\r\n      const picIds = [];\r\n\r\n      for (let index = 0; index < l3?.pics.length; index++) {\r\n        picIds.push(l3.pics[index].employe_id.toString());\r\n      }\r\n\r\n      if (picIds.includes(directSupervisor) || picIds.includes(userId)) {\r\n        setShowAddSub(true);\r\n        setSelectedActivityId(l3.task_id);\r\n      } else {\r\n        alert('error', 'You are not allowed');\r\n      }\r\n    } else {\r\n      setShowAddSub(true);\r\n      setSelectedActivityId(l3.task_id);\r\n    }\r\n  };\r\n\r\n  const handleCheck = async (checkedId, l3) => {\r\n    setIsChecking(true);\r\n    setSelectedParentId(l3.task_id);\r\n    setSelectedSubId(checkedId);\r\n    const subArr = JSON.parse(l3.sub);\r\n\r\n    const updateArr = subArr.map((item) => {\r\n      if (item.id === checkedId) {\r\n        return { ...item, status: item.status === 'created' ? 'checked' : 'created' };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    await api\r\n      .patch(`api/task/${l3.task_id}/activity/update-sub`, { sub: updateArr })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch(() => alert('error', 'Something went wrong'));\r\n\r\n    setSelectedSubId();\r\n    setIsChecking(false);\r\n  };\r\n\r\n  const handleDeleteSub = async (selectedId, l3) => {\r\n    setIsDeletingSub(true);\r\n    setSelectedParentId(l3.task_id);\r\n    setSelectedSubId(selectedId);\r\n\r\n    const subArr = JSON.parse(l3.sub);\r\n\r\n    const updateArr = subArr.filter((obj) => {\r\n      return obj.id !== selectedId;\r\n    });\r\n\r\n    await api\r\n      .patch(`api/task/${l3.task_id}/activity/update-sub`, { sub: updateArr })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch(() => alert('error', 'Something went wrong'));\r\n\r\n    setIsDeletingSub(false);\r\n  };\r\n\r\n  const duplicateFn = (tid) => {\r\n    setIsDuplicating(true);\r\n    setTimeout(() => {\r\n      setIsDuplicating(false);\r\n    }, 5000);\r\n    console.log(tid);\r\n  };\r\n\r\n  // const queryParams = new URLSearchParams(window.location.search);\r\n  // const idTaskParams = queryParams.get('task');\r\n\r\n  const menuOptions = {\r\n    options: [\r\n      {\r\n        id: 1,\r\n        icon: <MaterialIcon icon=\"edit_note\" />,\r\n        type: 'button',\r\n        label: 'To do',\r\n        to: 0,\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: <MaterialIcon icon=\"play_circle_outline\" />,\r\n        type: 'button',\r\n        label: 'In Progress',\r\n        to: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: <MaterialIcon icon=\"task_alt\" />,\r\n        type: 'button',\r\n        label: 'Done',\r\n        to: 2,\r\n      },\r\n      {\r\n        id: 4,\r\n        icon: <MaterialIcon icon=\"content_copy\" />,\r\n        type: 'link',\r\n        label: 'Duplicate',\r\n        to: 'duplicate',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const params = queryParams.get('task');\r\n\r\n  useEffect(() => {\r\n    setIdTaskParams(params);\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    if (idTaskParams !== null) {\r\n      const objDiv = document.getElementById(idTaskParams);\r\n      if (objDiv !== null) {\r\n        objDiv.scrollIntoView();\r\n      }\r\n    }\r\n  }, [idTaskParams]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        {data?.map((td, i) => (\r\n          <div key={td.task_id} className=\"board rounded-3\">\r\n            <div className=\"board-header\">\r\n              <div className=\"d-flex gap-2\" style={{ height: 'max-content' }}>\r\n                <Badge\r\n                  color=\"info\"\r\n                  className={`bg-light-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } text-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } fw-bold`}\r\n                >\r\n                  #{i + 1}\r\n                </Badge>\r\n                {parseInt(td.status, 10) === 4 && (\r\n                  <Badge color=\"danger\">\r\n                    <i className=\"bi-pencil-square mr-4\" style={{ fontSize: '12px' }}></i>\r\n                    &nbsp; Revision\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              {parseInt(td.status, 10) === 0 ||\r\n              parseInt(td.status, 10) === 1 ||\r\n              parseInt(td.status, 10) === 4 ? (\r\n                updating && taskIdActive === td.task_id ? (\r\n                  <div className=\"d-flex align-items-center gap-1\">\r\n                    <Spinner size=\"sm\" color=\"success\" />\r\n                    <span style={{ fontSize: '12px' }}>\r\n                      Updating status to{' '}\r\n                      <strong>\r\n                        {status === 0\r\n                          ? 'To do'\r\n                          : status === 1\r\n                          ? 'In Progress'\r\n                          : status === 2\r\n                          ? 'Done'\r\n                          : ''}\r\n                      </strong>\r\n                    </span>\r\n                  </div>\r\n                ) : isDuplicating ? (\r\n                  <div className=\"d-flex align-items-center gap-1\">\r\n                    <Spinner size=\"sm\" color=\"success\" />\r\n                    <span style={{ fontSize: '12px' }}>Duplicating the task..</span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"d-flex gap-2\">\r\n                    <div className=\"\">\r\n                      {parseInt(td.status, 10) === 1 && (\r\n                        <span style={{ fontSize: '12px' }}>\r\n                          Progress{'  '}\r\n                          <strong\r\n                            style={{\r\n                              fontSize: '14px',\r\n                              color: td.task_progress === 100 ? '#4cc790' : '#21C1D6',\r\n                            }}\r\n                          >\r\n                            {/* {td.task_progress.toFixed(td.task_progress !== 100 && 2)}% */}\r\n                            {td.task_progress.toFixed()}%\r\n                          </strong>\r\n                        </span>\r\n                        // <div className=\"progress-bar\">\r\n                        //   <Progress\r\n                        //     className=\"mb-0\"\r\n                        //     value={td.task_progress}\r\n                        //     color=\"success\"\r\n                        //     style={{ fontSize: '10px', height: '12px' }}\r\n                        //   />\r\n                        //   <div className={`num ${td.task_progress > 52 && 'white'}`}>\r\n                        //     {td.task_progress}%\r\n                        //   </div>\r\n                        // </div>\r\n                      )}\r\n                    </div>\r\n                    <div key={td.task_id}>\r\n                      {/* {td.pics.map(\r\n                        (pic) =>\r\n                          pic.employe_id.toString() === auth?.user.employe_id && (\r\n                            <ActionMenu\r\n                              key={pic.id}\r\n                              menuOptions={menuOptions}\r\n                              taskId={td.task_id}\r\n                              status={parseInt(td.status, 10)}\r\n                              action={handleTaskStatus}\r\n                              progress={td.task_progress}\r\n                            />\r\n                          ),\r\n                      )} */}\r\n                      {isMemberActive && (\r\n                        <ActionMenu\r\n                          menuOptions={menuOptions}\r\n                          taskId={td.task_id}\r\n                          status={parseInt(td.status, 10)}\r\n                          action={handleTaskStatus}\r\n                          progress={td.task_progress}\r\n                          {...{ duplicateFn }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              ) : parseInt(td.status, 10) === 2 ? (\r\n                <Badge color=\"light\" className=\"d-flex text-dark\">\r\n                  <i className=\"bi-clock mr-4\" style={{ fontSize: '12px' }}></i>\r\n                  &nbsp; Waiting for approval\r\n                </Badge>\r\n              ) : parseInt(td.status, 10) === 3 ? (\r\n                <Badge color=\"success\" className=\"d-flex\">\r\n                  <i className=\"bi-check2-circle mr-4\" style={{ fontSize: '13px' }}></i>\r\n                  &nbsp; Approved\r\n                </Badge>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`board-body task ${\r\n                params === td.task_id.toString() && 'bg-light-warning'\r\n              }`}\r\n            >\r\n              <div\r\n                className=\"task-title fw-bold\"\r\n                onClick={() => openPopup(td)}\r\n                id={td.task_id.toString() === idTaskParams ? idTaskParams : ''}\r\n              >\r\n                {td.task_title}\r\n              </div>\r\n              <div className=\"task-bottom\">\r\n                <div className=\"task-info\">\r\n                  {/* <small className=\"text-muted\">{td.level_2.length} Subtask</small> */}\r\n                  {userRoles.find((role) => addTargetAllowedRoles?.includes(role)) &&\r\n                    parseInt(td.status, 10) !== 2 &&\r\n                    parseInt(td.status, 10) !== 3 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"add-child\"\r\n                        onClick={() => setAddSubtaskOpen(td.task_id)}\r\n                      >\r\n                        <MaterialIcon icon=\"add_circle\" />\r\n                      </button>\r\n                    )}\r\n                </div>\r\n                <div className=\"task-action\">\r\n                  <div className=\"comment\">\r\n                    <MaterialIcon icon=\"comment\" />\r\n                    <div>{td.comments}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {addSubtaskOpen === td.task_id && (\r\n                <div className=\"p-1\">\r\n                  <TaskForm\r\n                    {...{ projectId, setAddSubtaskOpen, refetch, type }}\r\n                    title=\"Add new target..\"\r\n                    taskId={td.task_id}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            {td.level_2?.length > 0 &&\r\n              td.level_2.map((l2) => (\r\n                // <div key={l2.task_id} className=\"board-body subtask\" onClick={() => openPopup(st)}>\r\n                <div key={l2.task_id} className=\"board-container\">\r\n                  <div\r\n                    key={l2.task_id}\r\n                    className={`board-body subtask ${\r\n                      params === l2.task_id.toString() && 'bg-light-warning'\r\n                    }`}\r\n                  >\r\n                    {/* <div className=\"task-title\" onClick={() => openPopup(l2)}> */}\r\n                    <div\r\n                      className=\"task-title\"\r\n                      onClick={() => openPopup(l2)}\r\n                      id={l2.task_id.toString() === idTaskParams ? idTaskParams : ''}\r\n                    >\r\n                      {l2.task_title}\r\n                    </div>\r\n                    <div className=\"task-bottom\">\r\n                      <div className=\"task-info\">\r\n                        {/* <small className=\"text-muted\">{td.level_2.length} Subtask</small> */}\r\n                        {userRoles.find((role) => addActivityAllowedRoles?.includes(role)) &&\r\n                          parseInt(td.status, 10) !== 2 &&\r\n                          parseInt(td.status, 10) !== 3 && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"add-child\"\r\n                              onClick={() => setAddSubtaskOpen(l2.task_id)}\r\n                            >\r\n                              <MaterialIcon icon=\"add_circle\" />\r\n                            </button>\r\n                          )}\r\n                      </div>\r\n                      <div className=\"task-action\">\r\n                        <div className=\"circular-progress\">\r\n                          <CircularPercentage data={parseInt(l2.task_progress.toFixed(), 10)} />\r\n                        </div>\r\n                        <div className=\"comment\">\r\n                          <MaterialIcon icon=\"comment\" />\r\n                          <div>{l2.comments}</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {addSubtaskOpen === l2.task_id && (\r\n                      <div className=\"p-1\">\r\n                        <TaskForm\r\n                          {...{ projectId, setAddSubtaskOpen, refetch, type }}\r\n                          title=\"Add new activity..\"\r\n                          taskId={l2.task_id}\r\n                          name=\"activity\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {l2.level_3?.length > 0 &&\r\n                    l2.level_3.map((l3) => (\r\n                      <div\r\n                        key={l3.task_id}\r\n                        className={`board-body subtask-level3 ${\r\n                          params === l3.task_id.toString() && 'bg-light-warning'\r\n                        }`}\r\n                      >\r\n                        <div\r\n                          className=\"task-title\"\r\n                          onClick={() => {\r\n                            openPopup(l3);\r\n                            setLevelTaskClicked('activity');\r\n                          }}\r\n                        >\r\n                          {l3.task_title}\r\n                        </div>\r\n                        <div className=\"task-bottom\">\r\n                          <div className=\"task-info\">\r\n                            <span className=\"text-muted\">\r\n                              {l3.sub !== null ? JSON.parse(l3.sub).length : 0} Sub\r\n                            </span>\r\n                            {userRoles.find((role) => addSubActivityAllowedRoles?.includes(role)) &&\r\n                              l3.task_id !== selectedActivityId &&\r\n                              parseInt(td.status, 10) !== 2 &&\r\n                              parseInt(td.status, 10) !== 3 && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"add-child\"\r\n                                  onClick={() => handleShowAddSub(l3)}\r\n                                >\r\n                                  <MaterialIcon icon=\"add\" />\r\n                                </button>\r\n                              )}\r\n                          </div>\r\n                          <div className=\"task-action\">\r\n                            <div className=\"circular-progress\">\r\n                              <CircularPercentage data={parseInt(l3.task_progress.toFixed(), 10)} />\r\n                            </div>\r\n                            <div className=\"comment\">\r\n                              <MaterialIcon icon=\"comment\" />\r\n                              <div>{l3.comments}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {showAddSub && (\r\n                          <div className=\"add-item\">\r\n                            {isAddingItem && selectedActivityId === l3.task_id ? (\r\n                              <div className=\"saving\">\r\n                                <Spinner size=\"sm\" color=\"success\" />\r\n                                <span>Saving..</span>\r\n                              </div>\r\n                            ) : (\r\n                              selectedActivityId === l3.task_id && (\r\n                                <TaskFormAddSub\r\n                                  {...{\r\n                                    itemValue,\r\n                                    setIsAddingItem,\r\n                                    setShowAddSub,\r\n                                    selectedActivityId,\r\n                                    setSelectedActivityId,\r\n                                    setItemValue,\r\n                                    refetch,\r\n                                  }}\r\n                                />\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {l3.sub !== null && (\r\n                          <div className=\"sub-list\">\r\n                            {JSON.parse(l3.sub)?.map((item) => (\r\n                              <div className=\"sub-item\" key={item.id}>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => handleCheck(item.id, l3)}\r\n                                  disabled={item.employe_id !== userId}\r\n                                >\r\n                                  <div\r\n                                    className={`item-title ${\r\n                                      isChecking &&\r\n                                      item.id === selectedSubId &&\r\n                                      l3.task_id === selectedParentId &&\r\n                                      'checking'\r\n                                    }`}\r\n                                  >\r\n                                    <div\r\n                                      className={`title-check ${\r\n                                        isChecking && item.id !== selectedSubId && 'not-allowed'\r\n                                      }`}\r\n                                    >\r\n                                      {isChecking &&\r\n                                        item.id === selectedSubId &&\r\n                                        l3.task_id === selectedParentId && (\r\n                                          <Spinner size=\"sm\" color=\"primary\" />\r\n                                        )}\r\n                                      {item.status === 'checked' && selectedSubId !== item.id && (\r\n                                        <MaterialIcon icon=\"done\" />\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"title-text\">\r\n                                      <span>\r\n                                        {item.status === 'checked' ? <s>{item.sub}</s> : item.sub}{' '}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                </button>\r\n                                <div className=\"item-action\">\r\n                                  {/* {item.employe_id === userId && (\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={() => {\r\n                                        setSelectedActivityId(item.id);\r\n                                        setTaskIdActive(l3.task_id);\r\n                                      }}\r\n                                    >\r\n                                      {uploadingFile && item.id === selectedActivityId ? (\r\n                                        <Spinner color=\"primary\" size=\"sm\" />\r\n                                      ) : (\r\n                                        <Label htmlFor=\"upload\">\r\n                                          <MaterialIcon icon=\"attach_file\" />\r\n                                        </Label>\r\n                                      )}\r\n                                      <input\r\n                                        type=\"file\"\r\n                                        id=\"upload\"\r\n                                        hidden\r\n                                        onChange={(e) => handleUploadSubActvity(e.target.files)}\r\n                                      />\r\n                                    </button>\r\n                                  )}\r\n                                  <div>\r\n                                    <MaterialIcon icon=\"download\" />\r\n                                  </div> */}\r\n                                  {item.employe_id === userId && (\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"delete\"\r\n                                      onClick={() => handleDeleteSub(item.id, l3)}\r\n                                    >\r\n                                      {isDeletingSub &&\r\n                                      item.id === selectedSubId &&\r\n                                      l3.task_id === selectedParentId ? (\r\n                                        <Spinner size=\"sm\" color=\"danger\" />\r\n                                      ) : (\r\n                                        <MaterialIcon icon=\"delete\" />\r\n                                      )}\r\n                                    </button>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              ))}\r\n            {parseInt(td.status, 10) !== 3 && (\r\n              <div className=\"board-footer\">\r\n                <>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <MaterialIcon icon=\"event\" style={{ fontSize: '20px' }} />\r\n                    <span\r\n                      className={`${isExpired(td.end_date) ? 'text-danger' : ''} `}\r\n                      style={{ fontSize: '12px' }}\r\n                    >\r\n                      {IndoDate(td.end_date)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"members\">\r\n                    <div className=\"members-item\">\r\n                      {td?.pics?.map(\r\n                        (pic, idx) =>\r\n                          idx < 2 && (\r\n                            <Fragment key={pic.id}>\r\n                              <img\r\n                                id={`tooltip-${pic.id}`}\r\n                                src={user1}\r\n                                className=\"ava-pic rounded-circle\"\r\n                                alt=\"avatar\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                              />\r\n                              <TooltipHover title={pic.first_name} id={pic.id.toString()} />\r\n                            </Fragment>\r\n                          ),\r\n                      )}\r\n                      {td?.pics?.length > 2 && (\r\n                        <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                          +{td.pics.length - 2}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {modal && (\r\n        <TaskPopup {...{ modal, setModal, toggle, task, refetch }} name={levelTaskClicked} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardTask.propTypes = {\r\n  directSupervisor: PropTypes.string,\r\n  data: PropTypes.array,\r\n  projectId: PropTypes.string,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.any,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardTask;\r\n","import React, { useState } from 'react';\r\nimport { Button, Col } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\nimport TaskForm from './TaskForm';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst newTaskAllowedRoles = ['Manager'];\r\n\r\nconst BoardToDo = ({\r\n  directSupervisor,\r\n  data,\r\n  isLoading,\r\n  error,\r\n  refetch,\r\n  isRefetching,\r\n  isMemberActive,\r\n}) => {\r\n  const { auth } = useAuth();\r\n  const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const type = 1;\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-primary text-primary py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">To do</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {isMemberActive &&\r\n            auth?.user?.roles.find((role) => newTaskAllowedRoles?.includes(role)) &&\r\n            (!newTaskOpen ? (\r\n              <Button\r\n                type=\"button\"\r\n                size=\"sm\"\r\n                color=\"secondary\"\r\n                className=\"d-flex align-items-center justify-content-center rounded-2\"\r\n                block\r\n                onClick={() => setNewTaskOpen(true)}\r\n              >\r\n                <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n                Add Goal\r\n              </Button>\r\n            ) : (\r\n              <TaskForm\r\n                {...{ projectId, setNewTaskOpen, refetch, type }}\r\n                title=\"Create new goal..\"\r\n              />\r\n            ))}\r\n          <BoardTask\r\n            {...{ directSupervisor, data, projectId, refetch, isRefetching, isMemberActive }}\r\n          />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardToDo.propTypes = {\r\n  directSupervisor: PropTypes.string,\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardToDo;\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n// import TaskForm from './TaskForm';\r\n\r\nconst BoardInProgress = ({\r\n  directSupervisor,\r\n  data,\r\n  isLoading,\r\n  error,\r\n  refetch,\r\n  isRefetching,\r\n  isMemberActive,\r\n}) => {\r\n  // const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-warning text-warning py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">In progress</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {/* {!newTaskOpen ? (\r\n            <Button\r\n              type=\"button\"\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              block\r\n              onClick={() => setNewTaskOpen(true)}\r\n            >\r\n              <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n              New Task\r\n            </Button>\r\n          ) : (\r\n          )} */}\r\n          <BoardTask\r\n            {...{ directSupervisor, data, projectId, refetch, isRefetching, isMemberActive }}\r\n          />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardInProgress.propTypes = {\r\n  directSupervisor: PropTypes.string,\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardInProgress;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Col } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n\r\nconst BoardDone = ({ data, isLoading, error, refetch, isRefetching }) => {\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-success text-success py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">Done</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardDone.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n};\r\n\r\nexport default BoardDone;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport BoardToDo from './BoardToDo';\r\nimport BoardInProgress from './BoardInProgress';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport BoardDone from './BoardDone';\r\n// import NewTaskModal from './NewTaskModal';\r\n\r\nconst removeDuplicates = (arr) => {\r\n  return arr?.filter(\r\n    (obj, index) => arr?.findIndex((item) => item.task_id === obj.task_id) === index,\r\n  );\r\n};\r\n\r\nconst BoardTab = () => {\r\n  const { projectId } = useParams();\r\n  const [todos, setTodos] = useState([]);\r\n  const [inProgress, setInProgress] = useState([]);\r\n  const [Done, setDone] = useState([]);\r\n  const [directSupervisor, setDirectSupervisor] = useState('');\r\n  const [isMemberActive, setIsMemberActive] = useState(false);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['todos'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/employe/list`).then((res) => {\r\n        setIsMemberActive(res.data.is_member_active);\r\n        setDirectSupervisor(res.data.direct_supervisor.toString());\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 0 || parseInt(taska.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 1;\r\n    });\r\n\r\n    const DoneFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 2 || parseInt(taska.status, 10) === 3;\r\n    });\r\n\r\n    setTodos(todofFiltered);\r\n    setInProgress(removeDuplicates(inProgressfFiltered));\r\n    setDone(removeDuplicates(DoneFiltered));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <Row>\r\n      {/* <Col lg=\"12\">\r\n        <div className=\"search text-muted\">\r\n          <div className=\"search-input\">\r\n            <MaterialIcon icon=\"search\" />\r\n            <input type=\"text\" placeholder=\"search task ..\" />\r\n          </div>\r\n          <button type=\"button\" className=\"text-dark\" onClick={toggle.bind(null)}>\r\n            <MaterialIcon icon=\"add\" />\r\n            New Task\r\n          </button>\r\n          <NewTaskModal {...{ modal, setModal, toggle }} />\r\n        </div>\r\n      </Col> */}\r\n      {isLoading ? (\r\n        <Col>\r\n          <Card>\r\n            <CardBody className=\"text-center\">\r\n              <h6 className=\"tex-muted\">Loading...</h6>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : (\r\n        <Col>\r\n          {/* <div\r\n            className=\"d-flex  justify-content-between align-items-center mb-2\"\r\n            style={{ borderBottom: '0.7px solid grey' }}\r\n          >\r\n            <div className=\"d-flex align-items-center \">\r\n              <span className=\"fw-bold\">List Task</span>\r\n            </div>\r\n            <div className=\"d-flex gap-4\">\r\n              <span>Filter</span>\r\n              <span>Sort</span>\r\n              <div className=\"input-search\">\r\n                <input type=\"text\" placeholder=\"search..\" />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n          <Row>\r\n            <BoardToDo\r\n              data={todos}\r\n              {...{ directSupervisor, isLoading, error, refetch, isRefetching, isMemberActive }}\r\n            />\r\n            <BoardInProgress\r\n              data={inProgress}\r\n              {...{ directSupervisor, isLoading, error, refetch, isRefetching, isMemberActive }}\r\n            />\r\n            <BoardDone data={Done} {...{ isLoading, error, refetch, isRefetching }} />\r\n          </Row>\r\n        </Col>\r\n      )}\r\n      {/* // ) : isMemberActive ? ( //{' '}\r\n      <>\r\n        // <BoardToDo data={todos} {...{ isLoading, error, refetch, isRefetching }} />\r\n        // <BoardInProgress data={inProgress} {...{ isLoading, error, refetch, isRefetching }} />\r\n        // <BoardDone data={Done} {...{ isLoading, error, refetch, isRefetching }} />\r\n        //{' '}\r\n      </>\r\n      // ) : ( //{' '}\r\n      <Col>\r\n        //{' '}\r\n        <Card>\r\n          //{' '}\r\n          <CardBody className=\"text-center\">\r\n            //{' '}\r\n            <h6 className=\"tex-muted\">\r\n              // You cannot create a task because you are not an active member. //{' '}\r\n            </h6>\r\n            //{' '}\r\n          </CardBody>\r\n          //{' '}\r\n        </Card>\r\n        //{' '}\r\n      </Col>\r\n      // )} */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BoardTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RoundedTable.scss';\r\n\r\nconst RoundedTable = ({ children }) => {\r\n  return <table className=\"rounded-corners\">{children}</table>;\r\n};\r\n\r\nRoundedTable.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default RoundedTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useParams } from 'react-router-dom';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport RoundedTable from '../../components/roundedTable/RoundedTable';\r\n// import useAuth from '../../hooks/useAuth';\r\n\r\nconst selectedCount = (obj, row) => {\r\n  return obj[row];\r\n};\r\n\r\nconst MemberTab = () => {\r\n  const [totalTask, setTotalTask] = useState();\r\n  const api = useAxios();\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['members'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/members`).then((res) => {\r\n        setTotalTask(res.data.count_task);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  // const addMemberAllowedRole = 'Manager';\r\n\r\n  return (\r\n    <Col>\r\n      <Card className=\"rounded-3\">\r\n        <CardBody>\r\n          {/* {auth.user.roles.includes(addMemberAllowedRole) && (\r\n            <Col className=\"d-flex justify-content-end\" col=\"12\">\r\n              <Button\r\n                className=\"btn d-flex gap-1 align-items-center rounded-5 px-2\"\r\n                outline\r\n                color=\"success\"\r\n                size=\"sm\"\r\n              >\r\n                <MaterialIcon icon=\"add\" style={{ fontSize: '16px' }} />\r\n                Member\r\n              </Button>\r\n            </Col>\r\n          )} */}\r\n          {isLoading ? (\r\n            'Loading...'\r\n          ) : error ? (\r\n            'Something went wrong.'\r\n          ) : data?.length > 0 ? (\r\n            <RoundedTable>\r\n              <>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Position</th>\r\n                    <th>Total Task</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody style={{ overflow: 'hidden' }}>\r\n                  {data?.map((m, i) => (\r\n                    <tr key={m.first_name}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{m.first_name}</td>\r\n                      <td>{m.position_name}</td>\r\n                      <td>{totalTask ? selectedCount(totalTask, m.employe_id.toString()) : '-'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </>\r\n            </RoundedTable>\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>No data yet.</h6>\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MemberTab;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, CardBody, Table } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\n\r\nconst sortFileByDate = (arr) => {\r\n  return arr.sort(({ created_at: a }, { created_at: b }) => (a < b ? -1 : a > b ? 1 : 0));\r\n};\r\n\r\nconst FileTab = () => {\r\n  const { projectId } = useParams();\r\n\r\n  const api = useAxios();\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['files'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/files`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <Card className=\"rounded-3\">\r\n      <CardBody>\r\n        {isLoading ? (\r\n          'Loading...'\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <Table className=\"no-wrap align-middle\" hover style={{ zIndex: '-1', fontSize: '13px' }}>\r\n            <thead>\r\n              <tr>\r\n                <th width=\"60\">#</th>\r\n                <th width=\"700\">Filename</th>\r\n                <th>User</th>\r\n                <th width=\"200\">Uploaded at</th>\r\n              </tr>\r\n            </thead>\r\n            {data?.length ? (\r\n              <tbody style={{ overflow: 'hidden' }}>\r\n                {sortFileByDate(data)\r\n                  ?.reverse()\r\n                  .map((f, i) => (\r\n                    <tr key={f.file_id}>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        <Link to={`${fileUrl}taskfiles/${f.file_name}`} target=\"blank\">\r\n                          {f.file_name}\r\n                        </Link>\r\n                      </td>\r\n                      <td>{f.employee || '-'}</td>\r\n                      <td>{newDate(f.created_at)}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            ) : (\r\n              <tbody style={{ overflow: 'hidden' }}>\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"text-center\">\r\n                    No data yet.\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FileTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport IndoDate from '../../utils/IndoDate';\r\n\r\nconst ReviewTab = ({ setTotalReview }) => {\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [taskId, setTaskId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [comments, setComments] = useState();\r\n  const [employeId, setEmployeId] = useState();\r\n  const api = useAxios();\r\n  const [listReview, setListReview] = useState([]);\r\n\r\n  const { isLoading, error, refetch, isRefetching } = useQuery({\r\n    queryKey: ['review'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/level1/review`).then((res) => {\r\n        setListReview(res.data.data);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalReview(listReview.length);\r\n  }, [listReview]);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const handleForm = (modeRes, task, employe) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setTaskId(task);\r\n    setEmployeId(employe);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: employeId,\r\n        status: mode === 'approve' ? 3 : 4,\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        alert('success', `Task has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    refetch();\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          // {isLoading ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          listReview.map((task, i) => (\r\n            <Card key={task.approval_id} className=\"custom-card rounded-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      #{i + 1}\r\n                    </Badge>\r\n                    <Badge color=\"info\" className=\"\">\r\n                      {task.first_name}\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(task.send_date)}</span>\r\n                </CardTitle>\r\n                <h5>\r\n                  <strong>{task.task_title}</strong>\r\n                </h5>\r\n                <p>{task.task_desc}</p>\r\n                <span className=\"text-dark\">Attachment:</span>\r\n                <div className=\"\">\r\n                  {task.files.length > 0\r\n                    ? task.files.map((f, idx) => (\r\n                        <div key={f.file_name} className=\"d-flex gap-3\">\r\n                          <span>{idx + 1}.</span>\r\n                          <Link\r\n                            className=\"file-link\"\r\n                            to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                            target=\"blank\"\r\n                          >\r\n                            {f.file_name}\r\n                          </Link>\r\n                        </div>\r\n                      ))\r\n                    : '-'}\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Start at: </span>\r\n                      <br /> {IndoDate(task.start_date)?.split(',')[0]}\r\n                    </div>\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Due at: </span>\r\n                      <br /> {IndoDate(task.end_date)?.split(',')[0]}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', task.task_id, task.employe_id)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"success\"\r\n                      onClick={() => handleForm('approve', task.task_id, task.employe_id)}\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ))\r\n        )}\r\n        {/* <Card>\r\n        <CardBody>\r\n        <CardTitle tag=\"h4\">\r\n        <Badge color=\"success\">Approved</Badge>\r\n        </CardTitle>\r\n        <Table className=\"no-wrap mt-3 align-middle\" hover style={{ zIndex: '-1' }}>\r\n        <thead>\r\n        <tr>\r\n        <th>#</th>\r\n        <th>Employee</th>\r\n        <th>Task</th>\r\n        <th>Attachment</th>\r\n        <th>Approved at</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {data.map((task, i) => (\r\n            <tr key={task.approval_id}>\r\n            <td>{i + 1}</td>\r\n            <td>{task.first_name}</td>\r\n            <td>{task.task_title}</td>\r\n            <td>{task.file}</td>\r\n            <td>{newDate(task.created_at)}</td>\r\n            </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n            </CardBody>\r\n        </Card> */}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewTab.propTypes = {\r\n  setTotalReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst HandoverTab = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newStage, setNewStage] = useState({});\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['handover'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${auth?.user.employe_id}/${projectId}/handover`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const handleConfirm = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api\r\n      .post(`api/project/${data?.history_id}/confirm`, newStage)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewStage((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          data !== null && (\r\n            <Card className=\"custom-card\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Handover project\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.from_division}</strong> to{' '}\r\n                    <strong>{data.to_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <p></p>\r\n                <span className=\"text-dark\">BAST File:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link\r\n                      className=\"file-link\"\r\n                      to={`${fileUrl}project/${data.file}`}\r\n                      target=\"blank\"\r\n                    >\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.from_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      outline\r\n                      onClick={toggle.bind(null)}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Confirmation</ModalHeader>\r\n        <form onSubmit={handleConfirm}>\r\n          <ModalBody>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6 className=\"fw-bold\">\r\n                Next stage:{' '}\r\n                {data?.current_stage?.phase === 1\r\n                  ? 'Planning'\r\n                  : data?.current_stage?.phase === 2\r\n                  ? 'Execution, Control & Monitoring'\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n            <FormGroup>\r\n              <Label htmlFor=\"desc_stage\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"desc_stage\"\r\n                id=\"desc_stage\"\r\n                placeholder=\"stage description here..\"\r\n                rows=\"3\"\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"start_date\">Start date</Label>\r\n                  <Input type=\"date\" id=\"start_date\" name=\"start_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"end_date\">End date</Label>\r\n                  <Input type=\"date\" id=\"end_date\" name=\"end_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"success\"\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n              // onClick={handleConfirm}\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                  Sending\r\n                </>\r\n              ) : (\r\n                'Send'\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HandoverTab;\r\n","export const level2Progress = (val) => {\r\n  const level3 = val?.level_3;\r\n\r\n  let sum = 0;\r\n  let total = 0;\r\n  if (level3?.length > 0) {\r\n    for (let i = 0; i < level3?.length; i++) {\r\n      sum += level3[i].task_progress;\r\n    }\r\n\r\n    total = sum / level3.length;\r\n  } else {\r\n    total = val?.task_progress;\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nexport const level1Progress = (val) => {\r\n  const level2 = val?.level_2;\r\n\r\n  let sum = 0;\r\n  let total = 0;\r\n\r\n  if (level2?.length > 0) {\r\n    for (let i = 0; i < level2.length; i++) {\r\n      sum += level2Progress(level2[i]);\r\n    }\r\n\r\n    total = sum / level2.length;\r\n  } else {\r\n    total = val?.task_progress;\r\n  }\r\n\r\n  return total;\r\n};\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\nimport { Badge, Button, Card, CardBody, Col, Input, Progress, Row, Spinner } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport TaskPopup from './TaskPopup';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport PDFFile from './PDFFile';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport './ProjectTable.scss';\r\nimport { level1Progress, level2Progress } from '../../utils/countTaskProgress';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\n// import TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst ActivityTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [task, setTask] = useState(undefined);\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const [isDirector, setIsDirector] = useState(false);\r\n  const [projectTitle, setProjectTitle] = useState();\r\n  const [filterSearch, setFilterSearch] = useState();\r\n  const [progress, setProgress] = useState(0);\r\n  const api = useAxios();\r\n\r\n  const { search } = useLocation();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['act'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/activities/all${search}`).then((res) => {\r\n        setProjectTitle(res.data.project);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFilterSearch(data);\r\n\r\n    async function fetchProgress() {\r\n      await api\r\n        .post('api/project/progress/collection', { ids: [projectId] })\r\n        .then((res) => {\r\n          setProgress(res.data.data[0]?.progress);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchProgress();\r\n  }, [data]);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  const favoriteAllowedRoles = ['Director'];\r\n  const reportTaskAllowedRoles = ['Manager'];\r\n\r\n  useEffect(() => {\r\n    if (auth?.user.roles.find((role) => favoriteAllowedRoles.includes(role))) {\r\n      setIsDirector(true);\r\n    }\r\n  }, [auth]);\r\n\r\n  const handleSearch = (value) => {\r\n    const filterByTitle = data.filter((item) =>\r\n      item.task_title.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n\r\n    setFilterSearch(filterByTitle);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <Card className=\"rounded-3\">\r\n          <CardBody>\r\n            {isLoading ? (\r\n              'loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  <Col sm=\"12 mb-2\" md=\"6\">\r\n                    <div className=\"d-flex gap-2\">\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"filter_list\" style={{ fontSize: '12px' }} />\r\n                        Sort\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"tune\" style={{ fontSize: '12px' }} />\r\n                        Filters\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                  <Col sm=\"12\" md=\"6\">\r\n                    <div className=\"d-flex gap-3 col-md-6 w-100\">\r\n                      <div className=\"w-100 position-relative\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"rounded-3\"\r\n                          bsSize=\"md\"\r\n                          placeholder=\"Search task...\"\r\n                          onChange={(e) => handleSearch(e.target.value)}\r\n                        />\r\n                        <div className=\"position-absolute top-0 end-0 h-100 p-1\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light w-100 h-100 border-0 rounded-3 text-muted\"\r\n                            aria-describedby={id}\r\n                            variant=\"contained\"\r\n                            onClick={handleClick}\r\n                          >\r\n                            <MaterialIcon icon=\"more_horiz\" style={{ fontSize: '16px' }} />\r\n                          </Button>\r\n                          <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClick={handleClose}\r\n                            anchorOrigin={{\r\n                              vertical: 'bottom',\r\n                              horizontal: 'left',\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: 'top',\r\n                              horizontal: 'center',\r\n                            }}\r\n                          >\r\n                            <Typography sx={{ p: 2 }}>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Link to=\"#\">Task</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Employee</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Date</Link>\r\n                                </Row>\r\n                              </Col>\r\n                            </Typography>\r\n                          </Popover>\r\n                        </div>\r\n                      </div>\r\n                      {auth?.user.roles.find((role) => reportTaskAllowedRoles.includes(role)) && (\r\n                        <PDFDownloadLink\r\n                          document={<PDFFile {...{ projectTitle, data }} />}\r\n                          fileName={`Task Report - ${projectTitle?.project_number} - ${projectTitle?.division}`}\r\n                          style={{ textDecoration: 'none' }}\r\n                        >\r\n                          {/* {({ loading }) =>\r\n                          loading ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light d-flex rounded-3\"\r\n                            >\r\n                              Loading...\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light-info text-info d-flex align-items-center gap-2 rounded-3\"\r\n                            >\r\n                              <MaterialIcon icon=\"picture_as_pdf\" style={{ fontSize: '12px' }} />\r\n                              Report\r\n                            </Button>\r\n                          )\r\n                        } */}\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light-info text-info rounded-3 d-flex py-2\"\r\n                            // size=\"lg\"\r\n                          >\r\n                            <MaterialIcon icon=\"file_download\" style={{ fontSize: '18px' }} />\r\n                            {/* Report */}\r\n                          </Button>\r\n                        </PDFDownloadLink>\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Col sm=\"12 overflow-auto\">\r\n                  <div className=\"d-flex align-items-center justify-content-between mt-2\">\r\n                    <h6 className=\"fw-bold\">List of tasks from {projectTitle?.division}</h6>\r\n                    <div className=\"w-25\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <div style={{ width: '86%' }}>\r\n                          <Progress\r\n                            className=\"\"\r\n                            color=\"success\"\r\n                            value={progress.toFixed()}\r\n                            style={{ height: '12px' }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"fw-bold\">{progress.toFixed()}%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <table className=\"rounded-corners act-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th width=\"30\">#</th>\r\n                        <th colSpan=\"3\" style={{ minWidth: '400px' }}>\r\n                          Task title\r\n                        </th>\r\n                        <th width=\"\">Status</th>\r\n                        <th style={{ minWidth: '100px' }}>Start date</th>\r\n                        <th style={{ minWidth: '100px' }}>Due date</th>\r\n                        <th>Progress</th>\r\n                        <th width=\"100\">PIC</th>\r\n                        {isDirector && <th width=\"50\"></th>}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filterSearch?.length > 0 ? (\r\n                        filterSearch?.map((ts, idx) => (\r\n                          <Fragment key={ts.task_id}>\r\n                            <tr>\r\n                              <td>{idx + 1}.</td>\r\n                              <td\r\n                                colSpan=\"3\"\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => openPopup(ts)}\r\n                              >\r\n                                <span style={{ fontWeight: '600' }}>{ts.task_title}</span>\r\n                                <br></br>\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  {ts?.level_2?.length} subtask\r\n                                </Badge>\r\n                                {'  '}\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                  {ts.comments}\r\n                                </Badge>\r\n                              </td>\r\n\r\n                              <td>\r\n                                {ts.status === 0 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    To Do\r\n                                  </Badge>\r\n                                ) : ts.status === 1 ? (\r\n                                  <Badge color=\"warning\">In Progress</Badge>\r\n                                ) : ts.status === 2 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    Under Review\r\n                                  </Badge>\r\n                                ) : ts.status === 3 ? (\r\n                                  <Badge color=\"success\">Approved</Badge>\r\n                                ) : (\r\n                                  <Badge color=\"danger\">Revision</Badge>\r\n                                )}\r\n                              </td>\r\n                              <td>{IndoDate(ts.start_date)}</td>\r\n                              <td className={`${isExpired(ts.end_date) ? 'text-danger' : ''}`}>\r\n                                {IndoDate(ts.end_date)}\r\n                              </td>\r\n                              <td>\r\n                                <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                                  {level1Progress(ts)?.toFixed()}%\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"members\">\r\n                                  <div className=\"members-item\">\r\n                                    {ts?.pics?.map(\r\n                                      (pic, i) =>\r\n                                        i < 2 && (\r\n                                          <Fragment key={pic.id}>\r\n                                            <img\r\n                                              id={`tooltip-${pic.id}`}\r\n                                              src={user1}\r\n                                              className=\"ava-pic rounded-circle\"\r\n                                              alt=\"avatar\"\r\n                                              width=\"35\"\r\n                                              height=\"35\"\r\n                                            />\r\n                                            <TooltipHover\r\n                                              title={pic.first_name}\r\n                                              id={pic.id?.toString()}\r\n                                            />\r\n                                          </Fragment>\r\n                                        ),\r\n                                    )}\r\n                                    {ts?.pics?.length > 2 && (\r\n                                      <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                        +{ts.pics.length - 2}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              {isDirector && (\r\n                                <td className=\"text-center\">\r\n                                  {addingFavorite && taskIdSelected === ts.task_id ? (\r\n                                    <Spinner size=\"sm\" color=\"warning\" />\r\n                                  ) : (\r\n                                    <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"fav-btn\"\r\n                                        onClick={() => handleFavorite(ts.task_id)}\r\n                                      >\r\n                                        <MaterialIcon\r\n                                          icon=\"star\"\r\n                                          className={`${ts.isFavorite && 'is_favorite'}`}\r\n                                        />\r\n                                      </button>\r\n                                    </abbr>\r\n                                  )}\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                            {ts.level_2?.length > 0 &&\r\n                              ts.level_2?.map((st, si) => (\r\n                                <Fragment key={st.task_id}>\r\n                                  <tr key={st.task_id}>\r\n                                    <td></td>\r\n                                    <td width=\"5\">\r\n                                      {idx + 1}.{si + 1}\r\n                                    </td>\r\n                                    <td\r\n                                      colSpan=\"2\"\r\n                                      onClick={() => openPopup(st)}\r\n                                      style={{\r\n                                        cursor: 'pointer',\r\n                                        textAlign: 'left',\r\n                                        fontWeight: '500',\r\n                                      }}\r\n                                    >\r\n                                      {st.task_title}\r\n                                      <br></br>\r\n                                      <Badge color=\"light\" className=\"text-muted\">\r\n                                        {st?.level_3?.length} subtask\r\n                                      </Badge>\r\n                                      {'  '}\r\n                                      <Badge color=\"light\" className=\"text-muted\">\r\n                                        <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                        {st.comments}\r\n                                      </Badge>\r\n                                    </td>\r\n                                    <td>-</td>\r\n                                    <td>{IndoDate(st.start_date)}</td>\r\n                                    <td\r\n                                      className={`${isExpired(st.end_date) ? 'text-danger' : ''}`}\r\n                                    >\r\n                                      {IndoDate(st.end_date)}\r\n                                    </td>\r\n                                    <td>\r\n                                      <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                        {level2Progress(st)?.toFixed()}%\r\n                                      </span>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"members\">\r\n                                        <div className=\"members-item\">\r\n                                          {st?.pics?.map(\r\n                                            (pic, i) =>\r\n                                              i < 2 && (\r\n                                                <Fragment key={pic.id}>\r\n                                                  <img\r\n                                                    id={`tooltip-${pic.id}`}\r\n                                                    src={user1}\r\n                                                    className=\"ava-pic rounded-circle\"\r\n                                                    alt=\"avatar\"\r\n                                                    width=\"35\"\r\n                                                    height=\"35\"\r\n                                                  />\r\n                                                  <TooltipHover\r\n                                                    title={pic.first_name}\r\n                                                    id={pic.id?.toString()}\r\n                                                  />\r\n                                                </Fragment>\r\n                                              ),\r\n                                          )}\r\n                                          {st?.pics?.length > 2 && (\r\n                                            <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                              +{st.pics.length - 2}\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                    {isDirector && (\r\n                                      <td className=\"text-center\">\r\n                                        {addingFavorite && taskIdSelected === st.task_id ? (\r\n                                          <Spinner size=\"sm\" color=\"warning\" />\r\n                                        ) : (\r\n                                          <abbr\r\n                                            title=\"Mark task\"\r\n                                            style={{ textDecoration: 'none' }}\r\n                                          >\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"fav-btn\"\r\n                                              onClick={() => handleFavorite(st.task_id)}\r\n                                            >\r\n                                              <MaterialIcon\r\n                                                icon=\"star\"\r\n                                                className={`${st.isFavorite && 'is_favorite'}`}\r\n                                              />\r\n                                            </button>\r\n                                          </abbr>\r\n                                        )}\r\n                                      </td>\r\n                                    )}\r\n                                  </tr>\r\n                                  {st.level_3?.length > 0 &&\r\n                                    st.level_3?.map((sst, ssi) => (\r\n                                      <tr key={sst.task_id}>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td width=\"5\">\r\n                                          {idx + 1}.{si + 1}.{ssi + 1}\r\n                                        </td>\r\n                                        <td\r\n                                          onClick={() => openPopup(sst)}\r\n                                          style={{ cursor: 'pointer', textAlign: 'left' }}\r\n                                        >\r\n                                          {sst.task_title}\r\n                                          <br></br>\r\n                                          <Badge color=\"light\" className=\"text-muted\">\r\n                                            <MaterialIcon\r\n                                              icon=\"comment\"\r\n                                              style={{ fontSize: '12px' }}\r\n                                            />\r\n                                            {sst.comments}\r\n                                          </Badge>\r\n                                        </td>\r\n                                        <td>-</td>\r\n                                        <td>{IndoDate(sst.start_date)}</td>\r\n                                        <td\r\n                                          className={`${\r\n                                            isExpired(sst.end_date) ? 'text-danger' : ''\r\n                                          }`}\r\n                                        >\r\n                                          {IndoDate(sst.end_date)}\r\n                                        </td>\r\n                                        <td>\r\n                                          <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                            {sst?.task_progress?.toFixed()}%\r\n                                          </span>\r\n                                        </td>\r\n                                        <td>\r\n                                          <div className=\"members\">\r\n                                            <div className=\"members-item\">\r\n                                              {sst?.pics?.map(\r\n                                                (pic, i) =>\r\n                                                  i < 2 && (\r\n                                                    <Fragment key={pic.id}>\r\n                                                      <img\r\n                                                        id={`tooltip-${pic.id}`}\r\n                                                        src={user1}\r\n                                                        className=\"ava-pic rounded-circle\"\r\n                                                        alt=\"avatar\"\r\n                                                        width=\"35\"\r\n                                                        height=\"35\"\r\n                                                      />\r\n                                                      <TooltipHover\r\n                                                        title={pic.first_name}\r\n                                                        id={pic.id?.toString()}\r\n                                                      />\r\n                                                    </Fragment>\r\n                                                  ),\r\n                                              )}\r\n                                              {sst?.pics?.length > 2 && (\r\n                                                <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                                  +{sst.pics.length - 2}\r\n                                                </div>\r\n                                              )}\r\n                                            </div>\r\n                                          </div>\r\n                                        </td>\r\n                                        {isDirector && (\r\n                                          <td className=\"text-center\">\r\n                                            {addingFavorite && taskIdSelected === sst.task_id ? (\r\n                                              <Spinner size=\"sm\" color=\"warning\" />\r\n                                            ) : (\r\n                                              <abbr\r\n                                                title=\"Mark task\"\r\n                                                style={{ textDecoration: 'none' }}\r\n                                              >\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"fav-btn\"\r\n                                                  onClick={() => handleFavorite(sst.task_id)}\r\n                                                >\r\n                                                  <MaterialIcon\r\n                                                    icon=\"star\"\r\n                                                    className={`${sst.isFavorite && 'is_favorite'}`}\r\n                                                  />\r\n                                                </button>\r\n                                              </abbr>\r\n                                            )}\r\n                                          </td>\r\n                                        )}\r\n                                      </tr>\r\n                                    ))}\r\n                                </Fragment>\r\n                              ))}\r\n                          </Fragment>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"9\" align=\"center\">\r\n                            No data available\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task }} mode=\"activities\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst ReviewBastTab = ({ setTotalBastReview }) => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [comments, setComments] = useState();\r\n  const [oldPic, setOldPic] = useState();\r\n  const [notifTo, setNotifTo] = useState();\r\n  const [reviewBy, setReviewBy] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['bast-review'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTotalBastReview(10);\r\n  }, [data]);\r\n\r\n  const handleForm = (modeRes, oldPicP, notifToId, byEmploye) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setOldPic(oldPicP || null);\r\n    setNotifTo(notifToId);\r\n    setReviewBy(byEmploye);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(`api/project/${data?.history_id}/bast/approval`, {\r\n        project_id: projectId,\r\n        old_pic: oldPic,\r\n        notif_to: notifTo,\r\n        review_by: reviewBy,\r\n        status: mode === 'approve' ? 'handover' : 'revision',\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', `BAST has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading ? (\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <Card className=\"custom-card\">\r\n            {data && (\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Review BAST\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.old_pic_division}</strong> to{' '}\r\n                    <strong>{data.new_pic_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <span className=\"text-dark\">BAST file:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link className=\"file-link\" to=\"\" target=\"blank\">\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.old_pic_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', data.old_pic_id, data.review_by)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      onClick={() =>\r\n                        handleForm('approve', data.old_pic_id, data.new_pic_id, data.review_by)\r\n                      }\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewBastTab.propTypes = {\r\n  setTotalBastReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewBastTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OverviewTab from './OverviewTab';\r\nimport BoardTab from './BoardTab';\r\nimport MemberTab from './MemberTab';\r\nimport FileTab from './FileTab';\r\nimport ReviewTab from './ReviewTab';\r\nimport HandoverTab from './HandoverTab';\r\nimport ActivityTab from './ActivityTab';\r\nimport ReviewBastTab from './ReviewBastTab';\r\n\r\nconst ProjectDetailTab = ({ navActive, setTotalReview, setTotalBastReview, roles }) => {\r\n  return (\r\n    <>\r\n      {navActive === 1 && <OverviewTab />}\r\n      {!roles.includes('Director') && navActive === 2 && <BoardTab />}\r\n      {navActive === 3 && <MemberTab />}\r\n      {navActive === 4 && <FileTab />}\r\n      {navActive === 5 && <ReviewTab {...{ setTotalReview }} />}\r\n      {!roles.includes('Director') && navActive === 6 && <HandoverTab />}\r\n      {navActive === 7 && <ActivityTab />}\r\n      {navActive === 8 && <ReviewBastTab {...{ setTotalBastReview }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nProjectDetailTab.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setTotalReview: PropTypes.func,\r\n  setTotalBastReview: PropTypes.func,\r\n  roles: PropTypes.array,\r\n};\r\n\r\nexport default ProjectDetailTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport makeAnimated from 'react-select/animated';\r\nimport Select from 'react-select';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst EditProjectModal = ({ modal, setModal, toggle, data, refetch }) => {\r\n  const [projectData, setProjectData] = useState({});\r\n  const [dataUpdate, setDataUpdate] = useState({});\r\n  const [options, setOptions] = useState({});\r\n  const [partnerOptions, setPartnerOptions] = useState([]);\r\n  const [partner, setPartner] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [anotherBaseId, setAnotherBaseId] = useState(false);\r\n  const [isSavingBaseId, setIsSavingBaseId] = useState(false);\r\n  const [newBaseId, setNewBaseId] = useState();\r\n  const [businessPlan, setBusinessPlan] = useState({});\r\n  const [defaultPartner, setDefaultPartner] = useState({});\r\n  const [defaultBusinessPlan, setDefaultBusinessPlan] = useState();\r\n  const [otherPartner, setOtherPartner] = useState(false);\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    setProjectData(data);\r\n    setDataUpdate({\r\n      project_number: data?.project_number,\r\n      project_name: data?.project_name,\r\n      goals: data?.goals,\r\n      estimated_income: data?.estimated_income,\r\n      estimated_cost: data?.estimated_cost,\r\n      base_id: data?.base_id,\r\n      level_id: data?.level_id,\r\n      business_id: data?.business_id,\r\n      category: data?.category,\r\n      start_date: data?.current_stage?.start_date,\r\n      end_date: data?.current_stage?.end_date,\r\n      desc: data?.current_stage?.desc,\r\n      partner: data?.current_stage?.partner_id,\r\n    });\r\n\r\n    setDefaultBusinessPlan({\r\n      value: data?.business_id,\r\n      label: data?.business_desc,\r\n    });\r\n\r\n    setDefaultPartner({\r\n      value: data?.current_stage?.partner_name,\r\n      label: data?.current_stage?.partner_name,\r\n    });\r\n  }, [data]);\r\n\r\n  const fetchBusinessOptions = async () => {\r\n    await api\r\n      .get(`api/project/business/options`)\r\n      .then((res) => setOptions(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchPartnerOptions() {\r\n      await api\r\n        .get(`api/list-mitra`)\r\n        .then((res) => setPartnerOptions(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchBusinessOptions();\r\n    fetchPartnerOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    partnerOptions.unshift({ label: 'TAMBAH LAINNYA', value: 'LAINNYA' });\r\n  }, [partnerOptions]);\r\n\r\n  useEffect(() => {\r\n    if (partner?.value === 'LAINNYA') {\r\n      setOtherPartner(true);\r\n      setPartner({});\r\n    }\r\n  }, [partner]);\r\n\r\n  const handleChange = (e) => {\r\n    setDataUpdate((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataUpdate?.base_id === 'another') {\r\n      setAnotherBaseId(true);\r\n    }\r\n  }, [dataUpdate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    dataUpdate.stage_id = projectData?.current_stage?.stage_id;\r\n    dataUpdate.partner =\r\n      Object.keys(partner)?.length !== 0\r\n        ? partner.value\r\n        : dataUpdate?.partner\r\n        ? dataUpdate?.partner\r\n        : data?.current_stage?.partner_name;\r\n    dataUpdate.business_id =\r\n      Object.keys(businessPlan)?.length !== 0 ? businessPlan.value : data?.business_id;\r\n\r\n    await api\r\n      .patch(`api/project/${projectData?.project_id}/update`, dataUpdate)\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', 'Project has been updated.');\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setOtherPartner(false);\r\n    setLoading(false);\r\n    setModal(false);\r\n  };\r\n\r\n  const submitBaseId = async () => {\r\n    setIsSavingBaseId(true);\r\n    if (newBaseId) {\r\n      await api\r\n        .post('api/project/activity-base/add', { activity_name: newBaseId })\r\n        .then((res) => {\r\n          fetchBusinessOptions();\r\n          alert('success', res.data.message);\r\n        })\r\n        .catch(() => {\r\n          alert('error', 'Something went wrong');\r\n        });\r\n    } else {\r\n      alert('error', 'Field cannot be empty');\r\n    }\r\n    setNewBaseId();\r\n    setAnotherBaseId(false);\r\n    setIsSavingBaseId(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"lg\" fade={false}>\r\n        <ModalHeader toggle={toggle.bind(null)}>Update Project</ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label htmlFor=\"project_number\">Project Number</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"project_number\"\r\n                id=\"project_number\"\r\n                placeholder=\"Project number here\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.project_number || ''}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"project_name\">Project name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"project_name\"\r\n                id=\"project_name\"\r\n                placeholder=\"Project name here\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.project_name}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"start_date\">Start date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    id=\"start_date\"\r\n                    name=\"start_date\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.start_date || ''}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"end_date\">End date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    id=\"end_date\"\r\n                    name=\"end_date\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.end_date || ''}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <FormGroup>\r\n              <Label htmlFor=\"goals\">Goals</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Explain the goals of the project here\"\r\n                rows=\"3\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.goals || ''}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"level_id\">Activity level</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    id=\"level_id\"\r\n                    name=\"level_id\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.level_id || ''}\r\n                  >\r\n                    <option disabled value=\"al\">\r\n                      - Select -\r\n                    </option>\r\n                    {options?.activity_level?.map((al) => (\r\n                      <option key={al.level_id} value={al.level_id}>\r\n                        {al.level_desc}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"category\">Category</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    id=\"category\"\r\n                    name=\"category\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.category || ''}\r\n                  >\r\n                    <option disabled value=\"cat\">\r\n                      - Select -\r\n                    </option>\r\n                    <option value=\"business\">Business</option>\r\n                    <option value=\"non-business\">Non-business</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            {(projectData?.category === 'business' || dataUpdate?.category === 'business') && (\r\n              <>\r\n                <FormGroup>\r\n                  <Label for=\"partner\">Partner</Label>\r\n                  {otherPartner ? (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"partner\"\r\n                      id=\"partner\"\r\n                      placeholder=\"Type here..\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Select\r\n                      components={animatedComponents}\r\n                      options={partnerOptions}\r\n                      defaultValue={defaultPartner}\r\n                      onChange={(choice) => setPartner(choice)}\r\n                    />\r\n                  )}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"desc\">Description for Initiation & Definition phase</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    id=\"desc\"\r\n                    name=\"desc\"\r\n                    placeholder=\"Description of the phase here\"\r\n                    rows=\"3\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.desc}\r\n                  />\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"estimated_income\">Estimated income</Label>\r\n                      <InputGroup>\r\n                        <InputGroupText>Rp.</InputGroupText>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          id=\"estimated_income\"\r\n                          name=\"estimated_income\"\r\n                          onChange={handleChange}\r\n                          defaultValue={projectData?.estimated_income || ''}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"estimated_cost\">Estimated cost</Label>\r\n                      <InputGroup>\r\n                        <InputGroupText>Rp.</InputGroupText>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          id=\"estimated_cost\"\r\n                          name=\"estimated_cost\"\r\n                          onChange={handleChange}\r\n                          defaultValue={projectData?.estimated_cost || ''}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n            {anotherBaseId ? (\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"activity_name\">Add Activity Base</Label>\r\n                    <div className=\"d-flex gap-3\">\r\n                      <div style={{ width: '70%' }}>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"activity_name\"\r\n                          id=\"activity_name\"\r\n                          placeholder=\"Type here..\"\r\n                          onChange={(e) => setNewBaseId(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        className=\"d-flex align-items-center\"\r\n                        type=\"button\"\r\n                        color=\"success\"\r\n                        size=\"sm\"\r\n                        onClick={submitBaseId}\r\n                        disabled={isSavingBaseId}\r\n                      >\r\n                        {isSavingBaseId ? (\r\n                          <>\r\n                            <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                            Loading\r\n                          </>\r\n                        ) : (\r\n                          'Save'\r\n                        )}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        outline\r\n                        onClick={() => setAnotherBaseId(false)}\r\n                        disabled={isSavingBaseId}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"base_id\">Activity base</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"base_id\"\r\n                      name=\"base_id\"\r\n                      defaultValue={projectData?.base_id || ''}\r\n                      onChange={handleChange}\r\n                      style={{ textOverflow: 'ellipsis' }}\r\n                    >\r\n                      <option disabled value=\"ab\">\r\n                        - Select -\r\n                      </option>\r\n                      {options?.activity_base?.map((ab) => (\r\n                        <option\r\n                          key={ab.base_id}\r\n                          value={ab.base_id}\r\n                          style={{\r\n                            width: '4rem',\r\n                            textOverflow: 'ellipsis',\r\n                          }}\r\n                        >\r\n                          {ab.base_description}\r\n                        </option>\r\n                      ))}\r\n                      <option value=\"another\">Tambah Lainnya</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"business_id\" className=\"text-muted\">\r\n                      Business plan\r\n                    </Label>\r\n                    {dataUpdate?.base_id === '3' || projectData?.base_id?.toString() === '3' ? (\r\n                      <Select\r\n                        components={animatedComponents}\r\n                        options={options?.business_plan}\r\n                        defaultValue={defaultBusinessPlan}\r\n                        onChange={(choice) => setBusinessPlan(choice)}\r\n                      />\r\n                    ) : (\r\n                      <Input type=\"select\" disabled defaultValue=\"\" />\r\n                    )}\r\n                    {/* <Input\r\n                      type=\"select\"\r\n                      id=\"business_id\"\r\n                      name=\"business_id\"\r\n                      disabled={dataUpdate?.base_id?.toString() !== '3'}\r\n                      onChange={handleChange}\r\n                      defaultValue={projectData?.business_id || ''}\r\n                    >\r\n                      {projectData?.base_id?.toString() === '3' && (\r\n                        <>\r\n                          <option value=\"\">- Select -</option>\r\n                          {options?.business_plan?.map((bp) => (\r\n                            <option key={bp.business_id} value={bp.business_id}>\r\n                              {bp.business_desc}\r\n                            </option>\r\n                          ))}\r\n                        </>\r\n                      )}\r\n                    </Input> */}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"info\" disabled={loading}>\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                  Loading ...\r\n                </>\r\n              ) : (\r\n                'Update'\r\n              )}\r\n            </Button>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nEditProjectModal.propTypes = {\r\n  modal: PropTypes.bool,\r\n  setModal: PropTypes.func,\r\n  toggle: PropTypes.any,\r\n  data: PropTypes.object,\r\n  refetch: PropTypes.func,\r\n};\r\n\r\nexport default EditProjectModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport './Project.scss';\r\nimport EditProjectModal from './EditProjectModal';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst allowedRolesForReview = ['Manager', 'Director'];\r\nconst allowedRolesForBastReview = ['Director'];\r\n\r\nconst ProjectNav = ({ navActive, setNavActive, totalReview, totalBastReview }) => {\r\n  const [currentTotalReview, setCurrentTotalReview] = useState('');\r\n  const [currentTotalBastReview, setCurrentTotalBastReview] = useState(0);\r\n  const { auth } = useAuth();\r\n  const { roles } = auth.user;\r\n  const api = useAxios();\r\n  const { projectId } = useParams();\r\n  const [actionMenu, setActionMenu] = useState(false);\r\n  const [isBusiness, setIsBusiness] = useState();\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const navigate = useNavigate();\r\n  // const [actionMenu, setActionMenu] = useState(undefined);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const toggle2 = () => {\r\n    setModal2(!modal2);\r\n  };\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n\r\n  const queryTo = queryParams.get('to');\r\n\r\n  useEffect(() => {\r\n    if (queryTo === 'review') {\r\n      setNavActive(5);\r\n    } else if (queryTo === 'handover') {\r\n      setNavActive(6);\r\n    } else if (queryTo === 'overview') {\r\n      setNavActive(1);\r\n    } else if (queryTo === 'activities') {\r\n      setNavActive(7);\r\n    } else if (queryTo === 'bast-review') {\r\n      setNavActive(8);\r\n    }\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalReview() {\r\n      await api\r\n        .get(`api/task/${projectId}/level1/review`)\r\n        .then((res) => setCurrentTotalReview(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForReview.includes(role))) {\r\n      fetchTotalReview();\r\n    }\r\n  }, [totalReview]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalBastReview() {\r\n      await api\r\n        .get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`)\r\n        .then((res) => {\r\n          setCurrentTotalBastReview(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForBastReview.includes(role))) {\r\n      fetchTotalBastReview();\r\n    }\r\n  }, [totalBastReview]);\r\n\r\n  const { isLoading, data, refetch } = useQuery({\r\n    queryKey: ['project-number'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  useEffect(() => {\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleUpdate = () => {\r\n    setModal(true);\r\n    setActionMenu(undefined);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setModal2(!modal2);\r\n    setActionMenu(false);\r\n  };\r\n\r\n  const deleteProject = async () => {\r\n    setIsDeleting(true);\r\n    await api\r\n      .delete(`api/project/${projectId}`)\r\n      .then(() => {\r\n        alert('success', 'Project has been deleted.');\r\n        navigate('/projects');\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setModal2(!modal2);\r\n    setIsDeleting(false);\r\n  };\r\n\r\n  const BoardAllowedRoles = ['Staff', 'Manager'];\r\n  const MembersAllowedRoles = ['Staff', 'Manager', 'Director'];\r\n  const ActivitiesAllowedRoles = ['Manager', 'Director'];\r\n  const FilesAllowedRoles = ['Staff', 'Manager'];\r\n  const BASTReviewAllowedRoles = ['Director'];\r\n  const BASTAndReviewNotAllowedRoles = 'Presdir';\r\n  const ReviewTaskAllowedRoles = ['Manager', 'Director'];\r\n  const HandoverAllowedRoles = ['Manager'];\r\n\r\n  return (\r\n    <>\r\n      <Col className=\"nav-container mb-3\">\r\n        <Row sm=\"12\" lg=\"8\" className=\"project-nav overflow-auto\">\r\n          <Link\r\n            className={`${navActive === 1 && 'active'} text-muted fw-bold`}\r\n            onClick={() => setNavActive(1)}\r\n          >\r\n            Overview\r\n          </Link>\r\n          {auth?.user?.roles.find((role) => BoardAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 2 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(2)}\r\n            >\r\n              Board\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => ActivitiesAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 7 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(7)}\r\n            >\r\n              Activities\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => FilesAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 4 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(4)}\r\n              >\r\n                Files\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => BASTReviewAllowedRoles.includes(role)) &&\r\n            !auth?.user?.roles.includes(BASTAndReviewNotAllowedRoles) && (\r\n              <Link\r\n                className={`${navActive === 8 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(8)}\r\n              >\r\n                BAST Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalBastReview ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalBastReview?.length}\r\n                </div>\r\n              </Link>\r\n            )}\r\n          {auth?.user?.roles.find((role) => ReviewTaskAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 5 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(5)}\r\n              >\r\n                Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalReview?.length > 0 ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalReview?.length}\r\n                </div>\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => HandoverAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 6 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(6)}\r\n            >\r\n              Handover{' '}\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => MembersAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 3 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(3)}\r\n            >\r\n              Members\r\n            </Link>\r\n          )}\r\n        </Row>\r\n        <Row\r\n          sm=\"12\"\r\n          style={{\r\n            fontSize: '20px',\r\n            marginRight: '10px',\r\n            textAlign: 'right',\r\n            minWidth: '35%',\r\n          }}\r\n        >\r\n          <span className=\"fw-bold\">{isLoading ? 'Loading..' : data?.project_number}</span>\r\n        </Row>\r\n      </Col>\r\n      <Card className=\"rounded-3 mb-3\">\r\n        <CardBody>\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <Row>\r\n              <Col lg=\"8\">\r\n                <Row md=\"12\">\r\n                  <h5 className=\"fw-bold\">{data?.project_name}</h5>\r\n                </Row>\r\n                {isBusiness ? (\r\n                  <Row lg=\"12\">\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"manage_accounts\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Partner\r\n                          </span>\r\n                          <small className=\"fw-bold\">\r\n                            {data?.current_stage?.partner_name || '-'}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"handshake\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Schema\r\n                          </span>\r\n                          <small className=\"fw-bold\">\r\n                            {data?.current_stage?.schema === 'jo'\r\n                              ? 'Join Operational'\r\n                              : data?.current_stage?.schema === 'jv'\r\n                              ? 'Join Venture'\r\n                              : '-'}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"play_circle_outline\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Phase\r\n                          </span>\r\n                          <small className=\"fw-bold\">{data?.current_stage?.phase}</small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  <Row lg=\"12\">\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <MaterialIcon icon=\"work_off\" style={{ fontSize: '18px' }} />\r\n                      <small className=\"fw-bold\">Non-business</small>\r\n                    </div>\r\n                  </Row>\r\n                )}\r\n              </Col>\r\n              <Col lg=\"4\" className=\"d-flex align-items-center justify-content-end\">\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <div\r\n                    className=\"d-flex flex-column align-items-end\"\r\n                    style={{ marginLeft: '10px' }}\r\n                  >\r\n                    <small className=\"fw-bold\">{data?.pic_active.first_name}</small>\r\n                    <span className=\"fw-bold\" style={{ fontSize: '14px' }}>\r\n                      {data?.pic_active.organization_name}\r\n                    </span>\r\n                    {/* {data?.category === 'business' && (\r\n                      <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block fw-bold\">\r\n                        <div className=\"d-flex justify-content-center gap-1 align-items-center\">\r\n                          <MaterialIcon icon=\"play_circle_outline\" style={{ fontSize: '12px' }} />\r\n                          {data?.current_stage??.phase}\r\n                        </div>\r\n                      </span>\r\n                    )} */}\r\n                  </div>\r\n                  <img src={user1} className=\"rounded-circle\" alt=\"avatar\" width=\"35\" height=\"35\" />\r\n                  {auth?.user.first_name === data?.created_by ? (\r\n                    <div className=\"action-table\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn d-flex\"\r\n                        onClick={() => setActionMenu(true)}\r\n                      >\r\n                        <MaterialIcon icon=\"more_vert\" />\r\n                      </button>\r\n                      {actionMenu && (\r\n                        <>\r\n                          <div className=\"action-overlay\" onClick={() => setActionMenu(false)} />\r\n                          <div className=\"action-options\">\r\n                            <Link type=\"button\" className=\"text-muted\" onClick={handleUpdate}>\r\n                              <MaterialIcon icon=\"update\" />\r\n                              Update\r\n                            </Link>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"text-muted fw-bold\"\r\n                              onClick={handleDelete}\r\n                            >\r\n                              <MaterialIcon icon=\"delete\" />\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n                <EditProjectModal {...{ modal, setModal, toggle, data, refetch }} />\r\n                <Modal isOpen={modal2} toggle={toggle2.bind(null)} centered>\r\n                  <ModalHeader toggle={toggle2.bind(null)}>Confirmation</ModalHeader>\r\n                  <ModalBody>\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                      <h4>{data?.project_name}</h4>\r\n                      Are you sure you want to delete this project?\r\n                    </div>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"danger\" size=\"sm\" onClick={deleteProject} disabled={isDeleting}>\r\n                      {isDeleting ? 'Deleting..' : 'Yes'}\r\n                    </Button>\r\n                    <Button color=\"secondary\" size=\"sm\" outline onClick={toggle2.bind(null)}>\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n      <Col lg=\"12\">\r\n        <Alert color=\"primary\" className=\"rounded-3\" style={{ fontSize: '14px' }}>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div>\r\n              <span>Ketentuan task terbaru, </span>\r\n              <Link\r\n                to=\"https://drive.google.com/file/d/1So2xTY9FZA8GgWkvIO7zzo8LltyloljZ/view?usp=sharing\"\r\n                target=\"blank\"\r\n                style={{ textDecoration: 'none' }}\r\n              >\r\n                Baca selengkapnya\r\n              </Link>\r\n            </div>\r\n            <MaterialIcon icon=\"info\" />\r\n          </div>\r\n        </Alert>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nProjectNav.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setNavActive: PropTypes.func,\r\n  totalReview: PropTypes.number,\r\n  totalBastReview: PropTypes.number,\r\n};\r\n\r\nexport default ProjectNav;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  task: ['satu', 'dua'],\r\n};\r\n\r\nexport const TaskContext = createContext(INITIAL_STATE);\r\n\r\nconst TaskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TASK':\r\n      return {\r\n        task: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TaskContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(TaskReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        task: state.task,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nTaskContextProvider.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport ProjectDetailTab from './ProjectDetailTab';\r\nimport './ProjectDetail.scss';\r\nimport ProjectNav from './ProjectNav';\r\nimport { TaskContextProvider } from '../../context/TaskContext';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst ProjectDetail = () => {\r\n  const { auth } = useAuth();\r\n  const { roles } = auth?.user;\r\n  const [navActive, setNavActive] = useState(2);\r\n  const [totalReview, setTotalReview] = useState(0);\r\n  const [totalBastReview, setTotalBastReview] = useState(0);\r\n  // const [isOwner, setIsOwner] = useState();\r\n\r\n  useEffect(() => {\r\n    if (roles.includes('Director')) {\r\n      setNavActive(1);\r\n    }\r\n  }, [roles]);\r\n\r\n  // const { data } = useQuery({\r\n  //   queryKey: ['employe'],\r\n  //   queryFn: () =>\r\n  //     api.get(`api/employe/${auth?.user.employe_id}`).then((res) => {\r\n  //       setIsOwner()\r\n  //       return res.data.data;\r\n  //     }),\r\n  // });\r\n\r\n  // console.log(data);\r\n\r\n  return (\r\n    <TaskContextProvider>\r\n      <>\r\n        <ProjectNav {...{ navActive, setNavActive, totalReview, totalBastReview }} />\r\n        <ProjectDetailTab {...{ navActive, setTotalReview, setTotalBastReview, roles }} />\r\n      </>\r\n    </TaskContextProvider>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n","const IndoDate = (d) => {\r\n  const date = new Date(d);\r\n  //   const hari = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'];\r\n  const bulan = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'Mei',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Des',\r\n  ];\r\n\r\n  return `${date.getDate()} ${bulan[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\n\r\nexport default IndoDate;\r\n","const isExpired = (val) => {\r\n  const today = new Date();\r\n  const end = new Date(val);\r\n  const result = (end - today) / (1000 * 60 * 60 * 24);\r\n  return result.toFixed() < 1;\r\n};\r\n\r\nexport default isExpired;\r\n","const rupiah = (number) => {\r\n  return new Intl.NumberFormat('id-ID', {\r\n    style: 'currency',\r\n    currency: 'IDR',\r\n  }).format(number);\r\n};\r\n\r\nexport default rupiah;\r\n","var _excluded = [\"className\", \"cssModule\", \"tag\", \"type\", \"size\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Dropdown from './Dropdown';\nimport { InputGroupContext } from './InputGroupContext';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Sets size of InputGroup */\n  size: PropTypes.string,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  type: PropTypes.string\n};\nfunction InputGroup(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    type = props.type,\n    size = props.size,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\".concat(size) : null), cssModule);\n  if (props.type === 'dropdown') {\n    return /*#__PURE__*/React.createElement(Dropdown, _extends({}, attributes, {\n      className: classes\n    }));\n  }\n  return /*#__PURE__*/React.createElement(InputGroupContext.Provider, {\n    value: {\n      insideInputGroup: true\n    }\n  }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  })));\n}\nInputGroup.propTypes = propTypes;\nexport default InputGroup;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction InputGroupText(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'span' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nInputGroupText.propTypes = propTypes;\nexport default InputGroupText;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction ModalFooter(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nModalFooter.propTypes = propTypes;\nexport default ModalFooter;"],"names":["_ref","data","color","_jsx","className","children","_jsxs","viewBox","concat","d","strokeDasharray","x","y","style","fontSize","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","textAlign","text","margin","image","marginVertical","marginHorizontal","width","height","header","marginBottom","fontWeight","pageNumber","position","bottom","left","right","printAt","table","display","borderStyle","borderWidth","borderRightWidth","borderBottomWidth","tableRow","flexDirection","tableCol","borderLeftWidth","borderTopWidth","tableCell","marginTop","marginLeft","marginRight","today","currentDate","Date","toDateString","toLocaleString","split","projectTitle","Document","Page","backgroundColor","Text","fixed","project_name","partner","division","phase","schema","View","map","item","i","_item$pics","_item$level_","Fragment","task_title","status","end_date","pics","p","first_name","id","level_2","st","_st$pics","task_id","render","_ref2","totalPages","_excluded","_extends","Object","assign","bind","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","propTypes","animated","PropTypes","bar","barAriaLabelledBy","barAriaValueText","barClassName","barStyle","cssModule","max","min","multi","striped","tag","tagPropType","Progress","props","_props$value","_props$min","_props$max","_props$tag","Tag","_props$style","_props$barStyle","attributes","percent","toNumber","progressClasses","mapToCssModules","classNames","progressBarProps","role","React","animatedComponents","makeAnimated","remaininDays","endDate","todayBad","day","month","year","todayMerge","getTime","OverviewTab","_data$current_stage2","_data$current_stage3","_data$current_stage4","_data$current_stage5","_data$pic_active","_data$current_stage6","auth","useAuth","projectId","useParams","history","setHistory","useState","modal","setModal","newPic","setNewPic","listEmployee","setListEmploye","loading","setLoading","bst","setBst","activePhase","setActivePhase","undefined","selectedSchema","setSelectedSchema","isBusiness","setIsBusiness","partnerOptions","setPartnerOptions","selectedPartner","setSelectedPartner","progress","setProgress","taskByStatus","setTaskByStatus","todo","inprogress","underReview","done","api","useAxios","toggle","isLoading","error","refetch","useQuery","queryKey","queryFn","get","then","res","useEffect","_data$task_by_active_","_data$task_by_active_2","_data$task_by_active_3","_data$task_by_active_4","_data$current_stage","todofFiltered","task_by_active_user","task","parseInt","inProgressfFiltered","doneFiltered","underReviewFiltered","current_stage","phase_id","category","async","post","ids","_res$data$data$","catch","err","console","log","fetchProgress","fetsHistory","fetchEmployees","allTaskPermission","fetchPartnerOptions","_Fragment","Col","lg","Card","CardBody","Row","CardTitle","desc","goals","level_desc","base_description","trim","substring","IndoDate","start_date","borderRadius","src","user1","alt","pic_active","rupiah","estimated_cost","estimated_income","h","_auth$user","organization_name","history_desc","user","roles","find","includes","Link","to","organization_id","textDecoration","active","newDate","created_at","history_id","img","TooltipHover","toString","toFixed","MaterialIcon","icon","employe_id","Button","type","disabled","outline","onClick","Modal","isOpen","size","fade","centered","ModalHeader","onSubmit","e","preventDefault","project_id","new_pic","file","headers","alert","ModalBody","FormGroup","Label","Input","name","defaultValue","for","onChange","Select","components","options","choice","htmlFor","files","ModalFooter","Spinner","setNewTaskOpen","setAddSubtaskOpen","taskId","setTask","assignedEmployees","setAssignedEmployees","navigate","useNavigate","label","handleChange","prev","closeForm","task_pic","task_parent","arrayId","em","encType","placeholder","required","rows","assigneModal","isMulti","itemValue","setIsAddingItem","setShowAddSub","selectedActivityId","setSelectedActivityId","setItemValue","val","autoFocus","_Object$keys","dataSub","sub","patch","handleAddItem","addTargetAllowedRoles","addActivityAllowedRoles","addSubActivityAllowedRoles","_auth$user2","directSupervisor","isMemberActive","addSubtaskOpen","updating","setUpdating","taskIdActive","setTaskIdActive","setStatus","showAddSub","isAddingItem","selectedParentId","setSelectedParentId","selectedSubId","setSelectedSubId","isChecking","setIsChecking","isDeletingSub","setIsDeletingSub","idTaskParams","setIdTaskParams","isDuplicating","setIsDuplicating","levelTaskClicked","setLevelTaskClicked","userRoles","userId","openPopup","selectedTask","handleTaskStatus","taskStatus","put","response","duplicateFn","tid","setTimeout","menuOptions","queryParams","URLSearchParams","window","location","search","params","objDiv","document","getElementById","scrollIntoView","td","_td$level_","_td$pics","_td$pics2","Badge","task_progress","ActionMenu","action","comments","TaskForm","l2","_l2$level_","CircularPercentage","level_3","l3","_JSON$parse","JSON","parse","picIds","index","handleShowAddSub","TaskFormAddSub","checkedId","updateArr","handleCheck","selectedId","handleDeleteSub","isExpired","pic","idx","TaskPopup","newTaskAllowedRoles","isRefetching","newTaskOpen","block","BoardTask","removeDuplicates","arr","findIndex","BoardTab","todos","setTodos","inProgress","setInProgress","Done","setDone","setDirectSupervisor","setIsMemberActive","is_member_active","direct_supervisor","taska","DoneFiltered","BoardToDo","BoardInProgress","BoardDone","MemberTab","totalTask","setTotalTask","count_task","RoundedTable","overflow","m","position_name","row","selectedCount","FileTab","_sortFileByDate","Table","hover","zIndex","sort","a","b","reverse","f","process","file_name","employee","file_id","colSpan","setTotalReview","mode","setMode","setTaskId","setComments","employeId","setEmployeId","listReview","setListReview","handleForm","modeRes","employe","_IndoDate","_IndoDate2","send_date","task_desc","approval_id","Form","note","HandoverTab","newStage","setNewStage","from_division","to_division","old_pic","message","md","level2Progress","level3","sum","total","level1Progress","level2","ActivityTab","taskIdSelected","setTaskIdSelected","addingFavorite","setAddingFavorite","isDirector","setIsDirector","setProjectTitle","filterSearch","setFilterSearch","useLocation","project","handleFavorite","favoriteAllowedRoles","reportTaskAllowedRoles","anchorEl","setAnchorEl","open","Boolean","sm","bsSize","filterByTitle","toLowerCase","handleSearch","variant","event","currentTarget","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","sx","PDFDownloadLink","PDFFile","fileName","project_number","minWidth","ts","_ts$level_","_level1Progress","_ts$pics","_ts$pics2","_ts$level_2","_ts$level_3","cursor","_pic$id","isFavorite","si","_st$level_","_level2Progress","_st$pics2","_st$level_2","_st$level_3","_pic$id2","sst","ssi","_sst$task_progress","_sst$pics","_sst$pics2","_pic$id3","align","setTotalBastReview","oldPic","setOldPic","notifTo","setNotifTo","reviewBy","setReviewBy","oldPicP","notifToId","byEmploye","old_pic_division","new_pic_division","old_pic_id","review_by","new_pic_id","notif_to","navActive","ReviewTab","ReviewBastTab","_projectData$current_2","_projectData$current_3","_options$activity_lev","_projectData$current_4","_options$activity_bas","_projectData$base_id","projectData","setProjectData","dataUpdate","setDataUpdate","setOptions","setPartner","anotherBaseId","setAnotherBaseId","isSavingBaseId","setIsSavingBaseId","newBaseId","setNewBaseId","businessPlan","setBusinessPlan","defaultPartner","setDefaultPartner","defaultBusinessPlan","setDefaultBusinessPlan","otherPartner","setOtherPartner","base_id","level_id","business_id","partner_id","business_desc","partner_name","fetchBusinessOptions","unshift","_projectData$current_","_data$current_stage7","_Object$keys2","stage_id","activity_level","al","InputGroup","InputGroupText","activity_name","textOverflow","activity_base","ab","business_plan","allowedRolesForReview","allowedRolesForBastReview","_auth$user3","_auth$user4","_auth$user5","_auth$user6","_auth$user7","_auth$user8","setNavActive","totalReview","totalBastReview","currentTotalReview","setCurrentTotalReview","currentTotalBastReview","setCurrentTotalBastReview","actionMenu","setActionMenu","modal2","setModal2","isDeleting","setIsDeleting","toggle2","queryTo","fetchTotalReview","fetchTotalBastReview","BoardAllowedRoles","MembersAllowedRoles","ActivitiesAllowedRoles","FilesAllowedRoles","BASTReviewAllowedRoles","ReviewTaskAllowedRoles","HandoverAllowedRoles","created_by","handleUpdate","handleDelete","EditProjectModal","delete","Alert","INITIAL_STATE","TaskContext","createContext","TaskReducer","state","payload","TaskContextProvider","dispatch","useReducer","Provider","ProjectDetail","ProjectNav","ProjectDetailTab","date","getDate","getMonth","getFullYear","number","Intl","NumberFormat","currency","format","classes","Dropdown","InputGroupContext","insideInputGroup"],"sourceRoot":""}