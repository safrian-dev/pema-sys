{"version":3,"file":"static/js/883.bf3d8e24.chunk.js","mappings":"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","sources":["components/atoms/Toast.js","components/tabmui/TabMui.js","pages/vendor/checks/TabGeneral.js","components/fileview/FileView.js","pages/vendor/checks/TabOfficial.js","pages/vendor/checks/TabDocument.js","pages/vendor/checks/TabPortfolio.js","pages/vendor/checks/TabBusinessField.js","pages/vendor/checks/DocumentCheck.js","../node_modules/reactstrap/esm/ModalFooter.js","../node_modules/reactstrap/esm/Table.js","../node_modules/@tanstack/react-query/src/useQuery.ts","../node_modules/@tanstack/react-query/src/useBaseQuery.ts"],"sourcesContent":["import React from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst notify = (type, msg) =>\r\n  type === 'success'\r\n    ? toast.success(msg)\r\n    : type === 'create'\r\n    ? toast(msg, {\r\n        icon: '🤗',\r\n      })\r\n    : type === 'start'\r\n    ? toast('Lets get started, cheer up!', {\r\n        icon: '💪',\r\n      })\r\n    : type === 'done'\r\n    ? toast('Horeee, task done!', {\r\n        icon: '👏',\r\n      })\r\n    : toast.error(msg);\r\n\r\nexport const Toast = () => {\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        className: '',\r\n        style: {\r\n          //   border: '1px solid #713200',\r\n          //   padding: '16px',\r\n          //   color: '#713200',\r\n          //   width: '800px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const alert = (type, msg) => {\r\n  notify(type, msg);\r\n};\r\n","import Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Badge from '@mui/material/Badge';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport { alert } from '../atoms/Toast';\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\nconst TabMui = ({ activeTab, setActiveTab, items, panels, children }) => {\r\n  const { id } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [comment, setComment] = useState();\r\n  const [isApproving, setIsApproving] = useState(false);\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  const handleActive = (event, val) => {\r\n    setActiveTab(val);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  const handleComment = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleRevisi = async () => {\r\n    setIsApproving(true);\r\n    await api\r\n      .post(`dapi/vendor/verifikasi/${id}`, { status: 'revisi', komentar: comment })\r\n      .then(() => {\r\n        alert('success', `Informasi revisi telah dikirim`);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Gagal mengirim data');\r\n      });\r\n    setModal(false);\r\n    setIsApproving(false);\r\n  };\r\n\r\n  return (\r\n    <TabContext value={activeTab}>\r\n      <Card className=\"mb-1 rounded-3 overflow-hidden\" style={{ paddingRight: '7px' }}>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <Col md=\"10\">\r\n            <TabList\r\n              aria-label=\"full width tabs example\"\r\n              variant=\"fullWidth\"\r\n              onChange={handleActive}\r\n            >\r\n              {items?.map((item) => (\r\n                <Tab\r\n                  key={item.id}\r\n                  label={\r\n                    <Badge\r\n                      badgeContent={0}\r\n                      anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                      }}\r\n                      color=\"primary\"\r\n                      style={{ textTransform: 'capitalize' }}\r\n                    >\r\n                      <strong>{item.title}</strong> &nbsp;&nbsp;\r\n                    </Badge>\r\n                  }\r\n                  value={item.id}\r\n                />\r\n              ))}\r\n            </TabList>\r\n          </Col>\r\n          <Col md=\"1\" className=\"d-flex justify-content-end\">\r\n            <Button type=\"button\" color=\"warning\" outline onClick={toggle.bind(null)}>\r\n              Revisi\r\n            </Button>\r\n            <Modal isOpen={modal} toggle={toggle.bind(null)} centered>\r\n              <ModalHeader toggle={toggle.bind(null)}>Revisi</ModalHeader>\r\n              <ModalBody>\r\n                <div className=\"d-flex flex-column \">\r\n                  <Label htmlFor=\"comment\">Komentar</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    id=\"comment\"\r\n                    rows=\"10\"\r\n                    name=\"comment\"\r\n                    onChange={(e) => handleComment(e)}\r\n                  />\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    toggle.bind(null);\r\n                    handleRevisi();\r\n                  }}\r\n                >\r\n                  {isApproving ? (\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <Spinner size=\"sm\" />\r\n                      Mengirim..\r\n                    </div>\r\n                  ) : (\r\n                    'Kirim'\r\n                  )}\r\n                </Button>\r\n                <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Col>\r\n        </div>\r\n      </Card>\r\n      {panels?.map((panel) => (\r\n        <TabPanel key={panel.id} value={panel.id} className=\"ps-0 pe-0\">\r\n          <Card>\r\n            <CardBody>{children}</CardBody>\r\n          </Card>\r\n        </TabPanel>\r\n      ))}\r\n    </TabContext>\r\n  );\r\n};\r\n\r\nTabMui.propTypes = {\r\n  activeTab: PropTypes.string,\r\n  setActiveTab: PropTypes.func,\r\n  items: PropTypes.array,\r\n  panels: PropTypes.array,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default TabMui;\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\nimport useAxios from '../../../hooks/useAxios';\r\n\r\nconst TabGeneral = ({ companyId }) => {\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['general-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-data-umum`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return isLoading ? (\r\n    'Loading..'\r\n  ) : error ? (\r\n    'Something went wrong.'\r\n  ) : (\r\n    <table className=\"w-100\">\r\n      <tbody>\r\n        <tr>\r\n          <td width=\"300\">Nama Perusahaan</td>\r\n          <td className=\"fw-bold\">{data.nama_perusahaan}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Unique ID</td>\r\n          <td className=\"fw-bold\">{data.nomor_registrasi}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Tipe Penyedia</td>\r\n          <td className=\"fw-bold\">{data.tipe}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Bentuk Perusahaan</td>\r\n          <td className=\"fw-bold\">{data.bentuk_usaha}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Email Perusahaan</td>\r\n          <td className=\"fw-bold\">{data.email}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">NPWP</td>\r\n          <td className=\"fw-bold\">{data.no_npwp}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">File NPWP</td>\r\n          <td className=\"fw-bold\">\r\n            <Button type=\"button\" size=\"sm\" color=\"light\">\r\n              Preview file NPWP\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Bidang Usaha</td>\r\n          <td className=\"fw-bold\"> - </td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Kontak</td>\r\n          <td className=\"fw-bold\">{data.hp}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Alamat</td>\r\n          <td className=\"fw-bold\">{data.alamat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">Provinsi</td>\r\n          <td className=\"fw-bold\">{data.provinsi}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"300\">File PVD</td>\r\n          <td className=\"fw-bold\">\r\n            <Button type=\"button\" size=\"sm\" color=\"light\">\r\n              Preview file PVD\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTabGeneral.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabGeneral;\r\n","import React from 'react';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FileView = ({ title, filename, mode, action }) => {\r\n  return (\r\n    <Row className=\"align-items-center mb-4\">\r\n      <span>{title}</span>\r\n      <Col sm=\"12\" lg=\"12\">\r\n        <div className=\"d-flex rounded-2 border align-items-center justify-content-between overflow-hidden\">\r\n          <div className=\"h-100 d-flex p-3 bg-success\">\r\n            <MaterialIcon icon=\"text_snippet\" style={{ color: 'white' }} />\r\n          </div>\r\n          <div className=\"d-flex w-100 px-3\">\r\n            <span className=\"fw-bold\">{filename}</span>\r\n          </div>\r\n          <div className=\"d-flex p-2\">\r\n            {mode === 'preview' ? (\r\n              <Button type=\"button\" size=\"sm\" color=\"light\" className=\"d-flex\" onClick={action}>\r\n                Preview\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"button\" size=\"sm\" color=\"secondary\" className=\"d-flex\" onClick={action}>\r\n                Edit\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      {/* <Col sm=\"12\" lg=\"1\">\r\n        <Button type=\"button\" block outline>\r\n          Edit\r\n        </Button>\r\n      </Col> */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nFileView.propTypes = {\r\n  title: PropTypes.string,\r\n  filename: PropTypes.string,\r\n  mode: PropTypes.string,\r\n  action: PropTypes.func,\r\n};\r\n\r\nexport default FileView;\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport FileView from '../../../components/fileview/FileView';\r\n\r\nconst TabOfficial = ({ companyId }) => {\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['official-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-jajaran`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return isLoading ? (\r\n    'Loading..'\r\n  ) : error ? (\r\n    'Something went wrong.'\r\n  ) : (\r\n    <>\r\n      <Table hover bordered>\r\n        <thead>\r\n          <tr>\r\n            <th width=\"50\">#</th>\r\n            <th>Nama</th>\r\n            <th>Jabatan</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data?.jajaran.map((item, i) => (\r\n            <tr key={item.id}>\r\n              <td>{i + 1}</td>\r\n              <td>{item.nama}</td>\r\n              <td>{item.jabatan}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <FileView filename=\"File Struktur dan NPWP Jajaran Direksi/Komisaris Perusahaan\" />\r\n    </>\r\n  );\r\n};\r\n\r\nTabOfficial.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabOfficial;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Table } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../../hooks/useAxios';\r\nimport FileView from '../../../components/fileview/FileView';\r\n\r\nconst fileName = [\r\n  'File Company Profil',\r\n  'File KTP Pengurus',\r\n  'File SK Kemenkumham',\r\n  'File Fakta Integritas',\r\n  'File SPT 3 Tahun Terakhir',\r\n  'File Laporan Pajak 3 Bulan Terakhir',\r\n  'File Laporan Keuangan 3 Tahun Terakhir',\r\n  'File Rekening Koran 3 Bulan Terakhir',\r\n];\r\n\r\nconst TabDocument = ({ companyId }) => {\r\n  const [akta, setAkta] = useState();\r\n  const [izin, setIzin] = useState();\r\n  const [dokumen, setDokumen] = useState();\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchAkta() {\r\n      await api.get(`dapi/vendor/${companyId}/list-akta`).then((res) => setAkta(res.data.data));\r\n    }\r\n\r\n    async function fetchIzin() {\r\n      await api.get(`dapi/vendor/${companyId}/list-izin`).then((res) => setIzin(res.data.data));\r\n    }\r\n\r\n    async function fetchDokumen() {\r\n      await api\r\n        .get(`dapi/vendor/${companyId}/list-dokumen`)\r\n        .then((res) => setDokumen(res.data.data));\r\n    }\r\n\r\n    fetchAkta();\r\n    fetchIzin();\r\n    fetchDokumen();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <h4>Akta Perusahaan</h4>\r\n        {akta?.length > 0 ? (\r\n          <Table hover bordered>\r\n            <thead>\r\n              <tr>\r\n                <th width=\"50\">#</th>\r\n                <th>Nomor</th>\r\n                <th>Terbit</th>\r\n                <th>Notaris</th>\r\n                <th>Jenis</th>\r\n                <th>File</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {akta?.map((ak, i) => (\r\n                <tr key={ak.id_akta}>\r\n                  <td>{i + 1}</td>\r\n                  <td>{ak.no_akta}</td>\r\n                  <td>{ak.tgl_terbit}</td>\r\n                  <td>{ak.nama_notaris}</td>\r\n                  <td>{ak.jenis}</td>\r\n                  <td>\r\n                    <Button type=\"button\" size=\"sm\" color=\"light\">\r\n                      Preview\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          'Loading..'\r\n        )}\r\n      </Col>\r\n      <Col className=\"mt-4\">\r\n        <h4>Izin Perusahaan</h4>\r\n        {izin?.length > 0 ? (\r\n          <Table hover bordered>\r\n            <thead>\r\n              <tr>\r\n                <th width=\"50\">#</th>\r\n                <th>Nomor</th>\r\n                <th>Izin</th>\r\n                <th>Terbit</th>\r\n                <th>Berakhir</th>\r\n                <th>File</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {izin?.map((iz, i) => (\r\n                <tr key={iz.id_izin}>\r\n                  <td>{i + 1}</td>\r\n                  <td>{iz.nomor}</td>\r\n                  <td>{iz.nama_izin}</td>\r\n                  <td>{iz.tgl_terbit}</td>\r\n                  <td>{iz.tgl_berakhir}</td>\r\n                  <td>\r\n                    <Button type=\"button\" size=\"sm\" color=\"light\">\r\n                      Preview\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          'Loading..'\r\n        )}\r\n      </Col>\r\n      {dokumen?.length > 0\r\n        ? dokumen.map((dok, i) => (\r\n            <Col sm=\"12\" md=\"8\" key={dok.name} className=\"mt-4\">\r\n              <FileView filename={fileName[i]} />\r\n            </Col>\r\n          ))\r\n        : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nTabDocument.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabDocument;\r\n","import React from 'react';\r\nimport { Button, Table } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport useAxios from '../../../hooks/useAxios';\r\n\r\nconst TabPortfolio = ({ companyId }) => {\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['portofolio-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-portofolio`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return isLoading ? (\r\n    'Loading..'\r\n  ) : error ? (\r\n    'Something went wrong.'\r\n  ) : data?.length > 0 ? (\r\n    <Table hover bordered>\r\n      <thead>\r\n        <tr>\r\n          <th width=\"50\">#</th>\r\n          <th>Nama Projek</th>\r\n          <th>Tahun Mulai</th>\r\n          <th>Tahun Selesai</th>\r\n          <th>Durasi</th>\r\n          <th>Owner</th>\r\n          <th>Nilai PO</th>\r\n          <th>SPK</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((pr, i) => (\r\n          <tr key={pr.id_porto}>\r\n            <td>{i + 1}</td>\r\n            <td>{pr.nama_project}</td>\r\n            <td>{pr.tahun_mulai}</td>\r\n            <td>{pr.tahun_selesai}</td>\r\n            <td>{pr.durasi}</td>\r\n            <td>{pr.owner}</td>\r\n            <td>{pr.nilai_po}</td>\r\n            <td>\r\n              <Button type=\"button\" size=\"sm\" color=\"light\">\r\n                Preview\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  ) : (\r\n    'Belum ada data.'\r\n  );\r\n};\r\n\r\nTabPortfolio.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabPortfolio;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Table } from 'reactstrap';\r\nimport useAxios from '../../../hooks/useAxios';\r\n\r\nconst TabBusinessField = ({ companyId }) => {\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['kbli-list'],\r\n    queryFn: () =>\r\n      api.get(`dapi/vendor/${companyId}/list-kbli`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return isLoading ? (\r\n    'Loading..'\r\n  ) : error ? (\r\n    'Something went wrong.'\r\n  ) : data?.length > 0 ? (\r\n    <Table hover bordered>\r\n      <thead>\r\n        <tr>\r\n          <th width=\"50\">#</th>\r\n          <th>NIB</th>\r\n          <th>Nama Bidang Usaha</th>\r\n          <th>Resiko</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data?.map((kb, i) => (\r\n          <tr key={kb.id_kbli}>\r\n            <td>{i + 1}</td>\r\n            <td>{kb.nomor_kbli}</td>\r\n            <td>{kb.nama_kbli}</td>\r\n            <td>{kb.resiko}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  ) : (\r\n    'Belum ada data.'\r\n  );\r\n};\r\n\r\nTabBusinessField.propTypes = {\r\n  companyId: PropTypes.string,\r\n};\r\n\r\nexport default TabBusinessField;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport TabMui from '../../../components/tabmui/TabMui';\r\nimport TabGeneral from './TabGeneral';\r\nimport TabOfficial from './TabOfficial';\r\nimport TabDocument from './TabDocument';\r\nimport TabPortfolio from './TabPortfolio';\r\nimport TabBusinessField from './TabBusinessField';\r\n\r\nconst tabItems = [\r\n  {\r\n    id: 1,\r\n    title: 'Data Umum',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Data Jajaran/Komisaris',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Dokumen Perusahaan',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Portofolio',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Bidang Usaha',\r\n  },\r\n];\r\nconst DocumentCheck = () => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <TabMui items={tabItems} panels={tabItems} {...{ activeTab, setActiveTab }}>\r\n      <>\r\n        {activeTab === 1 && <TabGeneral companyId={id} />}\r\n        {activeTab === 2 && <TabOfficial companyId={id} />}\r\n        {activeTab === 3 && <TabDocument companyId={id} />}\r\n        {activeTab === 4 && <TabPortfolio companyId={id} />}\r\n        {activeTab === 5 && <TabBusinessField companyId={id} />}\r\n      </>\r\n    </TabMui>\r\n  );\r\n};\r\n\r\nexport default DocumentCheck;\r\n","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction ModalFooter(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nModalFooter.propTypes = propTypes;\nexport default ModalFooter;","var _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Adds border to all sides of table */\n  bordered: PropTypes.bool,\n  /** Removes all borders */\n  borderless: PropTypes.bool,\n  /** Adds custom class name to component */\n  className: PropTypes.string,\n  /**  */\n  cssModule: PropTypes.object,\n  /** Makes the table dark */\n  dark: PropTypes.bool,\n  /** Enables a hover state on the rows within `<tbody>` */\n  hover: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n  /** Responsive tables allow tables to be scrolled horizontally with ease */\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  responsiveTag: tagPropType,\n  /** Make tables more compact by cutting cell padding in half when setting size as sm. */\n  size: PropTypes.string,\n  /** Adds zebra-striping to any table row within the `<tbody>` */\n  striped: PropTypes.bool,\n  /** Add custom tag to the component */\n  tag: tagPropType\n};\nfunction Table(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    size = props.size,\n    bordered = props.bordered,\n    borderless = props.borderless,\n    striped = props.striped,\n    dark = props.dark,\n    hover = props.hover,\n    responsive = props.responsive,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'table' : _props$tag,\n    _props$responsiveTag = props.responsiveTag,\n    ResponsiveTag = _props$responsiveTag === void 0 ? 'div' : _props$responsiveTag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\".concat(responsive), cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n  return table;\n}\nTable.propTypes = propTypes;\nexport default Table;","'use client'\nimport { QueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n","'use client'\nimport * as React from 'react'\n\nimport { notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, fetchOptimistic, shouldSuspend } from './suspense'\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange))\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n"],"names":["Toast","_jsx","Toaster","toastOptions","className","style","alert","type","msg","notify","toast","success","icon","error","_ref","activeTab","setActiveTab","items","panels","children","id","useParams","modal","setModal","useState","comment","setComment","isApproving","setIsApproving","toggle","api","useAxios","_jsxs","TabContext","value","Card","paddingRight","Col","md","TabList","variant","onChange","handleActive","event","val","map","item","Tab","label","Badge","badgeContent","anchorOrigin","vertical","horizontal","color","textTransform","title","Button","outline","onClick","bind","Modal","isOpen","centered","ModalHeader","ModalBody","Label","htmlFor","Input","rows","name","e","target","handleComment","ModalFooter","async","post","concat","status","komentar","then","catch","handleRevisi","Spinner","size","panel","TabPanel","CardBody","companyId","isLoading","data","useQuery","queryKey","queryFn","get","res","width","nama_perusahaan","nomor_registrasi","tipe","bentuk_usaha","email","no_npwp","hp","alamat","provinsi","filename","mode","action","Row","sm","lg","MaterialIcon","_Fragment","Table","hover","bordered","jajaran","i","nama","jabatan","FileView","fileName","akta","setAkta","izin","setIzin","dokumen","setDokumen","useEffect","fetchAkta","fetchIzin","fetchDokumen","length","ak","no_akta","tgl_terbit","nama_notaris","jenis","id_akta","iz","nomor","nama_izin","tgl_berakhir","id_izin","dok","pr","nama_project","tahun_mulai","tahun_selesai","durasi","owner","nilai_po","id_porto","kb","nomor_kbli","nama_kbli","resiko","id_kbli","tabItems","DocumentCheck","TabMui","TabGeneral","TabOfficial","TabDocument","TabPortfolio","TabBusinessField","_excluded","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","cssModule","tag","tagPropType","props","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","React","borderless","dark","innerRef","responsive","responsiveTag","striped","_props$responsiveTag","ResponsiveTag","table","ref","responsiveClassName","arg1","arg2","arg3","options","Observer","ensurePreventErrorBoundaryRetry","defaultedOptions","errorResetBoundary","observer","queryClient","result","getOptimisticResult","useSyncExternalStore","onStoreChange","unsubscribe","isRestoring","subscribe","notifyManager","batchCalls","updateResult","getCurrentResult","setOptions","listeners","fetchOptimistic","getHasError","notifyOnChangeProps","trackResult","useBaseQuery","QueryObserver"],"sourceRoot":""}