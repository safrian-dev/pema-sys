{"version":3,"file":"static/js/45.fbd538b9.chunk.js","mappings":"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","sources":["components/atoms/Toast.js","components/atoms/circularPercentage/CircularPercentage.js","utils/IndoDate.js","views/dashboards/TaskList.js","views/dashboards/ProjectList.js","views/dashboards/TopCards.js","views/dashboards/Director.js","views/dashboards/Dashboard2.js","views/dashboards/TopCardsData.js","../node_modules/reactstrap/esm/CardSubtitle.js","../node_modules/reactstrap/esm/CardTitle.js","../node_modules/@tanstack/react-query/src/useQuery.ts","../node_modules/@tanstack/react-query/src/useBaseQuery.ts"],"sourcesContent":["import React from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst notify = (type, msg) =>\r\n  type === 'success'\r\n    ? toast.success(msg)\r\n    : type === 'create'\r\n    ? toast(msg, {\r\n        icon: '🤗',\r\n      })\r\n    : type === 'start'\r\n    ? toast('Lets get started, cheer up!', {\r\n        icon: '💪',\r\n      })\r\n    : type === 'done'\r\n    ? toast('Horeee, task done!', {\r\n        icon: '👏',\r\n      })\r\n    : toast.error(msg);\r\n\r\nexport const Toast = () => {\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        className: '',\r\n        style: {\r\n          //   border: '1px solid #713200',\r\n          //   padding: '16px',\r\n          //   color: '#713200',\r\n          //   width: '800px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const alert = (type, msg) => {\r\n  notify(type, msg);\r\n};\r\n","import React from 'react';\r\nimport './CircularPercentage.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CircularPercentage = ({ data, color }) => {\r\n  return (\r\n    <div className=\"flex-wrapper\">\r\n      <div className=\"single-chart\">\r\n        <svg\r\n          viewBox=\"0 0 36 36\"\r\n          className={`circular-chart ${data === 100 ? 'green' : data !== 100 ? 'blue' : color}`}\r\n        >\r\n          <path\r\n            className=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            className=\"circle\"\r\n            strokeDasharray={`${data}, 100`}\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          {data === 100 ? (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\" style={{ fontSize: '14px' }}>\r\n              ✔\r\n            </text>\r\n          ) : (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\">\r\n              {data}%\r\n            </text>\r\n          )}\r\n        </svg>\r\n      </div>\r\n\r\n      {/* <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart green\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"60, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            60%\r\n          </text>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart blue\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"90, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            90%\r\n          </text>\r\n        </svg>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nCircularPercentage.propTypes = {\r\n  data: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default CircularPercentage;\r\n","const IndoDate = (d) => {\r\n  const date = new Date(d);\r\n  //   const hari = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'];\r\n  const bulan = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'Mei',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Des',\r\n  ];\r\n\r\n  return `${date.getDate()} ${bulan[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\n\r\nexport default IndoDate;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardBody, CardTitle, Spinner } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst TaskList = () => {\r\n  const { auth } = useAuth();\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['tasklist'],\r\n    queryFn: () =>\r\n      // api.get(`api/task/${auth?.user.employe_id}/recent/activity`).then((res) => {\r\n      api\r\n        .get(\r\n          `${\r\n            auth?.user?.roles.includes('Director')\r\n              ? `api/task/${auth?.user.employe_id}/favorite/list`\r\n              : `api/task/${auth?.user.employe_id}/recent/activity`\r\n          }`,\r\n        )\r\n        .then((res) => {\r\n          return res.data.data;\r\n        }),\r\n  });\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert('error', 'Bad request.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"d-flex flex-column gap-1\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <CardTitle tag=\"h4\">\r\n            {auth?.user?.roles.includes('Director') ? 'Marked' : 'Recent'} Tasks\r\n          </CardTitle>\r\n          <Link to=\"projects\" style={{ textDecoration: 'none' }}>\r\n            See all\r\n          </Link>\r\n        </div>\r\n        <div className=\"d-flex flex-column gap-2 justify-content-center\">\r\n          {isLoading ? (\r\n            'Loading...'\r\n          ) : error ? (\r\n            'Something went wrong.'\r\n          ) : data?.length > 0 ? (\r\n            data.map((t, i) => (\r\n              <div key={t.task_id} className=\"d-flex justify-content-between gap-1\">\r\n                <div\r\n                  className={`d-flex col-sm-${\r\n                    auth?.user.roles.includes('Director') ? '11' : '12'\r\n                  } justify-content-between align-items-center p-2 rounded-3 link-item-bordered bg-white`}\r\n                  style={{ border: '1px dashed #21C1D6' }}\r\n                >\r\n                  <Link\r\n                    className=\"d-flex gap-2 col-md-10 align-items-center text-muted\"\r\n                    style={{ fontSize: '13px', textDecoration: 'none' }}\r\n                    to={`projects/details/${t.project_id}`}\r\n                  >\r\n                    <span>{i + 1}</span>\r\n                    <div className=\"d-flex flex-column col-md-12\">\r\n                      <div className=\"d-flex\">\r\n                        <span className=\"text-dark\">\r\n                          {t?.task_title.trim().length > 35\r\n                            ? `${t?.task_title?.substring(0, 35)}...`\r\n                            : t?.task_title}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex align-items-end gap-3\">\r\n                        <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block\">\r\n                          {t.status === 0\r\n                            ? 'To do'\r\n                            : t.status === 1\r\n                            ? 'In progress'\r\n                            : t.status === 2\r\n                            ? 'Review'\r\n                            : t.status === 3\r\n                            ? 'Approved'\r\n                            : 'Revision'}\r\n                        </span>\r\n                        <span style={{ fontSize: '12px' }} className=\"text-muted\">\r\n                          Deadline: {t?.end_date}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                  <div>\r\n                    <div className=\"d-flex gap-1 justify-content-center align-items-center\">\r\n                      <div className=\"circular-progress\">\r\n                        <CircularPercentage\r\n                          data={parseInt(t.task_progress.toFixed(), 10)}\r\n                          color=\"red\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {auth?.user.roles.includes('Director') &&\r\n                  (addingFavorite && taskIdSelected === t?.task_id ? (\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <Spinner size=\"sm\" color=\"warning\" />\r\n                    </div>\r\n                  ) : (\r\n                    <abbr\r\n                      title=\"Mark task\"\r\n                      style={{ textDecoration: 'none' }}\r\n                      className=\"d-flex align-items-center\"\r\n                    >\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"fav-btn\"\r\n                        onClick={() => handleFavorite(t?.task_id)}\r\n                      >\r\n                        <MaterialIcon icon=\"star\" className=\"is_favorite\" />\r\n                      </button>\r\n                    </abbr>\r\n                  ))}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <p className=\"text-muted\">No data yet.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody, CardTitle, Col, Row } from 'reactstrap';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport IndoDate from '../../utils/IndoDate';\r\n\r\nconst ProjectList = () => {\r\n  const { auth } = useAuth();\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['projectsdash'],\r\n    queryFn: () =>\r\n      api\r\n        .get(\r\n          `${\r\n            auth?.user?.roles.includes('Director')\r\n              ? 'api/project'\r\n              : `api/project/${auth?.user.employe_id}/list`\r\n          }`,\r\n        )\r\n        .then((res) => {\r\n          return res.data.data;\r\n        }),\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg=\"12\">\r\n        <Card className=\"\">\r\n          <CardBody className=\"d-flex flex-column gap-2\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <CardTitle tag=\"h4\">Projects</CardTitle>\r\n              <Link to=\"projects\" style={{ textDecoration: 'none' }}>\r\n                See all\r\n              </Link>\r\n            </div>\r\n            {isLoading ? (\r\n              'Loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                {data?.length > 0 ? (\r\n                  data?.map((p, i) => (\r\n                    <Link\r\n                      key={p.project_id}\r\n                      className=\"d-flex justify-content-between rounded-3 px-3 py-3 align-items-center link-item text-dark bg-light\"\r\n                      to={`projects/details/${p.project_id}`}\r\n                      style={{ textDecoration: 'none' }}\r\n                    >\r\n                      <div className=\"d-flex col-md-6 gap-3 align-items-center\">\r\n                        <span className=\"text-muted\">{i + 1}</span>\r\n                        <div className=\"d-flex flex-column\">\r\n                          <abbr title={p.project_name} style={{ textDecoration: 'none' }}>\r\n                            <span className=\"fw-bold\" style={{ fontSize: '14px' }}>\r\n                              {p.project_name.trim().length > 40\r\n                                ? `${p.project_name.substring(0, 42)}...`\r\n                                : p.project_name}\r\n                            </span>\r\n                            <div>\r\n                              <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block\">\r\n                                <small className=\"fw-bold\">{p.organization_name}</small>\r\n                              </span>\r\n                            </div>\r\n                          </abbr>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex flex-column\">\r\n                        <small className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                          Deadline{' '}\r\n                        </small>\r\n                        <small>{IndoDate(p.current_stage?.end_date)}</small>\r\n                      </div>\r\n                      <span\r\n                        className=\"badge text-info bg-light-info rounded-pill d-inline-block fw-bold\"\r\n                        style={{ textTransform: 'capitalize' }}\r\n                      >\r\n                        {p.category}\r\n                      </span>\r\n                      <div className=\"d-flex gap-1 justify-content-center align-items-center\">\r\n                        {/* <div className=\"d-flex flex-column\">\r\n                          <small>Progress</small>\r\n                        </div> */}\r\n                        <div className=\"circular-progress\">\r\n                          <CircularPercentage data={parseInt(p.total_progress.toFixed(), 10)} />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <img\r\n                          src={user1}\r\n                          className=\"rounded-circle\"\r\n                          alt=\"avatar\"\r\n                          width=\"45\"\r\n                          height=\"45\"\r\n                        />\r\n                      </div>\r\n                    </Link>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <p className=\"text-muted\">No data yet.</p>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {/* <Col lg=\"4\">\r\n          <Card>\r\n            <CardBody></CardBody>\r\n          </Card>\r\n        </Col> */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport { Row, Col } from 'reactstrap';\r\nimport TopCardsData from './TopCardsData';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst TopCards = () => {\r\n  const { auth } = useAuth();\r\n  const api = useAxios();\r\n\r\n  const { isLoading, data } = useQuery({\r\n    queryKey: ['totaldata'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${auth?.user.employe_id}/total-data`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"primary\"\r\n          icon=\"wallet2\"\r\n          title={data?.total_project}\r\n          subtitle=\"Total Project\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"info\"\r\n          icon=\"list-task\"\r\n          title={data?.total_task}\r\n          subtitle=\"Total Task\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"warning\"\r\n          icon=\"clock-history\"\r\n          title={data?.total_inprogress}\r\n          subtitle=\"Task In Progress\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"success\"\r\n          icon=\"check-circle\"\r\n          title={data?.total_done}\r\n          subtitle=\"Task Done\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TopCards;\r\n","import React from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport ProjectList from './ProjectList';\r\nimport TopCards from './TopCards';\r\nimport TaskList from './TaskList';\r\n\r\nconst Director = () => {\r\n  return (\r\n    <>\r\n      <TopCards />\r\n      <Row>\r\n        <Col lg=\"8\">\r\n          <ProjectList />\r\n        </Col>\r\n        <Col lg=\"4\">\r\n          <TaskList />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Director;\r\n","import { Col, Row } from 'reactstrap';\r\nimport TaskList from './TaskList';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport Director from './Director';\r\nimport ProjectList from './ProjectList';\r\nimport TopCards from './TopCards';\r\nimport './Dashboard.scss';\r\n// import Daily from './Daily';\r\n\r\nconst Dashboard2 = () => {\r\n  const { auth } = useAuth();\r\n\r\n  return auth.user.roles.includes('Director') ? (\r\n    <Director />\r\n  ) : (\r\n    <>\r\n      <TopCards />\r\n      <Row>\r\n        {/* <Col lg=\"4\">\r\n          <Project />\r\n          <Row>\r\n            <UserStatus />\r\n          </Row>\r\n        </Col> */}\r\n        {/* <Col lg=\"4\">\r\n          <Daily />\r\n        </Col> */}\r\n        <Col lg=\"8\">\r\n          <ProjectList />\r\n        </Col>\r\n        <Col lg=\"4\">\r\n          <TaskList />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard2;\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TopCardsData = ({ bg, icon, title, subtitle, loading }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"d-flex align-items-center\">\r\n          <span className={`circle-box md-box text-dark-white bg-${bg}`}>\r\n            <i className={`fs-2 bi bi-${icon}`} />\r\n          </span>\r\n          <div className=\"ms-3\">\r\n            <h2 className=\"mb-1 fw-normal\">{loading ? '...' : title}</h2>\r\n            <CardSubtitle className=\"fs-6 text-muted\">{subtitle}</CardSubtitle>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TopCardsData;\r\n\r\nTopCardsData.propTypes = {\r\n  bg: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  title: PropTypes.number,\r\n  subtitle: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n};\r\n","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardSubtitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardSubtitle.propTypes = propTypes;\nexport default CardSubtitle;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardTitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardTitle.propTypes = propTypes;\nexport default CardTitle;","'use client'\nimport { QueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n","'use client'\nimport * as React from 'react'\n\nimport { notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, fetchOptimistic, shouldSuspend } from './suspense'\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange))\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n"],"names":["Toast","_jsx","Toaster","toastOptions","className","style","alert","type","msg","notify","toast","success","icon","error","_ref","data","color","children","_jsxs","viewBox","concat","d","strokeDasharray","x","y","fontSize","date","Date","getDate","getMonth","getFullYear","TaskList","_auth$user2","auth","useAuth","taskIdSelected","setTaskIdSelected","useState","addingFavorite","setAddingFavorite","api","useAxios","isLoading","refetch","useQuery","queryKey","queryFn","_auth$user","get","user","roles","includes","employe_id","then","res","Card","CardBody","CardTitle","tag","Link","to","textDecoration","length","map","t","i","_t$task_title","border","project_id","task_title","trim","substring","status","end_date","CircularPercentage","parseInt","task_progress","toFixed","task_id","Spinner","size","title","onClick","async","taskId","post","message","catch","err","console","log","handleFavorite","MaterialIcon","ProjectList","Row","Col","lg","_Fragment","p","_p$current_stage","project_name","organization_name","IndoDate","current_stage","textTransform","category","total_progress","src","user1","alt","width","height","TopCards","sm","TopCardsData","bg","total_project","subtitle","loading","total_task","total_inprogress","total_done","Director","Dashboard2","CardSubtitle","_excluded","_extends","Object","assign","bind","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","cssModule","tagPropType","props","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","React","arg1","arg2","arg3","options","Observer","ensurePreventErrorBoundaryRetry","defaultedOptions","errorResetBoundary","observer","queryClient","result","getOptimisticResult","useSyncExternalStore","onStoreChange","unsubscribe","isRestoring","subscribe","notifyManager","batchCalls","updateResult","getCurrentResult","setOptions","listeners","fetchOptimistic","getHasError","notifyOnChangeProps","trackResult","useBaseQuery","QueryObserver"],"sourceRoot":""}