{"version":3,"file":"static/js/568.c73d4d00.chunk.js","mappings":"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","sources":["pages/projects/InprogressTaskList.js","pages/projects/PDFFile.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Badge, Button, Card, CardBody, CardTitle, Col, Input, Row, Spinner } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport TaskPopup from './TaskPopup';\r\nimport PDFFile from './PDFFile';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport './ProjectTable.scss';\r\nimport './ProjectDetail.scss';\r\n// import TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst InprogressTaskList = () => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [task, setTask] = useState(undefined);\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const [isDirector, setIsDirector] = useState(false);\r\n  const [projectTitle, setProjectTitle] = useState();\r\n  const [filterSearch, setFilterSearch] = useState();\r\n  const api = useAxios();\r\n\r\n  const { search } = useLocation();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['inprogresstasks'],\r\n    queryFn: () =>\r\n      api.get(`api/task/23/activities/all${search}`).then((res) => {\r\n        setProjectTitle(res.data.project);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFilterSearch(data);\r\n  }, [data]);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  const favoriteAllowedRoles = ['Director'];\r\n  const reportTaskAllowedRoles = ['Manager'];\r\n\r\n  useEffect(() => {\r\n    if (auth?.user.roles.find((role) => favoriteAllowedRoles.includes(role))) {\r\n      setIsDirector(true);\r\n    }\r\n  }, [auth]);\r\n\r\n  const handleSearch = (value) => {\r\n    const filterByTitle = data.filter((item) =>\r\n      item.task_title.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n\r\n    setFilterSearch(filterByTitle);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <Card className=\"rounded-3\">\r\n          <CardBody>\r\n            <CardTitle tag=\"h4\">Inprogress Tasks</CardTitle>\r\n            {isLoading ? (\r\n              'loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                <Col className=\"bg-light-secondary my-auto p-2 rounded-3\">\r\n                  <Row>\r\n                    <Col sm=\"12 mb-2\" md=\"6\">\r\n                      <div className=\"d-flex gap-2\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                          color=\"light\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <MaterialIcon icon=\"filter_list\" style={{ fontSize: '12px' }} />\r\n                          Sort\r\n                        </Button>\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                          color=\"light\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <MaterialIcon icon=\"tune\" style={{ fontSize: '12px' }} />\r\n                          Filters\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"6\">\r\n                      <div className=\"d-flex gap-3 col-md-6 w-100\">\r\n                        <div className=\"w-100 position-relative\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            className=\"rounded-3\"\r\n                            bsSize=\"md\"\r\n                            placeholder=\"Search task...\"\r\n                            onChange={(e) => handleSearch(e.target.value)}\r\n                          />\r\n                        </div>\r\n                        {auth?.user.roles.find((role) => reportTaskAllowedRoles.includes(role)) && (\r\n                          <PDFDownloadLink\r\n                            document={<PDFFile {...{ projectTitle, data }} />}\r\n                            fileName={`Task Report - ${projectTitle?.project_number} - ${projectTitle?.division}`}\r\n                            style={{ textDecoration: 'none' }}\r\n                          >\r\n                            {/* {({ loading }) =>\r\n                          loading ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light d-flex rounded-3\"\r\n                            >\r\n                              Loading...\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light-info text-info d-flex align-items-center gap-2 rounded-3\"\r\n                            >\r\n                              <MaterialIcon icon=\"picture_as_pdf\" style={{ fontSize: '12px' }} />\r\n                              Report\r\n                            </Button>\r\n                          )\r\n                        } */}\r\n                            <Button\r\n                              type=\"button\"\r\n                              className=\"btn btn-light-info text-info rounded-3 d-flex py-2\"\r\n                              // size=\"lg\"\r\n                            >\r\n                              <MaterialIcon icon=\"file_download\" style={{ fontSize: '18px' }} />\r\n                              {/* Report */}\r\n                            </Button>\r\n                          </PDFDownloadLink>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col sm=\"12 overflow-auto\">\r\n                  <h6 className=\"fw-bold mt-3\">List of tasks from {projectTitle?.division}</h6>\r\n                  <table className=\"rounded-corners\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th width=\"30\">#</th>\r\n                        <th>Task title</th>\r\n                        <th width=\"\">Status</th>\r\n                        <th>Progress</th>\r\n                        <th width=\"100\">PIC</th>\r\n                        {isDirector && <th width=\"50\"></th>}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filterSearch?.length > 0 ? (\r\n                        filterSearch?.map((ts, idx) => (\r\n                          <Fragment key={ts.task_id}>\r\n                            <tr>\r\n                              <td>{idx + 1}.</td>\r\n                              <td style={{ cursor: 'pointer' }} onClick={() => openPopup(ts)}>\r\n                                <span style={{ fontWeight: '600' }}>{ts.task_title}</span>\r\n                                <br></br>\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  {ts?.subtasks?.length} subtask\r\n                                </Badge>\r\n                                {'  '}\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                  {ts.comments}\r\n                                </Badge>\r\n                              </td>\r\n                              <td>\r\n                                {ts.status === 0 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    To Do\r\n                                  </Badge>\r\n                                ) : ts.status === 1 ? (\r\n                                  <Badge color=\"warning\">In Progress</Badge>\r\n                                ) : ts.status === 2 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    Under Review\r\n                                  </Badge>\r\n                                ) : ts.status === 3 ? (\r\n                                  <Badge color=\"success\">Approved</Badge>\r\n                                ) : (\r\n                                  <Badge color=\"danger\">Revision</Badge>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                                  {ts?.task_progress?.toFixed()}%\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"members\">\r\n                                  <div className=\"members-item\">\r\n                                    {ts?.pics?.map(\r\n                                      (pic, i) =>\r\n                                        i < 2 && (\r\n                                          <>\r\n                                            <img\r\n                                              id={`tooltip-${pic.id}`}\r\n                                              src={user1}\r\n                                              className=\"ava-pic rounded-circle\"\r\n                                              alt=\"avatar\"\r\n                                              width=\"35\"\r\n                                              height=\"35\"\r\n                                            />\r\n                                            <TooltipHover\r\n                                              title={pic.first_name}\r\n                                              id={pic.id?.toString()}\r\n                                            />\r\n                                          </>\r\n                                        ),\r\n                                    )}\r\n                                    {ts?.pics?.length > 2 && (\r\n                                      <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                        +{ts.pics.length - 2}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              {isDirector && (\r\n                                <td className=\"text-center\">\r\n                                  {addingFavorite && taskIdSelected === ts.task_id ? (\r\n                                    <Spinner size=\"sm\" color=\"warning\" />\r\n                                  ) : (\r\n                                    <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"fav-btn\"\r\n                                        onClick={() => handleFavorite(ts.task_id)}\r\n                                      >\r\n                                        <MaterialIcon\r\n                                          icon=\"star\"\r\n                                          className={`${ts.isFavorite && 'is_favorite'}`}\r\n                                        />\r\n                                      </button>\r\n                                    </abbr>\r\n                                  )}\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                            {ts.subtasks.length > 0 &&\r\n                              ts.subtasks.map((st) => (\r\n                                <tr key={st.task_id}>\r\n                                  <td></td>\r\n                                  <td onClick={() => openPopup(st)} style={{ cursor: 'pointer' }}>\r\n                                    {st.task_title}\r\n                                    <br></br>\r\n                                    <Badge color=\"light\" className=\"text-muted\">\r\n                                      <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                      {st.comments}\r\n                                    </Badge>\r\n                                  </td>\r\n\r\n                                  <td>\r\n                                    {/* {st.status === 0 ? (\r\n                                <Badge color=\"light\" className=\"text-dark\">\r\n                                  To Do\r\n                                </Badge>\r\n                              ) : st.status === 1 ? (\r\n                                <Badge color=\"warning\">In Progress</Badge>\r\n                              ) : st.status === 2 ? (\r\n                                <Badge color=\"light\" className=\"text-dark\">\r\n                                  Under Review\r\n                                </Badge>\r\n                              ) : st.status === 3 ? (\r\n                                <Badge color=\"success\">Approved</Badge>\r\n                              ) : (\r\n                                <Badge color=\"danger\">Revision</Badge>\r\n                              )} */}\r\n                                    -\r\n                                  </td>\r\n                                  <td>\r\n                                    <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                      {st?.task_progress?.toFixed()}%\r\n                                    </span>\r\n                                  </td>\r\n                                  <td>\r\n                                    <div className=\"members\">\r\n                                      <div className=\"members-item\">\r\n                                        {st?.pics?.map(\r\n                                          (pic, i) =>\r\n                                            i < 2 && (\r\n                                              <>\r\n                                                <img\r\n                                                  id={`tooltip-${pic.id}`}\r\n                                                  src={user1}\r\n                                                  className=\"ava-pic rounded-circle\"\r\n                                                  alt=\"avatar\"\r\n                                                  width=\"35\"\r\n                                                  height=\"35\"\r\n                                                />\r\n                                                <TooltipHover\r\n                                                  title={pic.first_name}\r\n                                                  id={pic.id?.toString()}\r\n                                                />\r\n                                              </>\r\n                                            ),\r\n                                        )}\r\n                                        {st?.pics?.length > 2 && (\r\n                                          <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                            +{st.pics.length - 2}\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </td>\r\n                                  {isDirector && (\r\n                                    <td className=\"text-center\">\r\n                                      {addingFavorite && taskIdSelected === st.task_id ? (\r\n                                        <Spinner size=\"sm\" color=\"warning\" />\r\n                                      ) : (\r\n                                        <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                          <button\r\n                                            type=\"button\"\r\n                                            className=\"fav-btn\"\r\n                                            onClick={() => handleFavorite(st.task_id)}\r\n                                          >\r\n                                            <MaterialIcon\r\n                                              icon=\"star\"\r\n                                              className={`${st.isFavorite && 'is_favorite'}`}\r\n                                            />\r\n                                          </button>\r\n                                        </abbr>\r\n                                      )}\r\n                                    </td>\r\n                                  )}\r\n                                </tr>\r\n                              ))}\r\n                          </Fragment>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"5\" align=\"center\">\r\n                            Data not found.\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task }} mode=\"activities\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InprogressTaskList;\r\n","import React, { Fragment } from 'react';\r\nimport { Page, Text, Document, StyleSheet, View } from '@react-pdf/renderer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 4,\r\n    marginHorizontal: 15,\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  header: {\r\n    fontSize: 10,\r\n    marginBottom: 5,\r\n    textAlign: 'left',\r\n    color: '#3f3f3f',\r\n    fontWeight: 'bold',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 10,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  printAt: {\r\n    position: 'absolute',\r\n    fontSize: 8,\r\n    bottom: 30,\r\n    left: 35,\r\n    right: 0,\r\n    textAlign: 'left',\r\n    color: 'grey',\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderRightWidth: 0,\r\n    borderBottomWidth: 0,\r\n    color: '#3f3f3f',\r\n  },\r\n  tableRow: {\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n  tableCol: {\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCell: {\r\n    // margin: 'auto',\r\n    marginTop: 3,\r\n    marginBottom: 3,\r\n    marginLeft: 3,\r\n    marginRight: 3,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nconst today = () => {\r\n  const currentDate = new Date();\r\n  return `${currentDate.toDateString()}, ${currentDate.toLocaleString().split(',')[1]}`;\r\n};\r\n\r\nconst PDFFile = ({ projectTitle, data }) => {\r\n  const pageColor = '#fff';\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={{ ...styles.body, backgroundColor: pageColor }}>\r\n        <Text style={styles.header} fixed>\r\n          Project : {projectTitle?.project_name}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Partner : {projectTitle?.partner}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Division : {projectTitle?.division}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Phase : {projectTitle?.phase}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Schema : {projectTitle?.schema === 'jo' ? 'Join Operational' : 'Join Venture'}\r\n        </Text>\r\n        <View style={styles.table}>\r\n          <View style={styles.tableRow}>\r\n            <View style={{ ...styles.tableCol, width: '5%' }}>\r\n              <Text style={styles.tableCell}>No.</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '35%' }}>\r\n              <Text style={styles.tableCell}>Task Title</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Status</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Deadline</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '30%' }}>\r\n              <Text style={styles.tableCell}>PIC</Text>\r\n            </View>\r\n          </View>\r\n          {data?.map((item, i) => (\r\n            <Fragment key={item.task_id}>\r\n              <View style={styles.tableRow}>\r\n                <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                  <Text style={{ ...styles.tableCell, textAlign: 'center' }}>{i + 1}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                  <Text style={styles.tableCell}>{item.task_title}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={{ ...styles.tableCell, fontSize: '10px' }}>\r\n                    {item.status === 0\r\n                      ? 'To do'\r\n                      : item.status === 1\r\n                      ? 'In progress'\r\n                      : item.status === 2\r\n                      ? 'Under review'\r\n                      : item.status === 3\r\n                      ? 'Approved'\r\n                      : 'Revision'}\r\n                  </Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={styles.tableCell}>{item.end_date}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                  {item.pics.map((p) => (\r\n                    <Text style={styles.tableCell} key={p.id}>\r\n                      {p.first_name}\r\n                    </Text>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n              {item.subtasks.map((st) => (\r\n                <View style={styles.tableRow} key={st.task_id}>\r\n                  <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                    <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                    <Text style={styles.tableCell}>{st.task_title}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>-</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>{st.end_date}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                    {st.pics.map((p) => (\r\n                      <Text style={styles.tableCell} key={p.id}>\r\n                        {p.first_name}\r\n                      </Text>\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              ))}\r\n            </Fragment>\r\n          ))}\r\n        </View>\r\n        <Text\r\n          style={styles.pageNumber}\r\n          render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\r\n        />\r\n        <Text style={styles.printAt} render={today} />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nPDFFile.propTypes = {\r\n  projectTitle: PropTypes.object,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default PDFFile;\r\n"],"names":["InprogressTaskList","auth","useAuth","modal","setModal","useState","task","setTask","undefined","taskIdSelected","setTaskIdSelected","addingFavorite","setAddingFavorite","isDirector","setIsDirector","projectTitle","setProjectTitle","filterSearch","setFilterSearch","api","useAxios","search","useLocation","isLoading","error","data","refetch","useQuery","queryKey","queryFn","get","concat","then","res","project","useEffect","openPopup","selectedTask","handleFavorite","async","taskId","post","user","employe_id","alert","message","catch","favoriteAllowedRoles","reportTaskAllowedRoles","roles","find","role","includes","_jsxs","_Fragment","children","_jsx","Col","Card","className","CardBody","CardTitle","tag","Row","sm","md","Button","type","color","size","MaterialIcon","icon","style","fontSize","Input","bsSize","placeholder","onChange","e","value","filterByTitle","filter","item","task_title","toLowerCase","handleSearch","target","PDFDownloadLink","document","PDFFile","fileName","project_number","division","textDecoration","width","length","map","ts","idx","_ts$subtasks","_ts$task_progress","_ts$pics","_ts$pics2","Fragment","cursor","onClick","fontWeight","Badge","subtasks","comments","status","task_progress","toFixed","pics","pic","i","_pic$id","id","src","user1","alt","height","TooltipHover","title","first_name","toString","task_id","Spinner","isFavorite","st","_st$task_progress","_st$pics","_st$pics2","_pic$id2","colSpan","align","TaskPopup","toggle","mode","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","textAlign","text","margin","image","marginVertical","marginHorizontal","header","marginBottom","pageNumber","position","bottom","left","right","printAt","table","display","borderStyle","borderWidth","borderRightWidth","borderBottomWidth","tableRow","flexDirection","tableCol","borderLeftWidth","borderTopWidth","tableCell","marginTop","marginLeft","marginRight","today","currentDate","Date","toDateString","toLocaleString","split","_ref","Document","Page","backgroundColor","Text","fixed","project_name","partner","phase","schema","View","end_date","p","render","_ref2","totalPages"],"sourceRoot":""}