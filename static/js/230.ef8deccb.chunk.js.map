{"version":3,"file":"static/js/230.ef8deccb.chunk.js","mappings":"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","sources":["components/atoms/circularPercentage/CircularPercentage.js","pages/projects/PDFFile.js","../node_modules/reactstrap/esm/Progress.js","pages/projects/OverviewTab.js","pages/projects/TaskForm.js","pages/projects/BoardTask.js","pages/projects/BoardToDo.js","pages/projects/BoardInProgress.js","pages/projects/BoardDone.js","pages/projects/BoardTab.js","components/roundedTable/RoundedTable.js","pages/projects/MemberTab.js","pages/projects/FileTab.js","pages/projects/ReviewTab.js","pages/projects/HandoverTab.js","utils/countTaskProgress.js","pages/projects/ActivityTab.js","pages/projects/ReviewBastTab.js","pages/projects/ProjectDetailTab.js","pages/projects/EditProjectModal.js","pages/projects/ProjectNav.js","context/TaskContext.js","pages/projects/ProjectDetail.js","utils/IndoDate.js","utils/isExpired.js","utils/rupiah.js","../node_modules/reactstrap/esm/InputGroup.js","../node_modules/reactstrap/esm/InputGroupText.js","../node_modules/reactstrap/esm/ModalFooter.js"],"sourcesContent":["import React from 'react';\r\nimport './CircularPercentage.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CircularPercentage = ({ data, color }) => {\r\n  return (\r\n    <div className=\"flex-wrapper\">\r\n      <div className=\"single-chart\">\r\n        <svg\r\n          viewBox=\"0 0 36 36\"\r\n          className={`circular-chart ${data === 100 ? 'green' : data !== 100 ? 'blue' : color}`}\r\n        >\r\n          <path\r\n            className=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            className=\"circle\"\r\n            strokeDasharray={`${data}, 100`}\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          {data === 100 ? (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\" style={{ fontSize: '14px' }}>\r\n              ✔\r\n            </text>\r\n          ) : (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\">\r\n              {data}%\r\n            </text>\r\n          )}\r\n        </svg>\r\n      </div>\r\n\r\n      {/* <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart green\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"60, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            60%\r\n          </text>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart blue\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"90, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            90%\r\n          </text>\r\n        </svg>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nCircularPercentage.propTypes = {\r\n  data: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default CircularPercentage;\r\n","import React, { Fragment } from 'react';\r\nimport { Page, Text, Document, StyleSheet, View } from '@react-pdf/renderer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 10,\r\n    textAlign: 'justify',\r\n  },\r\n  image: {\r\n    marginVertical: 4,\r\n    marginHorizontal: 15,\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  header: {\r\n    fontSize: 10,\r\n    marginBottom: 5,\r\n    textAlign: 'left',\r\n    color: '#3f3f3f',\r\n    fontWeight: 'bold',\r\n  },\r\n  pageNumber: {\r\n    position: 'absolute',\r\n    fontSize: 10,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: 'center',\r\n    color: 'grey',\r\n  },\r\n  printAt: {\r\n    position: 'absolute',\r\n    fontSize: 8,\r\n    bottom: 30,\r\n    left: 35,\r\n    right: 0,\r\n    textAlign: 'left',\r\n    color: 'grey',\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderRightWidth: 0,\r\n    borderBottomWidth: 0,\r\n    color: '#3f3f3f',\r\n  },\r\n  tableRow: {\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n  tableCol: {\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCell: {\r\n    // margin: 'auto',\r\n    marginTop: 3,\r\n    marginBottom: 3,\r\n    marginLeft: 3,\r\n    marginRight: 3,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nconst today = () => {\r\n  const currentDate = new Date();\r\n  return `${currentDate.toDateString()}, ${currentDate.toLocaleString().split(',')[1]}`;\r\n};\r\n\r\nconst PDFFile = ({ projectTitle, data }) => {\r\n  const pageColor = '#fff';\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={{ ...styles.body, backgroundColor: pageColor }}>\r\n        <Text style={styles.header} fixed>\r\n          Project : {projectTitle?.project_name}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Partner : {projectTitle?.partner}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Division : {projectTitle?.division}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Phase : {projectTitle?.phase}\r\n        </Text>\r\n        <Text style={styles.header} fixed>\r\n          Schema : {projectTitle?.schema === 'jo' ? 'Join Operational' : 'Join Venture'}\r\n        </Text>\r\n        <View style={styles.table}>\r\n          <View style={styles.tableRow}>\r\n            <View style={{ ...styles.tableCol, width: '5%' }}>\r\n              <Text style={styles.tableCell}>No.</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '35%' }}>\r\n              <Text style={styles.tableCell}>Task Title</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Status</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '15%' }}>\r\n              <Text style={styles.tableCell}>Deadline</Text>\r\n            </View>\r\n            <View style={{ ...styles.tableCol, width: '30%' }}>\r\n              <Text style={styles.tableCell}>PIC</Text>\r\n            </View>\r\n          </View>\r\n          {data?.map((item, i) => (\r\n            <Fragment key={item.task_id}>\r\n              <View style={styles.tableRow}>\r\n                <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                  <Text style={{ ...styles.tableCell, textAlign: 'center' }}>{i + 1}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                  <Text style={styles.tableCell}>{item.task_title}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={{ ...styles.tableCell, fontSize: '10px' }}>\r\n                    {item.status === 0\r\n                      ? 'To do'\r\n                      : item.status === 1\r\n                      ? 'In progress'\r\n                      : item.status === 2\r\n                      ? 'Under review'\r\n                      : item.status === 3\r\n                      ? 'Approved'\r\n                      : 'Revision'}\r\n                  </Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                  <Text style={styles.tableCell}>{item.end_date}</Text>\r\n                </View>\r\n                <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                  {item.pics?.map((p) => (\r\n                    <Text style={styles.tableCell} key={p.id}>\r\n                      {p.first_name}\r\n                    </Text>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n              {item.level_2?.map((st) => (\r\n                <View style={styles.tableRow} key={st.task_id}>\r\n                  <View style={{ ...styles.tableCol, width: '5%' }}>\r\n                    <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '35%' }}>\r\n                    <Text style={styles.tableCell}>{st.task_title}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>-</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '15%' }}>\r\n                    <Text style={styles.tableCell}>{st.end_date}</Text>\r\n                  </View>\r\n                  <View style={{ ...styles.tableCol, width: '30%' }}>\r\n                    {st.pics?.map((p) => (\r\n                      <Text style={styles.tableCell} key={p.id}>\r\n                        {p.first_name}\r\n                      </Text>\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              ))}\r\n            </Fragment>\r\n          ))}\r\n        </View>\r\n        <Text\r\n          style={styles.pageNumber}\r\n          render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\r\n        />\r\n        <Text style={styles.printAt} render={today} />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nPDFFile.propTypes = {\r\n  projectTitle: PropTypes.object,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default PDFFile;\r\n","var _excluded = [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\nvar propTypes = {\n  /** Enable animation to bar */\n  animated: PropTypes.bool,\n  bar: PropTypes.bool,\n  barAriaLabelledBy: PropTypes.string,\n  barAriaValueText: PropTypes.string,\n  barClassName: PropTypes.string,\n  barStyle: PropTypes.object,\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Add custom color to the placeholder */\n  color: PropTypes.string,\n  /** Maximum value of progress */\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Minimum value of progress, defaults to zero */\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  multi: PropTypes.bool,\n  /** Add stripes to progress bar */\n  striped: PropTypes.bool,\n  style: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Current value of progress */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nfunction Progress(props) {\n  var children = props.children,\n    className = props.className,\n    barClassName = props.barClassName,\n    cssModule = props.cssModule,\n    _props$value = props.value,\n    value = _props$value === void 0 ? 0 : _props$value,\n    _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    animated = props.animated,\n    striped = props.striped,\n    color = props.color,\n    bar = props.bar,\n    multi = props.multi,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    _props$style = props.style,\n    style = _props$style === void 0 ? {} : _props$style,\n    _props$barStyle = props.barStyle,\n    barStyle = _props$barStyle === void 0 ? {} : _props$barStyle,\n    barAriaValueText = props.barAriaValueText,\n    barAriaLabelledBy = props.barAriaLabelledBy,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\".concat(color) : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread(_objectSpread(_objectSpread({}, bar ? style : {}), barStyle), {}, {\n      width: \"\".concat(percent, \"%\")\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n  if (bar) {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React.createElement(\"div\", progressBarProps));\n}\nProgress.propTypes = propTypes;\nexport default Progress;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Progress,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport rupiah from '../../utils/rupiah';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst remaininDays = (endDate) => {\r\n  const todayDate = new Date();\r\n\r\n  const todayToLocalString = todayDate.toLocaleString();\r\n\r\n  const todayBad = todayToLocalString.split(',')[0];\r\n\r\n  const day = todayBad.split('/')[1];\r\n  const month = todayBad.split('/')[0];\r\n  const year = todayBad.split('/')[2];\r\n\r\n  const todayMerge = `${year}-${month}-${day}`;\r\n\r\n  const today = new Date(todayMerge);\r\n\r\n  const deadline = new Date(endDate);\r\n\r\n  const diff = deadline.getTime() - today.getTime();\r\n\r\n  const result = diff / (1000 * 3600 * 24);\r\n\r\n  return result;\r\n};\r\n\r\nconst OverviewTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [history, setHistory] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const [newPic, setNewPic] = useState();\r\n  const [listEmployee, setListEmploye] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [bst, setBst] = useState([]);\r\n  const [activePhase, setActivePhase] = useState(undefined);\r\n  const [selectedSchema, setSelectedSchema] = useState('');\r\n  const [isBusiness, setIsBusiness] = useState();\r\n  const [partnerOptions, setPartnerOptions] = useState([]);\r\n  const [selectedPartner, setSelectedPartner] = useState(undefined);\r\n  const [progress, setProgress] = useState(0);\r\n  const [taskByStatus, setTaskByStatus] = useState({\r\n    todo: 0,\r\n    inprogress: 0,\r\n    underReview: 0,\r\n    done: 0,\r\n  });\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['overview'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 0 || parseInt(task.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 1;\r\n    });\r\n\r\n    const doneFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2 || parseInt(task.status, 10) === 3;\r\n    });\r\n\r\n    const underReviewFiltered = data?.task_by_active_user?.filter((task) => {\r\n      return parseInt(task.status, 10) === 2;\r\n    });\r\n\r\n    setTaskByStatus({\r\n      todo: todofFiltered?.length,\r\n      inprogress: inProgressfFiltered?.length,\r\n      underReview: underReviewFiltered?.length,\r\n      done: doneFiltered?.length,\r\n    });\r\n\r\n    setActivePhase(data?.current_stage?.phase_id);\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n\r\n    async function fetchProgress() {\r\n      await api\r\n        .post('api/project/progress/collection', { ids: [projectId] })\r\n        .then((res) => {\r\n          setProgress(res.data.data[0]?.progress);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchProgress();\r\n  }, [data]);\r\n\r\n  const fetsHistory = async () => {\r\n    await api\r\n      .get(`api/project/${projectId}/history`)\r\n      .then((res) => setHistory(res.data.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetsHistory();\r\n  }, [projectId]);\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list`)\r\n        .then((res) => setListEmploye(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(\r\n        `api/project/handover`,\r\n        {\r\n          project_id: projectId,\r\n          new_pic: newPic.value,\r\n          file: bst,\r\n          // jika fase projek adalah planning\r\n          schema: activePhase === 2 ? selectedSchema : '',\r\n          partner: activePhase === 2 ? selectedPartner : '',\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        },\r\n      )\r\n      .then(() => {\r\n        fetsHistory();\r\n        alert('success', 'BAST is under review');\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setLoading(false);\r\n    setModal(false);\r\n  };\r\n\r\n  const allTaskPermission = ['Manager', 'Director'];\r\n\r\n  useEffect(() => {\r\n    async function fetchPartnerOptions() {\r\n      await api\r\n        .get(`api/project/partner/options`)\r\n        .then((res) => setPartnerOptions(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    fetchPartnerOptions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Col lg=\"12\">\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : error ? (\r\n        'Soemthing went wrong.'\r\n      ) : (\r\n        <Row>\r\n          <Col lg=\"8\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Description\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"ms-auto mt-3 mt-md-0\">\r\n                  {isBusiness ? data.current_stage?.desc : data?.goals}\r\n                </div>\r\n                <div className=\"d-flex justify-content-between mt-3\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Level</small>\r\n                    <span className=\"text-dark\">{data.level_desc}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column col-4\">\r\n                    <small className=\"text-muted\">Base</small>\r\n                    <div className=\"d-flex\">\r\n                      <span className=\"wtext-dark\">\r\n                        {data?.base_description.trim().length > 25\r\n                          ? `${data?.base_description.substring(0, 25)}...`\r\n                          : data?.base_description}\r\n                      </span>\r\n                      <abbr title={data?.base_description}>\r\n                        <i\r\n                          className=\"me-2 bi-info-circle-fill\"\r\n                          style={{ fontSize: '14px', marginLeft: '4px' }}\r\n                        ></i>\r\n                      </abbr>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Start date</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage && data.current_stage?.start_date)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <small className=\"text-muted\">Deadline</small>\r\n                    <span className=\"text-dark\">\r\n                      {IndoDate(data?.current_stage !== null && data.current_stage?.end_date)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between bg-light align-items-end p-2 mt-3\"\r\n                  style={{ borderRadius: '8px' }}\r\n                >\r\n                  <div className=\"d-flex gap-3 align-items-center\">\r\n                    <img\r\n                      src={user1}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"avatar\"\r\n                      width=\"45\"\r\n                      height=\"45\"\r\n                    />\r\n                    <div className=\"d-flex flex-column\">\r\n                      <small className=\"text-muted\">PIC</small>\r\n                      <span className=\"text-dark fw-bold\">{data.pic_active.first_name}</span>\r\n                      {/* <small className=\"text-muted\">Divisi Teknologi & Informasi</small> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-3\">\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Cost <span className=\"fw-bold\">{rupiah(data.estimated_cost)}</span>\r\n                    </span>\r\n                    <span className=\"badge text-info bg-light-info rounded-pill d-inline-block\">\r\n                      Est. Income <span className=\"fw-bold\">{rupiah(data.estimated_income)}</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div>\r\n                  <CardTitle tag=\"h5\" className=\"text-dark fw-bold\">\r\n                    Project Histories\r\n                  </CardTitle>\r\n                </div>\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  {!history\r\n                    ? 'Loading...'\r\n                    : history?.map((h) => (\r\n                        <div\r\n                          key={h.history_id}\r\n                          className=\"col-md-12 d-flex justify-content-between align-items-center py-2 px-3\"\r\n                          style={{ backgroundColor: '#F3F2F2', borderRadius: '8px' }}\r\n                        >\r\n                          <div className=\"col-md-4 d-flex flex-column\">\r\n                            <span className=\"text-dark\">{h.organization_name}</span>\r\n                            <small>{h.history_desc}</small>\r\n                            {auth?.user?.roles.find((role) => allTaskPermission.includes(role)) && (\r\n                              <Link\r\n                                to={`/projects/details/${projectId}?div=${h.organization_id}&to=activities`}\r\n                                style={{ textDecoration: 'none' }}\r\n                              >\r\n                                See all task\r\n                              </Link>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-2\">\r\n                            <span\r\n                              className={`badge bg-light-${\r\n                                h.status === 'handover' && h.active === 0\r\n                                  ? 'danger text-danger'\r\n                                  : h.status === 'handover'\r\n                                  ? 'success text-success'\r\n                                  : h.status === 'review'\r\n                                  ? 'danger text-danger'\r\n                                  : 'primary text-primary'\r\n                              } rounded-pill d-inline-block fw-bold`}\r\n                            >\r\n                              {h.status === 'handover' && h.active === 0\r\n                                ? 'waiting for approval'\r\n                                : (h.status === 'handover' && h.active === 1) || h.active === 1\r\n                                ? 'active'\r\n                                : h.status}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-3 d-flex flex-column\">\r\n                            <small>{newDate(h.created_at)}</small>\r\n                          </div>\r\n                          <div className=\"col-md-1 d-flex justify-content-end\">\r\n                            <img\r\n                              id={`tooltip-${h.history_id}`}\r\n                              src={h.img || user1}\r\n                              className=\"rounded-circle\"\r\n                              alt=\"avatar\"\r\n                              width=\"35\"\r\n                              height=\"35\"\r\n                            />\r\n                            <TooltipHover title={h.first_name} id={h.history_id.toString()} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"4\">\r\n            <Card className=\"rounded-3 mb-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\" className=\"d-flex justify-content-between fw-bold\">\r\n                  Project Active\r\n                  <span className=\"text-success fw-bold\">{progress.toFixed()}%</span>\r\n                </CardTitle>\r\n                <Progress\r\n                  className=\"\"\r\n                  color=\"success\"\r\n                  value={progress.toFixed()}\r\n                  style={{ height: '15px' }}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"rounded-3\">\r\n              <CardBody>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Remaining days</h6>\r\n                      <span className=\"text-danger\">\r\n                        {remaininDays(\r\n                          data?.current_stage !== null && data.current_stage?.end_date,\r\n                        ).toFixed()}\r\n                      </span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"timer\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Todo</h6>\r\n                      <span>{taskByStatus?.todo}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"schedule\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n                <div className=\"overall-process\">\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task In Progress</h6>\r\n                      <span>{taskByStatus?.inprogress}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"play_circle_outline\"></MaterialIcon>\r\n                  </div>\r\n                  <div className=\"overall-child\">\r\n                    <div>\r\n                      <h6 className=\"text-muted\">Task Done</h6>\r\n                      <span>{taskByStatus?.done}</span>\r\n                    </div>\r\n                    <MaterialIcon icon=\"task_alt\"></MaterialIcon>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            {isBusiness && auth.user.roles.includes('Manager') && (\r\n              <Card>\r\n                <Button\r\n                  type=\"button\"\r\n                  color=\"info\"\r\n                  disabled={\r\n                    data?.total_progress !== 100 ||\r\n                    taskByStatus?.underReview !== 0 ||\r\n                    taskByStatus?.todo !== 0 ||\r\n                    taskByStatus?.inprogress !== 0\r\n                  }\r\n                  outline\r\n                  onClick={toggle.bind(null)}\r\n                >\r\n                  Handover Project\r\n                </Button>\r\n              </Card>\r\n            )}\r\n            {/* <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h4\">Recent Tasks</CardTitle>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Jaka joined the project</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Doni comment on your task </span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    1 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-muted\">Lexa uploaded the file</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <div className=\"act-list\" />\r\n                <div className=\"d-flex flex-column\">\r\n                  <span className=\"text-dark\">Charlie assign a new task to you</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '10px' }}>\r\n                    2 day ago\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardBody>\r\n        </Card> */}\r\n          </Col>\r\n          <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n            <ModalHeader toggle={toggle.bind(null)}>Handover Project</ModalHeader>\r\n            <form onSubmit={handleSubmit}>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <Label>Option</Label>\r\n                  <Input type=\"select\" id=\"base_id\" name=\"base_id\" defaultValue=\"a\">\r\n                    <option value=\"a\" disabled>\r\n                      Select\r\n                    </option>\r\n                    <option value=\"\">Hand Over</option>\r\n                    <option value=\"\">Done</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {/* current stage is Planning */}\r\n                {activePhase === 2 && (\r\n                  <>\r\n                    {data?.current_stage?.partner === null && (\r\n                      <FormGroup>\r\n                        <Label for=\"partner\">Partner</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          id=\"partner\"\r\n                          name=\"partner\"\r\n                          defaultValue=\"pa\"\r\n                          onChange={(e) => setSelectedPartner(e.target.value)}\r\n                        >\r\n                          <option disabled value=\"pa\">\r\n                            - Select -\r\n                          </option>\r\n                          {partnerOptions.length > 0 &&\r\n                            partnerOptions.map((p) => (\r\n                              <option key={p.id} value={p.id}>\r\n                                {p.name}\r\n                              </option>\r\n                            ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    )}\r\n                    <FormGroup>\r\n                      <Label>Schema</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        id=\"base_id\"\r\n                        name=\"base_id\"\r\n                        defaultValue=\"a\"\r\n                        onChange={(e) => setSelectedSchema(e.target.value)}\r\n                      >\r\n                        <option value=\"a\" disabled>\r\n                          Select\r\n                        </option>\r\n                        <option value=\"jo\">JO</option>\r\n                        <option value=\"jv\">JV</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </>\r\n                )}\r\n                {/* current stage is Planning */}\r\n                <FormGroup>\r\n                  <Label>PIC</Label>\r\n                  <Select\r\n                    components={animatedComponents}\r\n                    options={listEmployee}\r\n                    onChange={(choice) => setNewPic(choice)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"bst\">BAST</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"file\"\r\n                      name=\"file\"\r\n                      id=\"bst\"\r\n                      onChange={(e) => setBst(e.target.files)}\r\n                    />\r\n                  </FormGroup>\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"info\"\r\n                  disabled={loading}\r\n                  className=\"d-flex gap-1 align-items-center\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                      Sending\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                      Send\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </Modal>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OverviewTab;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Input, Modal, ModalBody, ModalHeader, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TaskForm.scss';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\n\r\nconst TaskForm = (props) => {\r\n  const { auth } = useAuth();\r\n  const { projectId, setNewTaskOpen, setAddSubtaskOpen, refetch, type, taskId, title } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [task, setTask] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n  const [listEmployee, setListEmploye] = useState();\r\n  // const [files, setFiles] = useState([]);\r\n\r\n  const animatedComponents = makeAnimated();\r\n  const navigate = useNavigate();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchEmployees() {\r\n      await api\r\n        .get(`api/employe/assignment-list`)\r\n        .then((res) => {\r\n          setListEmploye(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchEmployees();\r\n\r\n    setAssignedEmployees([\r\n      {\r\n        value: auth.user.employe_id,\r\n        label: auth.user.first_name,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setTask((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const assigneModal = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    if (type === 1) {\r\n      setNewTaskOpen(false);\r\n    } else {\r\n      setAddSubtaskOpen(undefined);\r\n    }\r\n  };\r\n\r\n  const taskSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (assignedEmployees?.length > 0) {\r\n      task.project_id = projectId;\r\n      task.task_pic = assignedEmployees;\r\n      // eslint-disable-next-line prefer-destructuring\r\n      // task.files = files;\r\n\r\n      if (type === 2) {\r\n        task.task_parent = taskId;\r\n      }\r\n\r\n      await api\r\n        .post('api/task', task, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n        .then(() => {\r\n          if (auth?.user.roles.includes('Manager')) {\r\n            const arrayId = [];\r\n            assignedEmployees.map((em) => arrayId.push(em.value));\r\n            if (!arrayId.includes(auth?.user.employe_id)) {\r\n              navigate('?to=activities');\r\n            }\r\n          } else {\r\n            navigate('');\r\n          }\r\n          alert('create', 'New task has been created.');\r\n        })\r\n        .catch(() => alert('error', 'New task failed to save'));\r\n      refetch();\r\n      closeForm();\r\n    } else {\r\n      alert('error', 'Assignment cannot be empty');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task-form-overlay\" onClick={closeForm} />\r\n\r\n      <form onSubmit={taskSubmit} style={{ width: '100%' }} encType=\"multipart/form-data\">\r\n        <div className=\"new-task rounded-3\">\r\n          <div className=\"body\">\r\n            <div className=\"input\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"task_title\"\r\n                placeholder={`${title}...`}\r\n                required\r\n                onChange={handleChange}\r\n                rows=\"4\"\r\n                value={task?.task_title || ''}\r\n                style={{ fontSize: '13px' }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex gap-3 justify-content-between\">\r\n            <div className=\"d-flex gap-0 w-75\">\r\n              <div className=\"d-flex align-items-center w-50\">\r\n                <span className=\"datepicker-toggle\">\r\n                  <span className=\"datepicker-toggle-button\">\r\n                    <MaterialIcon icon=\"calendar_month\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"start_date\"\r\n                    className=\"datepicker-input\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  />\r\n                </span>\r\n                <div className=\"d-flex flex-column\">\r\n                  <small className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                    Start date\r\n                  </small>\r\n                  <small className=\"text-dark\" style={{ marginTop: '-7px' }}>\r\n                    {task.start_date}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex align-items-center w-50\">\r\n                <span className=\"datepicker-toggle\">\r\n                  <span className=\"datepicker-toggle-button\">\r\n                    <MaterialIcon icon=\"calendar_month\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"end_date\"\r\n                    name=\"end_date\"\r\n                    className=\"datepicker-input\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  />\r\n                </span>\r\n                <div className=\"d-flex flex-column\">\r\n                  <small htmlFor=\"end_date\" className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                    Due date\r\n                  </small>\r\n                  <small className=\"text-dark\" style={{ marginTop: '-7px' }}>\r\n                    {task.end_date}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button type=\"button\" className=\"btn-assigne\" id=\"tooltip-2\" onClick={assigneModal}>\r\n                <i className=\"bi-person-plus-fill\"></i>\r\n                <span>{assignedEmployees?.length || 0}</span>\r\n              </button>\r\n              <TooltipHover title=\"Assigne\" id=\"2\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"footer mt-2\">\r\n            <div className=\"option\">\r\n              {/* <div className=\"attach\">\r\n                <Label for=\"attach\">\r\n                  <MaterialIcon icon=\"attach_file\" className=\"btn-icon\" />\r\n                </Label>\r\n                <input type=\"file\" id=\"attach\" hidden onChange={(e) => setFiles(e.target.files)} />\r\n              </div> */}\r\n            </div>\r\n            <div className=\"action\">\r\n              <Button type=\"button\" size=\"sm\" color=\"light\" disabled={loading} onClick={closeForm}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"sm\"\r\n                className=\"d-flex gap-2 align-items-center\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" />\r\n                    Loading...\r\n                  </>\r\n                ) : (\r\n                  'Save'\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Assigne Employee</ModalHeader>\r\n        <ModalBody>\r\n          <Select\r\n            // closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            isMulti\r\n            defaultValue={assignedEmployees}\r\n            options={listEmployee}\r\n            onChange={(choice) => setAssignedEmployees(choice)}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nTaskForm.propTypes = {\r\n  projectId: PropTypes.string,\r\n  setNewTaskOpen: PropTypes.func,\r\n  setAddSubtaskOpen: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  type: PropTypes.number,\r\n  taskId: PropTypes.number,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default TaskForm;\r\n","import MaterialIcon from '@material/react-material-icon';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { Badge, Spinner } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport TaskPopup from './TaskPopup';\r\nimport TaskForm from './TaskForm';\r\nimport ActionMenu from '../../components/actionMenu/ActionMenu';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst BoardTask = ({ data, projectId, refetch }) => {\r\n  const { auth } = useAuth();\r\n  const [modal, setModal] = useState(false);\r\n  const [addSubtaskOpen, setAddSubtaskOpen] = useState(undefined);\r\n  const [task, setTask] = useState(undefined);\r\n  const [updating, setUpdating] = useState();\r\n  const [taskIdActive, setTaskIdActive] = useState();\r\n  const [status, setStatus] = useState();\r\n\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const type = 2;\r\n\r\n  const handleTaskStatus = async (taskId, taskStatus) => {\r\n    setTaskIdActive(taskId);\r\n    setStatus(taskStatus);\r\n    setUpdating(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: auth.user.employe_id,\r\n        status: taskStatus,\r\n      })\r\n      .then(() => {\r\n        alert(\r\n          taskStatus === 1 ? 'start' : taskStatus === 2 ? 'done' : 'success',\r\n          `Task status has been changed to ${\r\n            taskStatus === 0 ? 'To Do' : taskStatus === 1 ? 'In Progress' : 'Done'\r\n          }`,\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    refetch();\r\n    setUpdating(false);\r\n    setTaskIdActive();\r\n    setStatus();\r\n  };\r\n\r\n  const menuOptions = {\r\n    options: [\r\n      {\r\n        id: 1,\r\n        icon: <MaterialIcon icon=\"edit_note\" />,\r\n        type: 'button',\r\n        label: 'To do',\r\n        to: 0,\r\n      },\r\n      {\r\n        id: 2,\r\n        icon: <MaterialIcon icon=\"play_circle_outline\" />,\r\n        type: 'button',\r\n        label: 'In Progress',\r\n        to: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        icon: <MaterialIcon icon=\"task_alt\" />,\r\n        type: 'button',\r\n        label: 'Done',\r\n        to: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        {data?.map((td, i) => (\r\n          <div key={td.task_id} className=\"board rounded-3\">\r\n            <div className=\"board-header\">\r\n              <div className=\"d-flex gap-2\" style={{ height: 'max-content' }}>\r\n                <Badge\r\n                  color=\"info\"\r\n                  className={`bg-light-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } text-${\r\n                    td.status === 0 ? 'primary' : td.status === 1 ? 'warning' : 'success'\r\n                  } fw-bold`}\r\n                >\r\n                  #{i + 1}\r\n                </Badge>\r\n                {parseInt(td.status, 10) === 4 && (\r\n                  <Badge color=\"danger\">\r\n                    <i className=\"bi-pencil-square mr-4\" style={{ fontSize: '12px' }}></i>\r\n                    &nbsp; Revision\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              {parseInt(td.status, 10) === 0 ||\r\n              parseInt(td.status, 10) === 1 ||\r\n              parseInt(td.status, 10) === 4 ? (\r\n                updating && taskIdActive === td.task_id ? (\r\n                  <div className=\"d-flex align-items-center gap-1\">\r\n                    <Spinner size=\"sm\" color=\"success\" />\r\n                    <span style={{ fontSize: '12px' }}>\r\n                      Updating status to{' '}\r\n                      <strong>\r\n                        {status === 0\r\n                          ? 'To do'\r\n                          : status === 1\r\n                          ? 'In Progress'\r\n                          : status === 2\r\n                          ? 'Done'\r\n                          : ''}\r\n                      </strong>\r\n                    </span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"d-flex gap-2\">\r\n                    <div className=\"\">\r\n                      {parseInt(td.status, 10) === 1 && (\r\n                        <span style={{ fontSize: '12px' }}>\r\n                          Progress{'  '}\r\n                          <strong\r\n                            style={{\r\n                              fontSize: '14px',\r\n                              color: td.task_progress === 100 ? '#4cc790' : '#21C1D6',\r\n                            }}\r\n                          >\r\n                            {/* {td.task_progress.toFixed(td.task_progress !== 100 && 2)}% */}\r\n                            {td.task_progress.toFixed()}%\r\n                          </strong>\r\n                        </span>\r\n                        // <div className=\"progress-bar\">\r\n                        //   <Progress\r\n                        //     className=\"mb-0\"\r\n                        //     value={td.task_progress}\r\n                        //     color=\"success\"\r\n                        //     style={{ fontSize: '10px', height: '12px' }}\r\n                        //   />\r\n                        //   <div className={`num ${td.task_progress > 52 && 'white'}`}>\r\n                        //     {td.task_progress}%\r\n                        //   </div>\r\n                        // </div>\r\n                      )}\r\n                    </div>\r\n                    <div key={td.task_id}>\r\n                      {td.pics.map(\r\n                        (pic) =>\r\n                          pic.employe_id.toString() === auth?.user.employe_id && (\r\n                            <ActionMenu\r\n                              key={pic.id}\r\n                              menuOptions={menuOptions}\r\n                              taskId={td.task_id}\r\n                              status={parseInt(td.status, 10)}\r\n                              action={handleTaskStatus}\r\n                              progress={td.task_progress}\r\n                            />\r\n                          ),\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              ) : parseInt(td.status, 10) === 2 ? (\r\n                <Badge color=\"light\" className=\"d-flex text-dark\">\r\n                  <i className=\"bi-clock mr-4\" style={{ fontSize: '12px' }}></i>\r\n                  &nbsp; Waiting for approval\r\n                </Badge>\r\n              ) : parseInt(td.status, 10) === 3 ? (\r\n                <Badge color=\"success\" className=\"d-flex\">\r\n                  <i className=\"bi-check2-circle mr-4\" style={{ fontSize: '13px' }}></i>\r\n                  &nbsp; Approved\r\n                </Badge>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div className=\"board-body task\">\r\n              <div className=\"task-title fw-bold\" onClick={() => openPopup(td)}>\r\n                {td.task_title}\r\n              </div>\r\n              <div className=\"task-bottom\">\r\n                <div className=\"task-info\">\r\n                  {/* <small className=\"text-muted\">{td.level_2.length} Subtask</small> */}\r\n                  {parseInt(td.status, 10) !== 2 && parseInt(td.status, 10) !== 3 && (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"add-child\"\r\n                      onClick={() => setAddSubtaskOpen(td.task_id)}\r\n                    >\r\n                      <MaterialIcon icon=\"add_circle\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <div className=\"task-action\">\r\n                  <div className=\"comment\">\r\n                    <MaterialIcon icon=\"comment\" />\r\n                    <div>{td.comments}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {addSubtaskOpen === td.task_id && (\r\n                <div className=\"p-1\">\r\n                  <TaskForm\r\n                    {...{ projectId, setAddSubtaskOpen, refetch, type }}\r\n                    title=\"Create subtask level 1\"\r\n                    taskId={td.task_id}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            {td.level_2?.length > 0 &&\r\n              td.level_2.map((l2) => (\r\n                // <div key={l2.task_id} className=\"board-body subtask\" onClick={() => openPopup(st)}>\r\n                <div key={l2.task_id} className=\"board-container\">\r\n                  <div key={l2.task_id} className=\"board-body subtask\">\r\n                    <div className=\"task-title\" onClick={() => openPopup(l2)}>\r\n                      {l2.task_title}\r\n                    </div>\r\n                    <div className=\"task-bottom\">\r\n                      <div className=\"task-info\">\r\n                        {/* <small className=\"text-muted\">{td.level_2.length} Subtask</small> */}\r\n                        {parseInt(td.status, 10) !== 2 && parseInt(td.status, 10) !== 3 && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"add-child\"\r\n                            onClick={() => setAddSubtaskOpen(l2.task_id)}\r\n                          >\r\n                            <MaterialIcon icon=\"add_circle\" />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"task-action\">\r\n                        <div className=\"circular-progress\">\r\n                          <CircularPercentage data={parseInt(l2.task_progress.toFixed(), 10)} />\r\n                        </div>\r\n                        <div className=\"comment\">\r\n                          <MaterialIcon icon=\"comment\" />\r\n                          <div>{l2.comments}</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {addSubtaskOpen === l2.task_id && (\r\n                      <div className=\"p-1\">\r\n                        <TaskForm\r\n                          {...{ projectId, setAddSubtaskOpen, refetch, type }}\r\n                          title=\"Create subtask level 2\"\r\n                          taskId={l2.task_id}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {l2.level_3?.length > 0 &&\r\n                    l2.level_3.map((l3) => (\r\n                      <div key={l3.task_id} className=\"board-body subtask-level3\">\r\n                        <div className=\"task-title text-muted\" onClick={() => openPopup(l3)}>\r\n                          {l3.task_title}\r\n                        </div>\r\n                        <div className=\"task-bottom\">\r\n                          <div className=\"task-info\"></div>\r\n                          <div className=\"task-action\">\r\n                            <div className=\"circular-progress\">\r\n                              <CircularPercentage data={parseInt(l3.task_progress.toFixed(), 10)} />\r\n                            </div>\r\n                            <div className=\"comment\">\r\n                              <MaterialIcon icon=\"comment\" />\r\n                              <div>{l3.comments}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              ))}\r\n            {parseInt(td.status, 10) !== 3 && (\r\n              <div className=\"board-footer\">\r\n                <>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <MaterialIcon icon=\"event\" style={{ fontSize: '20px' }} />\r\n                    <span\r\n                      className={`${isExpired(td.end_date) ? 'text-danger' : ''} `}\r\n                      style={{ fontSize: '12px' }}\r\n                    >\r\n                      {IndoDate(td.end_date)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"members\">\r\n                    <div className=\"members-item\">\r\n                      {td?.pics?.map(\r\n                        (pic, idx) =>\r\n                          idx < 2 && (\r\n                            <Fragment key={pic.id}>\r\n                              <img\r\n                                id={`tooltip-${pic.id}`}\r\n                                src={user1}\r\n                                className=\"ava-pic rounded-circle\"\r\n                                alt=\"avatar\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                              />\r\n                              <TooltipHover title={pic.first_name} id={pic.id.toString()} />\r\n                            </Fragment>\r\n                          ),\r\n                      )}\r\n                      {td?.pics?.length > 2 && (\r\n                        <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                          +{td.pics.length - 2}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task, refetch }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardTask.propTypes = {\r\n  data: PropTypes.array,\r\n  projectId: PropTypes.string,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.any,\r\n};\r\n\r\nexport default BoardTask;\r\n","import React, { useState } from 'react';\r\nimport { Button, Col } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst BoardToDo = ({ data, isLoading, error, refetch, isRefetching, isMemberActive }) => {\r\n  const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const type = 1;\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-primary text-primary py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">To do</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {isMemberActive &&\r\n            (!newTaskOpen ? (\r\n              <Button\r\n                type=\"button\"\r\n                size=\"sm\"\r\n                color=\"secondary\"\r\n                className=\"d-flex align-items-center justify-content-center rounded-2\"\r\n                block\r\n                onClick={() => setNewTaskOpen(true)}\r\n              >\r\n                <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n                New Task\r\n              </Button>\r\n            ) : (\r\n              <TaskForm\r\n                {...{ projectId, setNewTaskOpen, refetch, type }}\r\n                title=\"Create main task\"\r\n              />\r\n            ))}\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching, isMemberActive }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardToDo.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardToDo;\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n// import TaskForm from './TaskForm';\r\n\r\nconst BoardInProgress = ({ data, isLoading, error, refetch, isRefetching, isMemberActive }) => {\r\n  // const [newTaskOpen, setNewTaskOpen] = useState(false);\r\n\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-warning text-warning py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">In progress</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          {/* {!newTaskOpen ? (\r\n            <Button\r\n              type=\"button\"\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              block\r\n              onClick={() => setNewTaskOpen(true)}\r\n            >\r\n              <MaterialIcon icon=\"add\" style={{ fontSize: '14px' }} />\r\n              New Task\r\n            </Button>\r\n          ) : (\r\n          )} */}\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching, isMemberActive }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardInProgress.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n  isMemberActive: PropTypes.bool,\r\n};\r\n\r\nexport default BoardInProgress;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Col } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport BoardTask from './BoardTask';\r\n\r\nconst BoardDone = ({ data, isLoading, error, refetch, isRefetching }) => {\r\n  const { projectId } = useParams();\r\n\r\n  return (\r\n    <Col lg=\"4\" className=\"mt-1\">\r\n      <div className=\"d-flex align-items-center justify-content-between bg-light-success text-success py-1 px-2 mb-2 rounded-3\">\r\n        <span className=\"fw-bold\">Done</span>\r\n        <span className=\"fw-bold\">{data?.length}</span>\r\n      </div>\r\n      {isLoading ? (\r\n        'Loading...'\r\n      ) : error ? (\r\n        'Something went wrong.'\r\n      ) : (\r\n        <>\r\n          <BoardTask {...{ data, projectId, refetch, isRefetching }} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nBoardDone.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  error: PropTypes.any,\r\n  refetch: PropTypes.func,\r\n  isRefetching: PropTypes.bool,\r\n};\r\n\r\nexport default BoardDone;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport BoardToDo from './BoardToDo';\r\nimport BoardInProgress from './BoardInProgress';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport BoardDone from './BoardDone';\r\n// import NewTaskModal from './NewTaskModal';\r\n\r\nconst removeDuplicates = (arr) => {\r\n  return arr?.filter(\r\n    (obj, index) => arr?.findIndex((item) => item.task_id === obj.task_id) === index,\r\n  );\r\n};\r\n\r\nconst BoardTab = () => {\r\n  const { projectId } = useParams();\r\n  const [todos, setTodos] = useState([]);\r\n  const [inProgress, setInProgress] = useState([]);\r\n  const [Done, setDone] = useState([]);\r\n  const [isMemberActive, setIsMemberActive] = useState(false);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['todos'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/employe/list`).then((res) => {\r\n        setIsMemberActive(res.data.is_member_active);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const todofFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 0 || parseInt(taska.status, 10) === 4;\r\n    });\r\n\r\n    const inProgressfFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 1;\r\n    });\r\n\r\n    const DoneFiltered = data?.filter((taska) => {\r\n      return parseInt(taska.status, 10) === 2 || parseInt(taska.status, 10) === 3;\r\n    });\r\n\r\n    setTodos(todofFiltered);\r\n    setInProgress(removeDuplicates(inProgressfFiltered));\r\n    setDone(removeDuplicates(DoneFiltered));\r\n  }, [data]);\r\n\r\n  return (\r\n    <Row>\r\n      {/* <Col lg=\"12\">\r\n        <div className=\"search text-muted\">\r\n          <div className=\"search-input\">\r\n            <MaterialIcon icon=\"search\" />\r\n            <input type=\"text\" placeholder=\"search task ..\" />\r\n          </div>\r\n          <button type=\"button\" className=\"text-dark\" onClick={toggle.bind(null)}>\r\n            <MaterialIcon icon=\"add\" />\r\n            New Task\r\n          </button>\r\n          <NewTaskModal {...{ modal, setModal, toggle }} />\r\n        </div>\r\n      </Col> */}\r\n      {isLoading ? (\r\n        <Col>\r\n          <Card>\r\n            <CardBody className=\"text-center\">\r\n              <h6 className=\"tex-muted\">Loading...</h6>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      ) : (\r\n        <Col>\r\n          {/* <div\r\n            className=\"d-flex  justify-content-between align-items-center mb-2\"\r\n            style={{ borderBottom: '0.7px solid grey' }}\r\n          >\r\n            <div className=\"d-flex align-items-center \">\r\n              <span className=\"fw-bold\">List Task</span>\r\n            </div>\r\n            <div className=\"d-flex gap-4\">\r\n              <span>Filter</span>\r\n              <span>Sort</span>\r\n              <div className=\"input-search\">\r\n                <input type=\"text\" placeholder=\"search..\" />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n          <Row>\r\n            <BoardToDo\r\n              data={todos}\r\n              {...{ isLoading, error, refetch, isRefetching, isMemberActive }}\r\n            />\r\n            <BoardInProgress\r\n              data={inProgress}\r\n              {...{ isLoading, error, refetch, isRefetching, isMemberActive }}\r\n            />\r\n            <BoardDone data={Done} {...{ isLoading, error, refetch, isRefetching }} />\r\n          </Row>\r\n        </Col>\r\n      )}\r\n      {/* // ) : isMemberActive ? ( //{' '}\r\n      <>\r\n        // <BoardToDo data={todos} {...{ isLoading, error, refetch, isRefetching }} />\r\n        // <BoardInProgress data={inProgress} {...{ isLoading, error, refetch, isRefetching }} />\r\n        // <BoardDone data={Done} {...{ isLoading, error, refetch, isRefetching }} />\r\n        //{' '}\r\n      </>\r\n      // ) : ( //{' '}\r\n      <Col>\r\n        //{' '}\r\n        <Card>\r\n          //{' '}\r\n          <CardBody className=\"text-center\">\r\n            //{' '}\r\n            <h6 className=\"tex-muted\">\r\n              // You cannot create a task because you are not an active member. //{' '}\r\n            </h6>\r\n            //{' '}\r\n          </CardBody>\r\n          //{' '}\r\n        </Card>\r\n        //{' '}\r\n      </Col>\r\n      // )} */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BoardTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RoundedTable.scss';\r\n\r\nconst RoundedTable = ({ children }) => {\r\n  return <table className=\"rounded-corners\">{children}</table>;\r\n};\r\n\r\nRoundedTable.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default RoundedTable;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useParams } from 'react-router-dom';\r\n// import MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport RoundedTable from '../../components/roundedTable/RoundedTable';\r\n// import useAuth from '../../hooks/useAuth';\r\n\r\nconst selectedCount = (obj, row) => {\r\n  return obj[row];\r\n};\r\n\r\nconst MemberTab = () => {\r\n  const [totalTask, setTotalTask] = useState();\r\n  const api = useAxios();\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['members'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/members`).then((res) => {\r\n        setTotalTask(res.data.count_task);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  // const addMemberAllowedRole = 'Manager';\r\n\r\n  return (\r\n    <Col>\r\n      <Card className=\"rounded-3\">\r\n        <CardBody>\r\n          {/* {auth.user.roles.includes(addMemberAllowedRole) && (\r\n            <Col className=\"d-flex justify-content-end\" col=\"12\">\r\n              <Button\r\n                className=\"btn d-flex gap-1 align-items-center rounded-5 px-2\"\r\n                outline\r\n                color=\"success\"\r\n                size=\"sm\"\r\n              >\r\n                <MaterialIcon icon=\"add\" style={{ fontSize: '16px' }} />\r\n                Member\r\n              </Button>\r\n            </Col>\r\n          )} */}\r\n          {isLoading ? (\r\n            'Loading...'\r\n          ) : error ? (\r\n            'Something went wrong.'\r\n          ) : data?.length > 0 ? (\r\n            <RoundedTable>\r\n              <>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Position</th>\r\n                    <th>Total Task</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody style={{ overflow: 'hidden' }}>\r\n                  {data?.map((m, i) => (\r\n                    <tr key={m.first_name}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{m.first_name}</td>\r\n                      <td>{m.position_name}</td>\r\n                      <td>{totalTask ? selectedCount(totalTask, m.employe_id.toString()) : '-'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </>\r\n            </RoundedTable>\r\n          ) : (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>No data yet.</h6>\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MemberTab;\r\n","import React from 'react';\r\nimport { Card, CardBody, Table } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\n\r\nconst sortFileByDate = (arr) => {\r\n  return arr.sort(({ created_at: a }, { created_at: b }) => (a < b ? -1 : a > b ? 1 : 0));\r\n};\r\n\r\nconst FileTab = () => {\r\n  const { projectId } = useParams();\r\n\r\n  const api = useAxios();\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['files'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/files`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <Card className=\"rounded-3\">\r\n      <CardBody>\r\n        {isLoading ? (\r\n          'Loading...'\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <Table className=\"no-wrap align-middle\" hover style={{ zIndex: '-1', fontSize: '13px' }}>\r\n            <thead>\r\n              <tr>\r\n                <th width=\"60\">#</th>\r\n                <th width=\"700\">Filename</th>\r\n                <th>User</th>\r\n                <th width=\"200\">Uploaded at</th>\r\n              </tr>\r\n            </thead>\r\n            {data?.length ? (\r\n              <tbody style={{ overflow: 'hidden' }}>\r\n                {sortFileByDate(data)\r\n                  ?.reverse()\r\n                  .map((f, i) => (\r\n                    <tr key={f.file_id}>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        <Link to={`${fileUrl}taskfiles/${f.file_name}`} target=\"blank\">\r\n                          {f.file_name}\r\n                        </Link>\r\n                      </td>\r\n                      <td>{f.employee || '-'}</td>\r\n                      <td>{newDate(f.created_at)}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            ) : (\r\n              <tbody style={{ overflow: 'hidden' }}>\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"text-center\">\r\n                    No data yet.\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FileTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport IndoDate from '../../utils/IndoDate';\r\n\r\nconst ReviewTab = ({ setTotalReview }) => {\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [taskId, setTaskId] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [comments, setComments] = useState();\r\n  const [employeId, setEmployeId] = useState();\r\n  const api = useAxios();\r\n  const [listReview, setListReview] = useState([]);\r\n\r\n  const { isLoading, error, refetch, isRefetching } = useQuery({\r\n    queryKey: ['review'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/level1/review`).then((res) => {\r\n        setListReview(res.data.data);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalReview(listReview.length);\r\n  }, [listReview]);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [projectId]);\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const handleForm = (modeRes, task, employe) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setTaskId(task);\r\n    setEmployeId(employe);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .put(`api/task/${taskId}/status`, {\r\n        employe_id: employeId,\r\n        status: mode === 'approve' ? 3 : 4,\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        alert('success', `Task has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    refetch();\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          // {isLoading ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          listReview.map((task, i) => (\r\n            <Card key={task.approval_id} className=\"custom-card rounded-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      #{i + 1}\r\n                    </Badge>\r\n                    <Badge color=\"info\" className=\"\">\r\n                      {task.first_name}\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(task.send_date)}</span>\r\n                </CardTitle>\r\n                <h5>\r\n                  <strong>{task.task_title}</strong>\r\n                </h5>\r\n                <p>{task.task_desc}</p>\r\n                <span className=\"text-dark\">Attachment:</span>\r\n                <div className=\"\">\r\n                  {task.files.length > 0\r\n                    ? task.files.map((f, idx) => (\r\n                        <div key={f.file_name} className=\"d-flex gap-3\">\r\n                          <span>{idx + 1}.</span>\r\n                          <Link\r\n                            className=\"file-link\"\r\n                            to={`${fileUrl}taskfiles/${f.file_name}`}\r\n                            target=\"blank\"\r\n                          >\r\n                            {f.file_name}\r\n                          </Link>\r\n                        </div>\r\n                      ))\r\n                    : '-'}\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Start at: </span>\r\n                      <br /> {IndoDate(task.start_date)?.split(',')[0]}\r\n                    </div>\r\n                    <div color=\"muted\">\r\n                      <span className=\"text-dark\">Due at: </span>\r\n                      <br /> {IndoDate(task.end_date)?.split(',')[0]}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', task.task_id, task.employe_id)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      color=\"success\"\r\n                      onClick={() => handleForm('approve', task.task_id, task.employe_id)}\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ))\r\n        )}\r\n        {/* <Card>\r\n        <CardBody>\r\n        <CardTitle tag=\"h4\">\r\n        <Badge color=\"success\">Approved</Badge>\r\n        </CardTitle>\r\n        <Table className=\"no-wrap mt-3 align-middle\" hover style={{ zIndex: '-1' }}>\r\n        <thead>\r\n        <tr>\r\n        <th>#</th>\r\n        <th>Employee</th>\r\n        <th>Task</th>\r\n        <th>Attachment</th>\r\n        <th>Approved at</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {data.map((task, i) => (\r\n            <tr key={task.approval_id}>\r\n            <td>{i + 1}</td>\r\n            <td>{task.first_name}</td>\r\n            <td>{task.task_title}</td>\r\n            <td>{task.file}</td>\r\n            <td>{newDate(task.created_at)}</td>\r\n            </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n            </CardBody>\r\n        </Card> */}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewTab.propTypes = {\r\n  setTotalReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewTab;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport newDate from '../../utils/formatDate';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst HandoverTab = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newStage, setNewStage] = useState({});\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const api = useAxios();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const { isLoading, error, data, refetch, isRefetching } = useQuery({\r\n    queryKey: ['review'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${auth?.user.employe_id}/${projectId}/handover`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  const fileUrl = process.env.REACT_APP_BASEURL;\r\n\r\n  const handleConfirm = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api\r\n      .post(`api/project/${data?.history_id}/confirm`, newStage)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        alert('error', err.response.data.error);\r\n      });\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewStage((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading || isRefetching ? (\r\n          <div className=\"d-flex justify-content-center\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            Something went wrong <span className=\"material-icons\">sentiment_very_dissatisfied</span>\r\n          </div>\r\n        ) : (\r\n          data !== null && (\r\n            <Card className=\"custom-card\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Handover project\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.from_division}</strong> to{' '}\r\n                    <strong>{data.to_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <p></p>\r\n                <span className=\"text-dark\">BAST File:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link\r\n                      className=\"file-link\"\r\n                      to={`${fileUrl}project/${data.file}`}\r\n                      target=\"blank\"\r\n                    >\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.from_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      outline\r\n                      onClick={toggle.bind(null)}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>Confirmation</ModalHeader>\r\n        <form onSubmit={handleConfirm}>\r\n          <ModalBody>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6 className=\"fw-bold\">\r\n                Next stage:{' '}\r\n                {data?.current_stage?.phase === 1\r\n                  ? 'Planning'\r\n                  : data?.current_stage?.phase === 2\r\n                  ? 'Execution, Control & Monitoring'\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n            <FormGroup>\r\n              <Label htmlFor=\"desc_stage\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"desc_stage\"\r\n                id=\"desc_stage\"\r\n                placeholder=\"stage description here..\"\r\n                rows=\"3\"\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"start_date\">Start date</Label>\r\n                  <Input type=\"date\" id=\"start_date\" name=\"start_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"end_date\">End date</Label>\r\n                  <Input type=\"date\" id=\"end_date\" name=\"end_date\" onChange={handleChange} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"success\"\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n              // onClick={handleConfirm}\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                  Sending\r\n                </>\r\n              ) : (\r\n                'Send'\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HandoverTab;\r\n","export const level2Progress = (val) => {\r\n  const level3 = val?.level_3;\r\n\r\n  let sum = 0;\r\n  let total = 0;\r\n  if (level3?.length > 0) {\r\n    for (let i = 0; i < level3?.length; i++) {\r\n      sum += level3[i].task_progress;\r\n    }\r\n\r\n    total = sum / level3.length;\r\n  } else {\r\n    total = val?.task_progress;\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nexport const level1Progress = (val) => {\r\n  const level2 = val?.level_2;\r\n\r\n  let sum = 0;\r\n  let total = 0;\r\n\r\n  if (level2?.length > 0) {\r\n    for (let i = 0; i < level2.length; i++) {\r\n      sum += level2Progress(level2[i]);\r\n    }\r\n\r\n    total = sum / level2.length;\r\n  } else {\r\n    total = val?.task_progress;\r\n  }\r\n\r\n  return total;\r\n};\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\nimport { Badge, Button, Card, CardBody, Col, Input, Progress, Row, Spinner } from 'reactstrap';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport TaskPopup from './TaskPopup';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport PDFFile from './PDFFile';\r\nimport TooltipHover from '../../components/atoms/TooltipHover';\r\nimport './ProjectTable.scss';\r\nimport { level1Progress, level2Progress } from '../../utils/countTaskProgress';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\n// import TooltipHover from '../../components/atoms/TooltipHover';\r\n\r\n// const result = (emId) =>\r\n//   emId.filter(\r\n//     (person, index) => index === emId.findIndex((other) => person.employe_id === other.employe_id),\r\n//   );\r\n\r\nconst ActivityTab = () => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [task, setTask] = useState(undefined);\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const [isDirector, setIsDirector] = useState(false);\r\n  const [projectTitle, setProjectTitle] = useState();\r\n  const [filterSearch, setFilterSearch] = useState();\r\n  const [progress, setProgress] = useState(0);\r\n  const api = useAxios();\r\n\r\n  const { search } = useLocation();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['act'],\r\n    queryFn: () =>\r\n      api.get(`api/task/${projectId}/activities/all${search}`).then((res) => {\r\n        setProjectTitle(res.data.project);\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFilterSearch(data);\r\n\r\n    async function fetchProgress() {\r\n      await api\r\n        .post('api/project/progress/collection', { ids: [projectId] })\r\n        .then((res) => {\r\n          setProgress(res.data.data[0]?.progress);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchProgress();\r\n  }, [data]);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  const favoriteAllowedRoles = ['Director'];\r\n  const reportTaskAllowedRoles = ['Manager'];\r\n\r\n  useEffect(() => {\r\n    if (auth?.user.roles.find((role) => favoriteAllowedRoles.includes(role))) {\r\n      setIsDirector(true);\r\n    }\r\n  }, [auth]);\r\n\r\n  const handleSearch = (value) => {\r\n    const filterByTitle = data.filter((item) =>\r\n      item.task_title.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n\r\n    setFilterSearch(filterByTitle);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <Card className=\"rounded-3\">\r\n          <CardBody>\r\n            {isLoading ? (\r\n              'loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  <Col sm=\"12 mb-2\" md=\"6\">\r\n                    <div className=\"d-flex gap-2\">\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"filter_list\" style={{ fontSize: '12px' }} />\r\n                        Sort\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"d-flex align-items-center gap-2 rounded-3\"\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <MaterialIcon icon=\"tune\" style={{ fontSize: '12px' }} />\r\n                        Filters\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                  <Col sm=\"12\" md=\"6\">\r\n                    <div className=\"d-flex gap-3 col-md-6 w-100\">\r\n                      <div className=\"w-100 position-relative\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"rounded-3\"\r\n                          bsSize=\"md\"\r\n                          placeholder=\"Search task...\"\r\n                          onChange={(e) => handleSearch(e.target.value)}\r\n                        />\r\n                        <div className=\"position-absolute top-0 end-0 h-100 p-1\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light w-100 h-100 border-0 rounded-3 text-muted\"\r\n                            aria-describedby={id}\r\n                            variant=\"contained\"\r\n                            onClick={handleClick}\r\n                          >\r\n                            <MaterialIcon icon=\"more_horiz\" style={{ fontSize: '16px' }} />\r\n                          </Button>\r\n                          <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClick={handleClose}\r\n                            anchorOrigin={{\r\n                              vertical: 'bottom',\r\n                              horizontal: 'left',\r\n                            }}\r\n                            transformOrigin={{\r\n                              vertical: 'top',\r\n                              horizontal: 'center',\r\n                            }}\r\n                          >\r\n                            <Typography sx={{ p: 2 }}>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Link to=\"#\">Task</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Employee</Link>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Link to=\"#\">Date</Link>\r\n                                </Row>\r\n                              </Col>\r\n                            </Typography>\r\n                          </Popover>\r\n                        </div>\r\n                      </div>\r\n                      {auth?.user.roles.find((role) => reportTaskAllowedRoles.includes(role)) && (\r\n                        <PDFDownloadLink\r\n                          document={<PDFFile {...{ projectTitle, data }} />}\r\n                          fileName={`Task Report - ${projectTitle?.project_number} - ${projectTitle?.division}`}\r\n                          style={{ textDecoration: 'none' }}\r\n                        >\r\n                          {/* {({ loading }) =>\r\n                          loading ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light d-flex rounded-3\"\r\n                            >\r\n                              Loading...\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              type=\"button\"\r\n                              size=\"sm\"\r\n                              className=\"btn btn-light-info text-info d-flex align-items-center gap-2 rounded-3\"\r\n                            >\r\n                              <MaterialIcon icon=\"picture_as_pdf\" style={{ fontSize: '12px' }} />\r\n                              Report\r\n                            </Button>\r\n                          )\r\n                        } */}\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light-info text-info rounded-3 d-flex py-2\"\r\n                            // size=\"lg\"\r\n                          >\r\n                            <MaterialIcon icon=\"file_download\" style={{ fontSize: '18px' }} />\r\n                            {/* Report */}\r\n                          </Button>\r\n                        </PDFDownloadLink>\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Col sm=\"12 overflow-auto\">\r\n                  <div className=\"d-flex align-items-center justify-content-between mt-2\">\r\n                    <h6 className=\"fw-bold\">List of tasks from {projectTitle?.division}</h6>\r\n                    <div className=\"w-25\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <div style={{ width: '86%' }}>\r\n                          <Progress\r\n                            className=\"\"\r\n                            color=\"success\"\r\n                            value={progress.toFixed()}\r\n                            style={{ height: '12px' }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"fw-bold\">{progress.toFixed()}%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <table className=\"rounded-corners act-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th width=\"30\">#</th>\r\n                        <th colSpan=\"3\" style={{ minWidth: '400px' }}>\r\n                          Task title\r\n                        </th>\r\n                        <th width=\"\">Status</th>\r\n                        <th style={{ minWidth: '100px' }}>Start date</th>\r\n                        <th style={{ minWidth: '100px' }}>Due date</th>\r\n                        <th>Progress</th>\r\n                        <th width=\"100\">PIC</th>\r\n                        {isDirector && <th width=\"50\"></th>}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filterSearch?.length > 0 ? (\r\n                        filterSearch?.map((ts, idx) => (\r\n                          <Fragment key={ts.task_id}>\r\n                            <tr>\r\n                              <td>{idx + 1}.</td>\r\n                              <td\r\n                                colSpan=\"3\"\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => openPopup(ts)}\r\n                              >\r\n                                <span style={{ fontWeight: '600' }}>{ts.task_title}</span>\r\n                                <br></br>\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  {ts?.level_2?.length} subtask\r\n                                </Badge>\r\n                                {'  '}\r\n                                <Badge color=\"light\" className=\"text-muted\">\r\n                                  <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                  {ts.comments}\r\n                                </Badge>\r\n                              </td>\r\n\r\n                              <td>\r\n                                {ts.status === 0 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    To Do\r\n                                  </Badge>\r\n                                ) : ts.status === 1 ? (\r\n                                  <Badge color=\"warning\">In Progress</Badge>\r\n                                ) : ts.status === 2 ? (\r\n                                  <Badge color=\"light\" className=\"text-dark\">\r\n                                    Under Review\r\n                                  </Badge>\r\n                                ) : ts.status === 3 ? (\r\n                                  <Badge color=\"success\">Approved</Badge>\r\n                                ) : (\r\n                                  <Badge color=\"danger\">Revision</Badge>\r\n                                )}\r\n                              </td>\r\n                              <td>{IndoDate(ts.start_date)}</td>\r\n                              <td className={`${isExpired(ts.end_date) ? 'text-danger' : ''}`}>\r\n                                {IndoDate(ts.end_date)}\r\n                              </td>\r\n                              <td>\r\n                                <span className=\"badge bg-light-success text-primary rounded-pill d-inline-block fw-bold\">\r\n                                  {level1Progress(ts)?.toFixed()}%\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"members\">\r\n                                  <div className=\"members-item\">\r\n                                    {ts?.pics?.map(\r\n                                      (pic, i) =>\r\n                                        i < 2 && (\r\n                                          <Fragment key={pic.id}>\r\n                                            <img\r\n                                              id={`tooltip-${pic.id}`}\r\n                                              src={user1}\r\n                                              className=\"ava-pic rounded-circle\"\r\n                                              alt=\"avatar\"\r\n                                              width=\"35\"\r\n                                              height=\"35\"\r\n                                            />\r\n                                            <TooltipHover\r\n                                              title={pic.first_name}\r\n                                              id={pic.id?.toString()}\r\n                                            />\r\n                                          </Fragment>\r\n                                        ),\r\n                                    )}\r\n                                    {ts?.pics?.length > 2 && (\r\n                                      <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                        +{ts.pics.length - 2}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                              {isDirector && (\r\n                                <td className=\"text-center\">\r\n                                  {addingFavorite && taskIdSelected === ts.task_id ? (\r\n                                    <Spinner size=\"sm\" color=\"warning\" />\r\n                                  ) : (\r\n                                    <abbr title=\"Mark task\" style={{ textDecoration: 'none' }}>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"fav-btn\"\r\n                                        onClick={() => handleFavorite(ts.task_id)}\r\n                                      >\r\n                                        <MaterialIcon\r\n                                          icon=\"star\"\r\n                                          className={`${ts.isFavorite && 'is_favorite'}`}\r\n                                        />\r\n                                      </button>\r\n                                    </abbr>\r\n                                  )}\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                            {ts.level_2?.length > 0 &&\r\n                              ts.level_2?.map((st, si) => (\r\n                                <Fragment key={st.task_id}>\r\n                                  <tr key={st.task_id}>\r\n                                    <td></td>\r\n                                    <td width=\"5\">\r\n                                      {idx + 1}.{si + 1}\r\n                                    </td>\r\n                                    <td\r\n                                      colSpan=\"2\"\r\n                                      onClick={() => openPopup(st)}\r\n                                      style={{\r\n                                        cursor: 'pointer',\r\n                                        textAlign: 'left',\r\n                                        fontWeight: '500',\r\n                                      }}\r\n                                    >\r\n                                      {st.task_title}\r\n                                      <br></br>\r\n                                      <Badge color=\"light\" className=\"text-muted\">\r\n                                        {st?.level_3?.length} subtask\r\n                                      </Badge>\r\n                                      {'  '}\r\n                                      <Badge color=\"light\" className=\"text-muted\">\r\n                                        <MaterialIcon icon=\"comment\" style={{ fontSize: '12px' }} />\r\n                                        {st.comments}\r\n                                      </Badge>\r\n                                    </td>\r\n                                    <td>-</td>\r\n                                    <td>{IndoDate(st.start_date)}</td>\r\n                                    <td\r\n                                      className={`${isExpired(st.end_date) ? 'text-danger' : ''}`}\r\n                                    >\r\n                                      {IndoDate(st.end_date)}\r\n                                    </td>\r\n                                    <td>\r\n                                      <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                        {level2Progress(st)?.toFixed()}%\r\n                                      </span>\r\n                                    </td>\r\n                                    <td>\r\n                                      <div className=\"members\">\r\n                                        <div className=\"members-item\">\r\n                                          {st?.pics?.map(\r\n                                            (pic, i) =>\r\n                                              i < 2 && (\r\n                                                <Fragment key={pic.id}>\r\n                                                  <img\r\n                                                    id={`tooltip-${pic.id}`}\r\n                                                    src={user1}\r\n                                                    className=\"ava-pic rounded-circle\"\r\n                                                    alt=\"avatar\"\r\n                                                    width=\"35\"\r\n                                                    height=\"35\"\r\n                                                  />\r\n                                                  <TooltipHover\r\n                                                    title={pic.first_name}\r\n                                                    id={pic.id?.toString()}\r\n                                                  />\r\n                                                </Fragment>\r\n                                              ),\r\n                                          )}\r\n                                          {st?.pics?.length > 2 && (\r\n                                            <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                              +{st.pics.length - 2}\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                    {isDirector && (\r\n                                      <td className=\"text-center\">\r\n                                        {addingFavorite && taskIdSelected === st.task_id ? (\r\n                                          <Spinner size=\"sm\" color=\"warning\" />\r\n                                        ) : (\r\n                                          <abbr\r\n                                            title=\"Mark task\"\r\n                                            style={{ textDecoration: 'none' }}\r\n                                          >\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"fav-btn\"\r\n                                              onClick={() => handleFavorite(st.task_id)}\r\n                                            >\r\n                                              <MaterialIcon\r\n                                                icon=\"star\"\r\n                                                className={`${st.isFavorite && 'is_favorite'}`}\r\n                                              />\r\n                                            </button>\r\n                                          </abbr>\r\n                                        )}\r\n                                      </td>\r\n                                    )}\r\n                                  </tr>\r\n                                  {st.level_3?.length > 0 &&\r\n                                    st.level_3?.map((sst, ssi) => (\r\n                                      <tr key={sst.task_id}>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td width=\"5\">\r\n                                          {idx + 1}.{si + 1}.{ssi + 1}\r\n                                        </td>\r\n                                        <td\r\n                                          onClick={() => openPopup(sst)}\r\n                                          style={{ cursor: 'pointer', textAlign: 'left' }}\r\n                                        >\r\n                                          {sst.task_title}\r\n                                          <br></br>\r\n                                          <Badge color=\"light\" className=\"text-muted\">\r\n                                            <MaterialIcon\r\n                                              icon=\"comment\"\r\n                                              style={{ fontSize: '12px' }}\r\n                                            />\r\n                                            {sst.comments}\r\n                                          </Badge>\r\n                                        </td>\r\n                                        <td>-</td>\r\n                                        <td>{IndoDate(sst.start_date)}</td>\r\n                                        <td\r\n                                          className={`${\r\n                                            isExpired(sst.end_date) ? 'text-danger' : ''\r\n                                          }`}\r\n                                        >\r\n                                          {IndoDate(sst.end_date)}\r\n                                        </td>\r\n                                        <td>\r\n                                          <span className=\"badge bg-light-primary text-primary rounded-pill d-inline-block fw-bold\">\r\n                                            {sst?.task_progress?.toFixed()}%\r\n                                          </span>\r\n                                        </td>\r\n                                        <td>\r\n                                          <div className=\"members\">\r\n                                            <div className=\"members-item\">\r\n                                              {sst?.pics?.map(\r\n                                                (pic, i) =>\r\n                                                  i < 2 && (\r\n                                                    <Fragment key={pic.id}>\r\n                                                      <img\r\n                                                        id={`tooltip-${pic.id}`}\r\n                                                        src={user1}\r\n                                                        className=\"ava-pic rounded-circle\"\r\n                                                        alt=\"avatar\"\r\n                                                        width=\"35\"\r\n                                                        height=\"35\"\r\n                                                      />\r\n                                                      <TooltipHover\r\n                                                        title={pic.first_name}\r\n                                                        id={pic.id?.toString()}\r\n                                                      />\r\n                                                    </Fragment>\r\n                                                  ),\r\n                                              )}\r\n                                              {sst?.pics?.length > 2 && (\r\n                                                <div className=\"member-plus bg-light-info text-info fw-bold\">\r\n                                                  +{sst.pics.length - 2}\r\n                                                </div>\r\n                                              )}\r\n                                            </div>\r\n                                          </div>\r\n                                        </td>\r\n                                        {isDirector && (\r\n                                          <td className=\"text-center\">\r\n                                            {addingFavorite && taskIdSelected === sst.task_id ? (\r\n                                              <Spinner size=\"sm\" color=\"warning\" />\r\n                                            ) : (\r\n                                              <abbr\r\n                                                title=\"Mark task\"\r\n                                                style={{ textDecoration: 'none' }}\r\n                                              >\r\n                                                <button\r\n                                                  type=\"button\"\r\n                                                  className=\"fav-btn\"\r\n                                                  onClick={() => handleFavorite(sst.task_id)}\r\n                                                >\r\n                                                  <MaterialIcon\r\n                                                    icon=\"star\"\r\n                                                    className={`${sst.isFavorite && 'is_favorite'}`}\r\n                                                  />\r\n                                                </button>\r\n                                              </abbr>\r\n                                            )}\r\n                                          </td>\r\n                                        )}\r\n                                      </tr>\r\n                                    ))}\r\n                                </Fragment>\r\n                              ))}\r\n                          </Fragment>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"9\" align=\"center\">\r\n                            No data available\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task }} mode=\"activities\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport newDate from '../../utils/formatDate';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst ReviewBastTab = ({ setTotalBastReview }) => {\r\n  const { auth } = useAuth();\r\n  const { projectId } = useParams();\r\n  const [modal, setModal] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [comments, setComments] = useState();\r\n  const [oldPic, setOldPic] = useState();\r\n  const [notifTo, setNotifTo] = useState();\r\n  const [reviewBy, setReviewBy] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: ['bast-review'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTotalBastReview(10);\r\n  }, [data]);\r\n\r\n  const handleForm = (modeRes, oldPicP, notifToId, byEmploye) => {\r\n    setModal(true);\r\n    setMode(modeRes);\r\n    setOldPic(oldPicP || null);\r\n    setNotifTo(notifToId);\r\n    setReviewBy(byEmploye);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await api\r\n      .post(`api/project/${data?.history_id}/bast/approval`, {\r\n        project_id: projectId,\r\n        old_pic: oldPic,\r\n        notif_to: notifTo,\r\n        review_by: reviewBy,\r\n        status: mode === 'approve' ? 'handover' : 'revision',\r\n        note: comments,\r\n      })\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', `BAST has been ${mode === 'approve' ? 'approved' : 'reviewed'}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    setModal(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        {isLoading ? (\r\n          <Card>\r\n            <CardBody>Loading...</CardBody>\r\n          </Card>\r\n        ) : error ? (\r\n          'Something went wrong.'\r\n        ) : (\r\n          <Card className=\"custom-card\">\r\n            {data && (\r\n              <CardBody>\r\n                <CardTitle tag=\"h4\" className=\"d-flex justify-content-between\">\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Badge color=\"light\" className=\"text-dark\">\r\n                      Review BAST\r\n                    </Badge>\r\n                  </div>\r\n                  <span style={{ fontSize: '14px' }}>{newDate(data.created_at)}</span>\r\n                </CardTitle>\r\n                <div className=\"d-flex  justify-content-center\">\r\n                  <h5>\r\n                    Handover of the project from <strong>{data.old_pic_division}</strong> to{' '}\r\n                    <strong>{data.new_pic_division}</strong>\r\n                  </h5>\r\n                </div>\r\n                <span className=\"text-dark\">BAST file:</span>\r\n                <div className=\"\">\r\n                  <div className=\"d-flex gap-3\">\r\n                    <Link className=\"file-link\" to=\"\" target=\"blank\">\r\n                      {data.file}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-between align-items-center mt-4 border  py-2 px-3\"\r\n                  style={{ borderRadius: '10px' }}\r\n                >\r\n                  <div className=\"d-flex gap-4\">\r\n                    <div className=\"d-flex gap-3 align-items-center\">\r\n                      <img\r\n                        src={user1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-dark fw-bold\">{data.old_pic}</span>\r\n                        <small className=\"text-muted\">{data.old_pic_division}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"warning\"\r\n                      outline\r\n                      onClick={() => handleForm('revision', data.old_pic_id, data.review_by)}\r\n                    >\r\n                      Revision\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      color=\"success\"\r\n                      onClick={() =>\r\n                        handleForm('approve', data.old_pic_id, data.new_pic_id, data.review_by)\r\n                      }\r\n                    >\r\n                      Approve\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            )}\r\n          </Card>\r\n        )}\r\n      </Col>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"md\" fade={false} centered>\r\n        <ModalHeader toggle={toggle.bind(null)}>\r\n          {mode === 'approve' ? 'Approval' : 'Revision'}\r\n        </ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Comment here..\"\r\n                rows=\"3\"\r\n                required\r\n                onChange={(e) => setComments(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color={`${mode === 'approve' ? 'success' : 'warning'}`}\r\n              disabled={loading}\r\n              className=\"d-flex gap-1 align-items-center\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MaterialIcon icon=\"send\" style={{ fontSize: '20px' }} />\r\n                  {mode === 'approve' ? 'Approve' : 'Send'}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nReviewBastTab.propTypes = {\r\n  setTotalBastReview: PropTypes.func,\r\n};\r\n\r\nexport default ReviewBastTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OverviewTab from './OverviewTab';\r\nimport BoardTab from './BoardTab';\r\nimport MemberTab from './MemberTab';\r\nimport FileTab from './FileTab';\r\nimport ReviewTab from './ReviewTab';\r\nimport HandoverTab from './HandoverTab';\r\nimport ActivityTab from './ActivityTab';\r\nimport ReviewBastTab from './ReviewBastTab';\r\n\r\nconst ProjectDetailTab = ({ navActive, setTotalReview, setTotalBastReview, roles }) => {\r\n  return (\r\n    <>\r\n      {navActive === 1 && <OverviewTab />}\r\n      {!roles.includes('Director') && navActive === 2 && <BoardTab />}\r\n      {navActive === 3 && <MemberTab />}\r\n      {navActive === 4 && <FileTab />}\r\n      {navActive === 5 && <ReviewTab {...{ setTotalReview }} />}\r\n      {!roles.includes('Director') && navActive === 6 && <HandoverTab />}\r\n      {navActive === 7 && <ActivityTab />}\r\n      {navActive === 8 && <ReviewBastTab {...{ setTotalBastReview }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nProjectDetailTab.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setTotalReview: PropTypes.func,\r\n  setTotalBastReview: PropTypes.func,\r\n  roles: PropTypes.array,\r\n};\r\n\r\nexport default ProjectDetailTab;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport makeAnimated from 'react-select/animated';\r\nimport Select from 'react-select';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst EditProjectModal = ({ modal, setModal, toggle, data, refetch }) => {\r\n  const [projectData, setProjectData] = useState({});\r\n  const [dataUpdate, setDataUpdate] = useState({});\r\n  const [options, setOptions] = useState({});\r\n  const [partnerOptions, setPartnerOptions] = useState([]);\r\n  const [partner, setPartner] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [anotherBaseId, setAnotherBaseId] = useState(false);\r\n  const [isSavingBaseId, setIsSavingBaseId] = useState(false);\r\n  const [newBaseId, setNewBaseId] = useState();\r\n  const [businessPlan, setBusinessPlan] = useState({});\r\n  const [defaultPartner, setDefaultPartner] = useState({});\r\n  const [defaultBusinessPlan, setDefaultBusinessPlan] = useState();\r\n  const [otherPartner, setOtherPartner] = useState(false);\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const api = useAxios();\r\n\r\n  useEffect(() => {\r\n    setProjectData(data);\r\n    setDataUpdate({\r\n      project_number: data?.project_number,\r\n      project_name: data?.project_name,\r\n      goals: data?.goals,\r\n      estimated_income: data?.estimated_income,\r\n      estimated_cost: data?.estimated_cost,\r\n      base_id: data?.base_id,\r\n      level_id: data?.level_id,\r\n      business_id: data?.business_id,\r\n      category: data?.category,\r\n      start_date: data?.current_stage?.start_date,\r\n      end_date: data?.current_stage?.end_date,\r\n      desc: data?.current_stage?.desc,\r\n      partner: data?.current_stage?.partner_id,\r\n    });\r\n\r\n    setDefaultBusinessPlan({\r\n      value: data?.business_id,\r\n      label: data?.business_desc,\r\n    });\r\n\r\n    setDefaultPartner({\r\n      value: data?.current_stage?.partner_name,\r\n      label: data?.current_stage?.partner_name,\r\n    });\r\n  }, [data]);\r\n\r\n  const fetchBusinessOptions = async () => {\r\n    await api\r\n      .get(`api/project/business/options`)\r\n      .then((res) => setOptions(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchPartnerOptions() {\r\n      await api\r\n        .get(`api/list-mitra`)\r\n        .then((res) => setPartnerOptions(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchBusinessOptions();\r\n    fetchPartnerOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    partnerOptions.unshift({ label: 'TAMBAH LAINNYA', value: 'LAINNYA' });\r\n  }, [partnerOptions]);\r\n\r\n  useEffect(() => {\r\n    if (partner?.value === 'LAINNYA') {\r\n      setOtherPartner(true);\r\n      setPartner({});\r\n    }\r\n  }, [partner]);\r\n\r\n  const handleChange = (e) => {\r\n    setDataUpdate((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataUpdate?.base_id === 'another') {\r\n      setAnotherBaseId(true);\r\n    }\r\n  }, [dataUpdate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    dataUpdate.stage_id = projectData?.current_stage?.stage_id;\r\n    dataUpdate.partner =\r\n      Object.keys(partner)?.length !== 0\r\n        ? partner.value\r\n        : dataUpdate?.partner\r\n        ? dataUpdate?.partner\r\n        : data?.current_stage?.partner_name;\r\n    dataUpdate.business_id =\r\n      Object.keys(businessPlan)?.length !== 0 ? businessPlan.value : data?.business_id;\r\n\r\n    await api\r\n      .put(`api/project/${projectData?.project_id}/update`, dataUpdate)\r\n      .then(() => {\r\n        refetch();\r\n        alert('success', 'Project has been updated.');\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setOtherPartner(false);\r\n    setLoading(false);\r\n    setModal(false);\r\n  };\r\n\r\n  const submitBaseId = async () => {\r\n    setIsSavingBaseId(true);\r\n    if (newBaseId) {\r\n      await api\r\n        .post('api/project/activity-base/add', { activity_name: newBaseId })\r\n        .then((res) => {\r\n          fetchBusinessOptions();\r\n          alert('success', res.data.message);\r\n        })\r\n        .catch(() => {\r\n          alert('error', 'Something went wrong');\r\n        });\r\n    } else {\r\n      alert('error', 'Field cannot be empty');\r\n    }\r\n    setNewBaseId();\r\n    setAnotherBaseId(false);\r\n    setIsSavingBaseId(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={modal} toggle={toggle.bind(null)} size=\"lg\" fade={false}>\r\n        <ModalHeader toggle={toggle.bind(null)}>Update Project</ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label htmlFor=\"project_number\">Project Number</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"project_number\"\r\n                id=\"project_number\"\r\n                placeholder=\"Project number here\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.project_number || ''}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"project_name\">Project name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"project_name\"\r\n                id=\"project_name\"\r\n                placeholder=\"Project name here\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.project_name}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"start_date\">Start date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    id=\"start_date\"\r\n                    name=\"start_date\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.start_date || ''}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"end_date\">End date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    id=\"end_date\"\r\n                    name=\"end_date\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.end_date || ''}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <FormGroup>\r\n              <Label htmlFor=\"goals\">Goals</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                id=\"goals\"\r\n                name=\"goals\"\r\n                placeholder=\"Explain the goals of the project here\"\r\n                rows=\"3\"\r\n                onChange={handleChange}\r\n                defaultValue={projectData?.goals || ''}\r\n              />\r\n            </FormGroup>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"level_id\">Activity level</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    id=\"level_id\"\r\n                    name=\"level_id\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.level_id || ''}\r\n                  >\r\n                    <option disabled value=\"al\">\r\n                      - Select -\r\n                    </option>\r\n                    {options?.activity_level?.map((al) => (\r\n                      <option key={al.level_id} value={al.level_id}>\r\n                        {al.level_desc}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"category\">Category</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    id=\"category\"\r\n                    name=\"category\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.category || ''}\r\n                  >\r\n                    <option disabled value=\"cat\">\r\n                      - Select -\r\n                    </option>\r\n                    <option value=\"business\">Business</option>\r\n                    <option value=\"non-business\">Non-business</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            {(projectData?.category === 'business' || dataUpdate?.category === 'business') && (\r\n              <>\r\n                <FormGroup>\r\n                  <Label for=\"partner\">Partner</Label>\r\n                  {otherPartner ? (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"partner\"\r\n                      id=\"partner\"\r\n                      placeholder=\"Type here..\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Select\r\n                      components={animatedComponents}\r\n                      options={partnerOptions}\r\n                      defaultValue={defaultPartner}\r\n                      onChange={(choice) => setPartner(choice)}\r\n                    />\r\n                  )}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"desc\">Description for Initiation & Definition phase</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    id=\"desc\"\r\n                    name=\"desc\"\r\n                    placeholder=\"Description of the phase here\"\r\n                    rows=\"3\"\r\n                    onChange={handleChange}\r\n                    defaultValue={projectData?.current_stage?.desc}\r\n                  />\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"estimated_income\">Estimated income</Label>\r\n                      <InputGroup>\r\n                        <InputGroupText>Rp.</InputGroupText>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          id=\"estimated_income\"\r\n                          name=\"estimated_income\"\r\n                          onChange={handleChange}\r\n                          defaultValue={projectData?.estimated_income || ''}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"estimated_cost\">Estimated cost</Label>\r\n                      <InputGroup>\r\n                        <InputGroupText>Rp.</InputGroupText>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          id=\"estimated_cost\"\r\n                          name=\"estimated_cost\"\r\n                          onChange={handleChange}\r\n                          defaultValue={projectData?.estimated_cost || ''}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n            {anotherBaseId ? (\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"activity_name\">Add Activity Base</Label>\r\n                    <div className=\"d-flex gap-3\">\r\n                      <div style={{ width: '70%' }}>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"activity_name\"\r\n                          id=\"activity_name\"\r\n                          placeholder=\"Type here..\"\r\n                          onChange={(e) => setNewBaseId(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        className=\"d-flex align-items-center\"\r\n                        type=\"button\"\r\n                        color=\"success\"\r\n                        size=\"sm\"\r\n                        onClick={submitBaseId}\r\n                        disabled={isSavingBaseId}\r\n                      >\r\n                        {isSavingBaseId ? (\r\n                          <>\r\n                            <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                            Loading\r\n                          </>\r\n                        ) : (\r\n                          'Save'\r\n                        )}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"button\"\r\n                        outline\r\n                        onClick={() => setAnotherBaseId(false)}\r\n                        disabled={isSavingBaseId}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"base_id\">Activity base</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"base_id\"\r\n                      name=\"base_id\"\r\n                      defaultValue={projectData?.base_id || ''}\r\n                      onChange={handleChange}\r\n                      style={{ textOverflow: 'ellipsis' }}\r\n                    >\r\n                      <option disabled value=\"ab\">\r\n                        - Select -\r\n                      </option>\r\n                      {options?.activity_base?.map((ab) => (\r\n                        <option\r\n                          key={ab.base_id}\r\n                          value={ab.base_id}\r\n                          style={{\r\n                            width: '4rem',\r\n                            textOverflow: 'ellipsis',\r\n                          }}\r\n                        >\r\n                          {ab.base_description}\r\n                        </option>\r\n                      ))}\r\n                      <option value=\"another\">Tambah Lainnya</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"business_id\" className=\"text-muted\">\r\n                      Business plan\r\n                    </Label>\r\n                    {dataUpdate?.base_id === '3' || projectData?.base_id?.toString() === '3' ? (\r\n                      <Select\r\n                        components={animatedComponents}\r\n                        options={options?.business_plan}\r\n                        defaultValue={defaultBusinessPlan}\r\n                        onChange={(choice) => setBusinessPlan(choice)}\r\n                      />\r\n                    ) : (\r\n                      <Input type=\"select\" disabled defaultValue=\"\" />\r\n                    )}\r\n                    {/* <Input\r\n                      type=\"select\"\r\n                      id=\"business_id\"\r\n                      name=\"business_id\"\r\n                      disabled={dataUpdate?.base_id?.toString() !== '3'}\r\n                      onChange={handleChange}\r\n                      defaultValue={projectData?.business_id || ''}\r\n                    >\r\n                      {projectData?.base_id?.toString() === '3' && (\r\n                        <>\r\n                          <option value=\"\">- Select -</option>\r\n                          {options?.business_plan?.map((bp) => (\r\n                            <option key={bp.business_id} value={bp.business_id}>\r\n                              {bp.business_desc}\r\n                            </option>\r\n                          ))}\r\n                        </>\r\n                      )}\r\n                    </Input> */}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"info\" disabled={loading}>\r\n              {loading ? (\r\n                <>\r\n                  <Spinner className=\"me-2\" size=\"sm\" color=\"light\" />\r\n                  Loading ...\r\n                </>\r\n              ) : (\r\n                'Update'\r\n              )}\r\n            </Button>\r\n            <Button color=\"secondary\" outline onClick={toggle.bind(null)}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nEditProjectModal.propTypes = {\r\n  modal: PropTypes.bool,\r\n  setModal: PropTypes.func,\r\n  toggle: PropTypes.any,\r\n  data: PropTypes.object,\r\n  refetch: PropTypes.func,\r\n};\r\n\r\nexport default EditProjectModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport './Project.scss';\r\nimport EditProjectModal from './EditProjectModal';\r\nimport { alert } from '../../components/atoms/Toast';\r\n\r\nconst allowedRolesForReview = ['Manager', 'Director'];\r\nconst allowedRolesForBastReview = ['Director'];\r\n\r\nconst ProjectNav = ({ navActive, setNavActive, totalReview, totalBastReview }) => {\r\n  const [currentTotalReview, setCurrentTotalReview] = useState('');\r\n  const [currentTotalBastReview, setCurrentTotalBastReview] = useState(0);\r\n  const { auth } = useAuth();\r\n  const { roles } = auth.user;\r\n  const api = useAxios();\r\n  const { projectId } = useParams();\r\n  const [actionMenu, setActionMenu] = useState(false);\r\n  const [isBusiness, setIsBusiness] = useState();\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const navigate = useNavigate();\r\n  // const [actionMenu, setActionMenu] = useState(undefined);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const toggle2 = () => {\r\n    setModal2(!modal2);\r\n  };\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n\r\n  const queryTo = queryParams.get('to');\r\n\r\n  useEffect(() => {\r\n    if (queryTo === 'review') {\r\n      setNavActive(5);\r\n    } else if (queryTo === 'handover') {\r\n      setNavActive(6);\r\n    } else if (queryTo === 'overview') {\r\n      setNavActive(1);\r\n    } else if (queryTo === 'activities') {\r\n      setNavActive(7);\r\n    } else if (queryTo === 'bast-review') {\r\n      setNavActive(8);\r\n    }\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalReview() {\r\n      await api\r\n        .get(`api/task/${projectId}/level1/review`)\r\n        .then((res) => setCurrentTotalReview(res.data.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForReview.includes(role))) {\r\n      fetchTotalReview();\r\n    }\r\n  }, [totalReview]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalBastReview() {\r\n      await api\r\n        .get(`api/project/${projectId}/${auth?.user.employe_id}/bast/review`)\r\n        .then((res) => {\r\n          setCurrentTotalBastReview(res.data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    if (roles?.find((role) => allowedRolesForBastReview.includes(role))) {\r\n      fetchTotalBastReview();\r\n    }\r\n  }, [totalBastReview]);\r\n\r\n  const { isLoading, data, refetch } = useQuery({\r\n    queryKey: ['project-number'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${projectId}`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data?.category === 'business') {\r\n      setIsBusiness(true);\r\n    } else {\r\n      setIsBusiness(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleUpdate = () => {\r\n    setModal(true);\r\n    setActionMenu(undefined);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setModal2(!modal2);\r\n    setActionMenu(false);\r\n  };\r\n\r\n  const deleteProject = async () => {\r\n    setIsDeleting(true);\r\n    await api\r\n      .delete(`api/project/${projectId}`)\r\n      .then(() => {\r\n        alert('success', 'Project has been deleted.');\r\n        navigate('/projects');\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Something went wrong.');\r\n      });\r\n    setModal2(!modal2);\r\n    setIsDeleting(false);\r\n  };\r\n\r\n  const BoardAllowedRoles = ['Staff', 'Manager'];\r\n  const MembersAllowedRoles = ['Staff', 'Manager', 'Director'];\r\n  const ActivitiesAllowedRoles = ['Manager', 'Director'];\r\n  const FilesAllowedRoles = ['Staff', 'Manager'];\r\n  const BASTReviewAllowedRoles = ['Director'];\r\n  const BASTAndReviewNotAllowedRoles = 'Presdir';\r\n  const ReviewTaskAllowedRoles = ['Manager', 'Director'];\r\n  const HandoverAllowedRoles = ['Manager'];\r\n\r\n  return (\r\n    <>\r\n      <Col className=\"nav-container mb-3\">\r\n        <Row sm=\"12\" lg=\"8\" className=\"project-nav overflow-auto\">\r\n          <Link\r\n            className={`${navActive === 1 && 'active'} text-muted fw-bold`}\r\n            onClick={() => setNavActive(1)}\r\n          >\r\n            Overview\r\n          </Link>\r\n          {auth?.user?.roles.find((role) => BoardAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 2 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(2)}\r\n            >\r\n              Board\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => ActivitiesAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 7 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(7)}\r\n            >\r\n              Activities\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => FilesAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 4 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(4)}\r\n              >\r\n                Files\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => BASTReviewAllowedRoles.includes(role)) &&\r\n            !auth?.user?.roles.includes(BASTAndReviewNotAllowedRoles) && (\r\n              <Link\r\n                className={`${navActive === 8 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(8)}\r\n              >\r\n                BAST Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalBastReview ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalBastReview?.length}\r\n                </div>\r\n              </Link>\r\n            )}\r\n          {auth?.user?.roles.find((role) => ReviewTaskAllowedRoles.includes(role)) && (\r\n            <>\r\n              <Link\r\n                className={`${navActive === 5 && 'active'} text-muted fw-bold`}\r\n                onClick={() => setNavActive(5)}\r\n              >\r\n                Review{' '}\r\n                <div\r\n                  color=\"danger\"\r\n                  className={`count ${\r\n                    currentTotalReview?.length > 0 ? 'bg-danger text-white' : 'bg-light text-dark'\r\n                  }`}\r\n                >\r\n                  {currentTotalReview?.length}\r\n                </div>\r\n              </Link>\r\n            </>\r\n          )}\r\n          {auth?.user?.roles.find((role) => HandoverAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 6 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(6)}\r\n            >\r\n              Handover{' '}\r\n            </Link>\r\n          )}\r\n          {auth?.user?.roles.find((role) => MembersAllowedRoles.includes(role)) && (\r\n            <Link\r\n              className={`${navActive === 3 && 'active'} text-muted fw-bold`}\r\n              onClick={() => setNavActive(3)}\r\n            >\r\n              Members\r\n            </Link>\r\n          )}\r\n        </Row>\r\n        <Row\r\n          sm=\"12\"\r\n          style={{\r\n            fontSize: '20px',\r\n            marginRight: '10px',\r\n            textAlign: 'right',\r\n            minWidth: '35%',\r\n          }}\r\n        >\r\n          <span className=\"fw-bold\">{isLoading ? 'Loading..' : data?.project_number}</span>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Card className=\"rounded-3 mb-3\">\r\n        <CardBody>\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <Row>\r\n              <Col lg=\"8\">\r\n                <Row md=\"12\">\r\n                  <h5 className=\"fw-bold\">{data?.project_name}</h5>\r\n                </Row>\r\n                {isBusiness ? (\r\n                  <Row lg=\"12\">\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"manage_accounts\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Partner\r\n                          </span>\r\n                          <small className=\"fw-bold\">\r\n                            {data?.current_stage?.partner_name || '-'}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"handshake\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Schema\r\n                          </span>\r\n                          <small className=\"fw-bold\">\r\n                            {data?.current_stage?.schema === 'jo'\r\n                              ? 'Join Operational'\r\n                              : data?.current_stage?.schema === 'jv'\r\n                              ? 'Join Venture'\r\n                              : '-'}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col sm=\"12 mb-2\" md=\"4\">\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <MaterialIcon\r\n                          icon=\"play_circle_outline\"\r\n                          className=\"text-muted\"\r\n                          style={{ fontSize: '28px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span\r\n                            className=\"text-muted\"\r\n                            style={{ fontSize: '10px', marginBottom: '-4px' }}\r\n                          >\r\n                            Phase\r\n                          </span>\r\n                          <small className=\"fw-bold\">{data?.current_stage?.phase}</small>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  <Row lg=\"12\">\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <MaterialIcon icon=\"work_off\" style={{ fontSize: '18px' }} />\r\n                      <small className=\"fw-bold\">Non-business</small>\r\n                    </div>\r\n                  </Row>\r\n                )}\r\n              </Col>\r\n              <Col lg=\"4\" className=\"d-flex align-items-center justify-content-end\">\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <div\r\n                    className=\"d-flex flex-column align-items-end\"\r\n                    style={{ marginLeft: '10px' }}\r\n                  >\r\n                    <small className=\"fw-bold\">{data?.pic_active.first_name}</small>\r\n                    <span className=\"fw-bold\" style={{ fontSize: '14px' }}>\r\n                      {data?.pic_active.organization_name}\r\n                    </span>\r\n                    {/* {data?.category === 'business' && (\r\n                      <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block fw-bold\">\r\n                        <div className=\"d-flex justify-content-center gap-1 align-items-center\">\r\n                          <MaterialIcon icon=\"play_circle_outline\" style={{ fontSize: '12px' }} />\r\n                          {data?.current_stage??.phase}\r\n                        </div>\r\n                      </span>\r\n                    )} */}\r\n                  </div>\r\n                  <img src={user1} className=\"rounded-circle\" alt=\"avatar\" width=\"35\" height=\"35\" />\r\n                  {auth?.user.first_name === data?.created_by ? (\r\n                    <div className=\"action-table\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn d-flex\"\r\n                        onClick={() => setActionMenu(true)}\r\n                      >\r\n                        <MaterialIcon icon=\"more_vert\" />\r\n                      </button>\r\n                      {actionMenu && (\r\n                        <>\r\n                          <div className=\"action-overlay\" onClick={() => setActionMenu(false)} />\r\n                          <div className=\"action-options\">\r\n                            <Link type=\"button\" className=\"text-muted\" onClick={handleUpdate}>\r\n                              <MaterialIcon icon=\"update\" />\r\n                              Update\r\n                            </Link>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"text-muted fw-bold\"\r\n                              onClick={handleDelete}\r\n                            >\r\n                              <MaterialIcon icon=\"delete\" />\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n                <EditProjectModal {...{ modal, setModal, toggle, data, refetch }} />\r\n                <Modal isOpen={modal2} toggle={toggle2.bind(null)} centered>\r\n                  <ModalHeader toggle={toggle2.bind(null)}>Confirmation</ModalHeader>\r\n                  <ModalBody>\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                      <h4>{data?.project_name}</h4>\r\n                      Are you sure you want to delete this project?\r\n                    </div>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"danger\" size=\"sm\" onClick={deleteProject} disabled={isDeleting}>\r\n                      {isDeleting ? 'Deleting..' : 'Yes'}\r\n                    </Button>\r\n                    <Button color=\"secondary\" size=\"sm\" outline onClick={toggle2.bind(null)}>\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nProjectNav.propTypes = {\r\n  navActive: PropTypes.any,\r\n  setNavActive: PropTypes.func,\r\n  totalReview: PropTypes.number,\r\n  totalBastReview: PropTypes.number,\r\n};\r\n\r\nexport default ProjectNav;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  task: ['satu', 'dua'],\r\n};\r\n\r\nexport const TaskContext = createContext(INITIAL_STATE);\r\n\r\nconst TaskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TASK':\r\n      return {\r\n        task: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TaskContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(TaskReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        task: state.task,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nTaskContextProvider.propTypes = {\r\n  children: PropTypes.element,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport ProjectDetailTab from './ProjectDetailTab';\r\nimport './ProjectDetail.scss';\r\nimport ProjectNav from './ProjectNav';\r\nimport { TaskContextProvider } from '../../context/TaskContext';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst ProjectDetail = () => {\r\n  const { auth } = useAuth();\r\n  const { roles } = auth?.user;\r\n  const [navActive, setNavActive] = useState(2);\r\n  const [totalReview, setTotalReview] = useState(0);\r\n  const [totalBastReview, setTotalBastReview] = useState(0);\r\n  // const [isOwner, setIsOwner] = useState();\r\n\r\n  useEffect(() => {\r\n    if (roles.includes('Director')) {\r\n      setNavActive(1);\r\n    }\r\n  }, [roles]);\r\n\r\n  // const { data } = useQuery({\r\n  //   queryKey: ['employe'],\r\n  //   queryFn: () =>\r\n  //     api.get(`api/employe/${auth?.user.employe_id}`).then((res) => {\r\n  //       setIsOwner()\r\n  //       return res.data.data;\r\n  //     }),\r\n  // });\r\n\r\n  // console.log(data);\r\n\r\n  return (\r\n    <TaskContextProvider>\r\n      <>\r\n        <ProjectNav {...{ navActive, setNavActive, totalReview, totalBastReview }} />\r\n        <ProjectDetailTab {...{ navActive, setTotalReview, setTotalBastReview, roles }} />\r\n      </>\r\n    </TaskContextProvider>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n","const IndoDate = (d) => {\r\n  const date = new Date(d);\r\n  //   const hari = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'];\r\n  const bulan = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'Mei',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Des',\r\n  ];\r\n\r\n  return `${date.getDate()} ${bulan[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\n\r\nexport default IndoDate;\r\n","const isExpired = (val) => {\r\n  const today = new Date();\r\n  const end = new Date(val);\r\n  const result = (end - today) / (1000 * 60 * 60 * 24);\r\n  return result.toFixed() < 1;\r\n};\r\n\r\nexport default isExpired;\r\n","const rupiah = (number) => {\r\n  return new Intl.NumberFormat('id-ID', {\r\n    style: 'currency',\r\n    currency: 'IDR',\r\n  }).format(number);\r\n};\r\n\r\nexport default rupiah;\r\n","var _excluded = [\"className\", \"cssModule\", \"tag\", \"type\", \"size\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Dropdown from './Dropdown';\nimport { InputGroupContext } from './InputGroupContext';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Sets size of InputGroup */\n  size: PropTypes.string,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  type: PropTypes.string\n};\nfunction InputGroup(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    type = props.type,\n    size = props.size,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\".concat(size) : null), cssModule);\n  if (props.type === 'dropdown') {\n    return /*#__PURE__*/React.createElement(Dropdown, _extends({}, attributes, {\n      className: classes\n    }));\n  }\n  return /*#__PURE__*/React.createElement(InputGroupContext.Provider, {\n    value: {\n      insideInputGroup: true\n    }\n  }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  })));\n}\nInputGroup.propTypes = propTypes;\nexport default InputGroup;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction InputGroupText(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'span' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nInputGroupText.propTypes = propTypes;\nexport default InputGroupText;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction ModalFooter(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nModalFooter.propTypes = propTypes;\nexport default ModalFooter;"],"names":["_ref","data","color","_jsx","className","children","_jsxs","viewBox","concat","d","strokeDasharray","x","y","style","fontSize","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","textAlign","text","margin","image","marginVertical","marginHorizontal","width","height","header","marginBottom","fontWeight","pageNumber","position","bottom","left","right","printAt","table","display","borderStyle","borderWidth","borderRightWidth","borderBottomWidth","tableRow","flexDirection","tableCol","borderLeftWidth","borderTopWidth","tableCell","marginTop","marginLeft","marginRight","today","currentDate","Date","toDateString","toLocaleString","split","projectTitle","Document","Page","backgroundColor","Text","fixed","project_name","partner","division","phase","schema","View","map","item","i","_item$pics","_item$level_","Fragment","task_title","status","end_date","pics","p","first_name","id","level_2","st","_st$pics","task_id","render","_ref2","totalPages","_excluded","_extends","Object","assign","bind","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","propTypes","animated","PropTypes","bar","barAriaLabelledBy","barAriaValueText","barClassName","barStyle","cssModule","max","min","multi","striped","tag","tagPropType","Progress","props","_props$value","_props$min","_props$max","_props$tag","Tag","_props$style","_props$barStyle","attributes","percent","toNumber","progressClasses","mapToCssModules","classNames","progressBarProps","role","React","animatedComponents","makeAnimated","remaininDays","endDate","todayBad","day","month","year","todayMerge","getTime","OverviewTab","_data$current_stage2","_data$current_stage3","_data$current_stage4","_data$current_stage5","_data$current_stage6","auth","useAuth","projectId","useParams","history","setHistory","useState","modal","setModal","newPic","setNewPic","listEmployee","setListEmploye","loading","setLoading","bst","setBst","activePhase","setActivePhase","undefined","selectedSchema","setSelectedSchema","isBusiness","setIsBusiness","partnerOptions","setPartnerOptions","selectedPartner","setSelectedPartner","progress","setProgress","taskByStatus","setTaskByStatus","todo","inprogress","underReview","done","api","useAxios","toggle","isLoading","error","useQuery","queryKey","queryFn","get","then","res","useEffect","_data$task_by_active_","_data$task_by_active_2","_data$task_by_active_3","_data$task_by_active_4","_data$current_stage","todofFiltered","task_by_active_user","task","parseInt","inProgressfFiltered","doneFiltered","underReviewFiltered","current_stage","phase_id","category","async","post","ids","_res$data$data$","catch","err","console","log","fetchProgress","fetsHistory","fetchEmployees","allTaskPermission","fetchPartnerOptions","_Fragment","Col","lg","Card","CardBody","Row","CardTitle","desc","goals","level_desc","base_description","trim","substring","IndoDate","start_date","borderRadius","src","user1","alt","pic_active","rupiah","estimated_cost","estimated_income","h","_auth$user","organization_name","history_desc","user","roles","find","includes","Link","to","organization_id","textDecoration","active","newDate","created_at","history_id","img","TooltipHover","toString","toFixed","MaterialIcon","icon","Button","type","disabled","total_progress","outline","onClick","Modal","isOpen","size","fade","centered","ModalHeader","onSubmit","e","preventDefault","project_id","new_pic","file","headers","alert","ModalBody","FormGroup","Label","Input","name","defaultValue","for","onChange","Select","components","options","choice","htmlFor","files","ModalFooter","Spinner","setNewTaskOpen","setAddSubtaskOpen","refetch","taskId","setTask","assignedEmployees","setAssignedEmployees","navigate","useNavigate","employe_id","label","handleChange","prev","closeForm","task_pic","task_parent","arrayId","em","encType","placeholder","required","rows","assigneModal","isMulti","addSubtaskOpen","updating","setUpdating","taskIdActive","setTaskIdActive","setStatus","openPopup","selectedTask","handleTaskStatus","taskStatus","put","response","menuOptions","td","_td$level_","_td$pics","_td$pics2","Badge","task_progress","pic","ActionMenu","action","comments","TaskForm","l2","_l2$level_","CircularPercentage","level_3","l3","isExpired","idx","TaskPopup","isRefetching","isMemberActive","newTaskOpen","block","BoardTask","removeDuplicates","arr","index","findIndex","BoardTab","todos","setTodos","inProgress","setInProgress","Done","setDone","setIsMemberActive","is_member_active","taska","DoneFiltered","BoardToDo","BoardInProgress","BoardDone","MemberTab","totalTask","setTotalTask","count_task","RoundedTable","overflow","m","position_name","row","selectedCount","FileTab","_sortFileByDate","Table","hover","zIndex","sort","a","b","reverse","f","process","file_name","employee","file_id","colSpan","setTotalReview","mode","setMode","setTaskId","setComments","employeId","setEmployeId","listReview","setListReview","handleForm","modeRes","employe","_IndoDate","_IndoDate2","send_date","task_desc","approval_id","Form","note","HandoverTab","newStage","setNewStage","from_division","to_division","old_pic","message","md","level2Progress","val","level3","sum","total","level1Progress","level2","ActivityTab","taskIdSelected","setTaskIdSelected","addingFavorite","setAddingFavorite","isDirector","setIsDirector","setProjectTitle","filterSearch","setFilterSearch","search","useLocation","project","handleFavorite","favoriteAllowedRoles","reportTaskAllowedRoles","anchorEl","setAnchorEl","open","Boolean","sm","bsSize","filterByTitle","toLowerCase","handleSearch","variant","event","currentTarget","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","sx","PDFDownloadLink","document","PDFFile","fileName","project_number","minWidth","ts","_ts$level_","_level1Progress","_ts$pics","_ts$pics2","_ts$level_2","_ts$level_3","cursor","_pic$id","isFavorite","si","_st$level_","_level2Progress","_st$pics2","_st$level_2","_st$level_3","_pic$id2","sst","ssi","_sst$task_progress","_sst$pics","_sst$pics2","_pic$id3","align","setTotalBastReview","oldPic","setOldPic","notifTo","setNotifTo","reviewBy","setReviewBy","oldPicP","notifToId","byEmploye","old_pic_division","new_pic_division","old_pic_id","review_by","new_pic_id","notif_to","navActive","ReviewTab","ReviewBastTab","_projectData$current_2","_projectData$current_3","_options$activity_lev","_projectData$current_4","_options$activity_bas","_projectData$base_id","projectData","setProjectData","dataUpdate","setDataUpdate","setOptions","setPartner","anotherBaseId","setAnotherBaseId","isSavingBaseId","setIsSavingBaseId","newBaseId","setNewBaseId","businessPlan","setBusinessPlan","defaultPartner","setDefaultPartner","defaultBusinessPlan","setDefaultBusinessPlan","otherPartner","setOtherPartner","base_id","level_id","business_id","partner_id","business_desc","partner_name","fetchBusinessOptions","unshift","_projectData$current_","_Object$keys","_data$current_stage7","_Object$keys2","stage_id","activity_level","al","InputGroup","InputGroupText","activity_name","textOverflow","activity_base","ab","business_plan","allowedRolesForReview","allowedRolesForBastReview","_auth$user2","_auth$user3","_auth$user4","_auth$user5","_auth$user6","_auth$user7","_auth$user8","setNavActive","totalReview","totalBastReview","currentTotalReview","setCurrentTotalReview","currentTotalBastReview","setCurrentTotalBastReview","actionMenu","setActionMenu","modal2","setModal2","isDeleting","setIsDeleting","toggle2","queryParams","URLSearchParams","window","location","queryTo","fetchTotalReview","fetchTotalBastReview","BoardAllowedRoles","MembersAllowedRoles","ActivitiesAllowedRoles","FilesAllowedRoles","BASTReviewAllowedRoles","ReviewTaskAllowedRoles","HandoverAllowedRoles","created_by","handleUpdate","handleDelete","EditProjectModal","delete","INITIAL_STATE","TaskContext","createContext","TaskReducer","state","payload","TaskContextProvider","dispatch","useReducer","Provider","ProjectDetail","ProjectNav","ProjectDetailTab","date","getDate","getMonth","getFullYear","number","Intl","NumberFormat","currency","format","classes","Dropdown","InputGroupContext","insideInputGroup"],"sourceRoot":""}