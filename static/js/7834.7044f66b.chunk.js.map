{"version":3,"file":"static/js/7834.7044f66b.chunk.js","mappings":"8JAIA,MAmFA,EAnF2BA,IAAsB,IAArB,KAAEC,EAAI,MAAEC,GAAOF,EACzC,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,OACEC,QAAQ,YACRH,UAAS,kBAAAI,OAA6B,MAATP,EAAe,QAAmB,MAATA,EAAe,OAASC,GAAQG,SAAA,EAEtFF,EAAAA,EAAAA,KAAA,QACEC,UAAU,YACVK,EAAE,uFAIJN,EAAAA,EAAAA,KAAA,QACEC,UAAU,SACVM,gBAAe,GAAAF,OAAKP,EAAI,SACxBQ,EAAE,sFAIM,MAATR,GACCE,EAAAA,EAAAA,KAAA,QAAMQ,EAAE,KAAKC,EAAE,QAAQR,UAAU,aAAaS,MAAO,CAAEC,SAAU,QAAST,SAAC,YAI3EC,EAAAA,EAAAA,MAAA,QAAMK,EAAE,KAAKC,EAAE,QAAQR,UAAU,aAAYC,SAAA,CAC1CJ,EAAK,aA+CV,C,mCC9EV,MAqBA,EArBkBQ,IAChB,MAAMM,EAAO,IAAIC,KAAKP,GAiBtB,MAAM,GAAND,OAAUO,EAAKE,UAAS,KAAAT,OAfV,CACZ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGgCO,EAAKG,YAAW,KAAAV,OAAIO,EAAKI,cAAa,C,mCClB1E,MAOA,EAPmBC,IACjB,MAAMC,EAAQ,IAAIL,KAGlB,QAFY,IAAIA,KAAKI,GACCC,GAAK,OACbC,UAAY,CAAC,C,8OCO7B,MAuOA,EAvOoBC,KAAO,IAADC,EAAAC,EAAAC,EACxB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,MACVC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAkBC,IAAuBJ,EAAAA,EAAAA,aACzCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,IAC3CO,GAAMC,EAAAA,EAAAA,MAEN,UAAEC,EAAS,MAAEC,EAAK,KAAExC,IAASyC,EAAAA,EAAAA,GAAS,CAC1CC,SAAU,CAAC,gBACXC,QAASA,KAAA,IAAAC,EAAA,OACPP,EACGQ,IAAI,GAADtC,OAEI,OAAJmB,QAAI,IAAJA,GAAU,QAANkB,EAAJlB,EAAMoB,YAAI,IAAAF,GAAVA,EAAYG,MAAMC,SAAS,YACvB,cAAa,eAAAzC,OACM,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,KAAKG,WAAU,WAG3CC,MAAMC,IAAS,IAADC,EAAAC,EACbxB,EAAasB,EAAInD,KAAK4B,WACtB,IAAI0B,EAAW,GASf,OAPEA,EADM,OAAJ5B,QAAI,IAAJA,GAAU,QAAN0B,EAAJ1B,EAAMoB,YAAI,IAAAM,GAAO,QAAPC,EAAVD,EAAYL,aAAK,IAAAM,GAAjBA,EAAmBL,SAAS,YACnBG,EAAInD,KAAKA,KAAKuD,QAAQC,GAASA,EAAKC,eAAiB,KAErDN,EAAInD,KAAKA,KAGtBgC,EAAQsB,EAASI,WACjBxB,EAAoB,OACboB,EAASI,SAAS,GACzB,KAGRC,EAAAA,EAAAA,YAAU,KACR3B,EACuB,QAArBC,EACIjC,EACI,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMuD,QAAQC,GAASA,EAAKI,SAASC,aAAe5B,IACzD,GACA,CAACA,KAWJ0B,EAAAA,EAAAA,YAAU,KAAO,IAADG,EACd,MAAMC,EAAaA,KACjB,MAAMC,EAAM,GACZ,IAAK,IAAIC,EAAM,EAAGA,GAAU,OAAJlC,QAAI,IAAJA,OAAI,EAAJA,EAAMmC,QAAQD,IACpCD,EAAIG,KAAKpC,EAAKkC,GAAKG,YAErB,OAAOJ,CAAG,GAGI,QAAZF,EAAAC,WAAY,IAAAD,OAAA,EAAZA,EAAcI,QAAS,GAlBRG,iBACbhC,EACHiC,KAAK,kCAAmC,CAAEN,QAC1Cd,MAAMC,IACLf,EAAgBe,EAAInD,KAAKA,KAAK,IAE/BuE,OAAOC,GAAQC,QAAQC,IAAIF,IAAK,EAajCG,CAAaZ,IACf,GACC,CAAChC,IAEJ,MAAM6C,EAAiBC,IAAQ,IAADC,EAAAC,EAAAC,EAC5B,MAAMC,EAAqB,OAAZ9C,QAAY,IAAZA,OAAY,EAAZA,EAAcoB,QAAQ2B,GAAQA,EAAId,aAAeS,IAChE,OAA+B,KAAf,QAATC,EAAAG,EAAO,UAAE,IAAAH,OAAA,EAATA,EAAWK,UAA0B,QAAZJ,EAAGE,EAAO,UAAE,IAAAF,GAAU,QAAVC,EAATD,EAAWI,gBAAQ,IAAAH,OAAV,EAATA,EAAqB3D,UAAY,CAAC,EAGvE,OACEnB,EAAAA,EAAAA,KAACkF,EAAAA,EAAG,CAAAhF,UACFF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,KAAIlF,UACVF,EAAAA,EAAAA,KAACqF,EAAAA,EAAI,CAACpF,UAAU,GAAEC,UAChBC,EAAAA,EAAAA,MAACmF,EAAAA,EAAQ,CAACrF,UAAU,2BAA2BS,MAAO,CAAE6E,UAAW,SAAUrF,SAAA,EAC3EC,EAAAA,EAAAA,MAAC+E,EAAAA,EAAG,CAACE,GAAG,iCAAgClF,SAAA,EACtCF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACK,GAAG,KAAKC,GAAG,IAAIL,GAAG,IAAGlF,UACxBC,EAAAA,EAAAA,MAACuF,EAAAA,EAAS,CAACC,IAAI,KAAIzF,SAAA,CAAC,YACJ,OAAJsB,QAAI,IAAJA,GAAU,QAANH,EAAJG,EAAMoB,YAAI,IAAAvB,GAAO,QAAPC,EAAVD,EAAYwB,aAAK,IAAAvB,GAAjBA,EAAmBwB,SAAS,YAAc,aAAe,GAAI,UAG3E3C,EAAAA,EAAAA,MAACgF,EAAAA,EAAG,CACFK,GAAG,KACHC,GAAG,IACHL,GAAG,IACHnF,UAAU,mDAAkDC,SAAA,EAEvD,OAAJsB,QAAI,IAAJA,GAAU,QAAND,EAAJC,EAAMoB,YAAI,IAAArB,OAAN,EAAJA,EAAYsB,MAAMC,SAAS,eAC1B9C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAACyF,EAAAA,EAAK,CACJC,KAAK,SACLC,OAAO,KACPC,SAAWC,GAAMhE,EAAoBgE,EAAEC,OAAOC,OAC9CA,MAAOnE,EAAiB7B,SAAA,EAExBF,EAAAA,EAAAA,KAAA,UAAQkG,MAAM,MAAKhG,SAAC,iBACV,OAATwB,QAAS,IAATA,OAAS,EAATA,EAAWyE,KAAK7F,IACfH,EAAAA,EAAAA,MAAA,UAAgC+F,MAAO5F,EAAE8F,gBAAgBlG,SAAA,CACtDI,EAAE+F,kBAAmB,MADX/F,EAAE8F,yBAOvBpG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAACC,GAAG,WAAW7F,MAAO,CAAE8F,eAAgB,QAAStG,UACpDC,EAAAA,EAAAA,MAACsG,EAAAA,EAAM,CACLZ,KAAK,SACLa,KAAK,KACLC,SAAO,EACP5G,MAAM,OACNE,UAAU,YACV2G,OAAK,EAAA1G,SAAA,CAEJ,IAAI,uBAOdmC,EACC,aACEC,EACF,yBAEAtC,EAAAA,EAAAA,KAAA6G,EAAAA,SAAA,CAAA3G,UACO,OAAJ2B,QAAI,IAAJA,OAAI,EAAJA,EAAMmC,QAAS,EACV,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMsE,KACJ,CAACW,EAAGC,KAAC,IAAAC,EAAAC,EAAA,OACHF,EAAI,KACF/G,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAEHrG,UAAU,qGACVsG,GAAE,oBAAAlG,OAAsByG,EAAE5C,YAC1BxD,MAAO,CAAE8F,eAAgB,QAAStG,UAElCF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAAAjF,UACFC,EAAAA,EAAAA,MAAC+E,EAAAA,EAAG,CAACE,GAAG,KAAIlF,SAAA,EACVF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAGlF,UACTC,EAAAA,EAAAA,MAAC+E,EAAAA,EAAG,CAAAhF,SAAA,EACFF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACK,GAAG,KAAKJ,GAAG,IAAInF,UAAU,cAAaC,UACzCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAaS,MAAO,CAAEwG,WAAY,QAAShH,SACxD6G,EAAI,OAGT/G,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAAAjF,UACFC,EAAAA,EAAAA,MAAA,QAAMgH,MAAOL,EAAEM,aAAc1G,MAAO,CAAE8F,eAAgB,QAAStG,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAAUS,MAAO,CAAEC,SAAU,QAAST,SACnD4G,EAAEM,aAAaC,OAAOrD,OAAS,GAAE,GAAA3D,OAC3ByG,EAAEM,aAAaE,UAAU,EAAG,IAAG,OAClCR,EAAEM,gBAERpH,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kEAAiEC,UAC/EF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAE4G,EAAET,mCAO1ClG,EAAAA,EAAAA,MAACgF,EAAAA,EAAG,CAACC,GAAG,IAAInF,UAAU,UAAUsH,QAAQ,SAAQrH,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAE8G,aAAc,QAAStH,UACnCC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,aAAaS,MAAO,CAAEC,SAAU,QAAST,SAAA,CAAC,WAChD,UAGbF,EAAAA,EAAAA,KAAA,SACEC,UAAS,GAAAI,QACPoH,EAAAA,EAAAA,GAAyB,QAAhBT,EAACF,EAAEY,qBAAa,IAAAV,OAAA,EAAfA,EAAiBW,UAAY,cAAgB,IACtDzH,UAEF0H,EAAAA,EAAAA,GAAwB,QAAhBX,EAACH,EAAEY,qBAAa,IAAAT,OAAA,EAAfA,EAAiBU,gBAG/B3H,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAInF,UAAU,4BAA2BC,UAC/CF,EAAAA,EAAAA,KAAA,QACEC,UAAU,oEACVS,MAAO,CAAEmH,cAAe,cAAe3H,SAEtC4G,EAAEgB,cAGP9H,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAInF,UAAU,4BAA2BC,UAC/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAAC+H,EAAAA,EACC,CACAjI,KACE4E,EAAcoC,EAAE5C,YACZ8D,SAAStD,EAAcoC,EAAE5C,YAAa,IACtC,WAMdlE,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAInF,UAAU,eAAcC,UAClCF,EAAAA,EAAAA,KAAA,OACEiI,IAAKC,EACLjI,UAAU,iBACVkI,IAAI,SACJC,MAAM,KACNC,OAAO,eAxEVvB,EAAE5C,WA8EV,KAGLlE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,6BAapC,E,eCxOV,MAsDA,EAtDiBoI,KACf,MAAM,KAAE9G,IAASC,EAAAA,EAAAA,KACXU,GAAMC,EAAAA,EAAAA,MAEN,UAAEC,EAAS,KAAEvC,IAASyC,EAAAA,EAAAA,GAAS,CACnCC,SAAU,CAAC,aACXC,QAASA,IACPN,EAAIQ,IAAI,eAADtC,OAAoB,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,KAAKG,WAAU,gBAAeC,MAAMC,GACxDA,EAAInD,KAAKA,SAItB,OACEK,EAAAA,EAAAA,MAAC+E,EAAAA,EAAG,CAAAhF,SAAA,EACFF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACK,GAAG,IAAIJ,GAAG,IAAGlF,UAChBF,EAAAA,EAAAA,KAACuI,EAAAA,EAAY,CACXC,GAAG,UACHC,KAAK,UACLtB,MAAW,OAAJrH,QAAI,IAAJA,OAAI,EAAJA,EAAM4I,cACbC,SAAS,gBACTC,QAASvG,OAGbrC,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACK,GAAG,IAAIJ,GAAG,IAAGlF,UAChBF,EAAAA,EAAAA,KAACuI,EAAAA,EAAY,CACXC,GAAG,OACHC,KAAK,YACLtB,MAAW,OAAJrH,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,WACbF,SAAS,aACTC,QAASvG,OAGbrC,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACK,GAAG,IAAIJ,GAAG,IAAGlF,UAChBF,EAAAA,EAAAA,KAACuI,EAAAA,EAAY,CACXC,GAAG,UACHC,KAAK,gBACLtB,MAAW,OAAJrH,QAAI,IAAJA,OAAI,EAAJA,EAAMgJ,iBACbH,SAAS,mBACTC,QAASvG,OAGbrC,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACK,GAAG,IAAIJ,GAAG,IAAGlF,UAChBF,EAAAA,EAAAA,KAACuI,EAAAA,EAAY,CACXC,GAAG,UACHC,KAAK,eACLtB,MAAW,OAAJrH,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,WACbJ,SAAS,YACTC,QAASvG,QAGT,E,wDC1CV,MAyLA,EAzLiBxC,IAAsB,IAArB,MAAEsH,EAAK,KAAEtB,GAAMhG,EAC/B,MAAM,KAAE2B,IAASC,EAAAA,EAAAA,MACVuH,EAAgBC,IAAqBrH,EAAAA,EAAAA,aACrCsH,EAAMC,IAAWvH,EAAAA,EAAAA,eAASwH,IAC1BC,EAAgBC,IAAqB1H,EAAAA,EAAAA,aACrC2H,EAAOC,IAAY5H,EAAAA,EAAAA,WAAS,GAC7BO,GAAMC,EAAAA,EAAAA,MAEN,UAAEC,EAAS,MAAEC,EAAK,KAAExC,EAAI,QAAE2J,IAAYlH,EAAAA,EAAAA,GAAS,CACnDC,SAAU,CAAC,YAADnC,OAAawF,IACvBpD,QAASA,KAAA,IAAAC,EAAA,OAEPP,EACGQ,IAAI,GAADtC,OAEI,OAAJmB,QAAI,IAAJA,GAAU,QAANkB,EAAJlB,EAAMoB,YAAI,IAAAF,GAAVA,EAAYG,MAAMC,SAAS,YAAW,yCAAAzC,OACOwF,GAAI,YAAAxF,OAC7B,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,KAAKG,WAAU,sBAGxCC,MAAMC,GACEA,EAAInD,KAAKA,MAChB,IA4BR,OACEK,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAA3G,SAAA,EACEF,EAAAA,EAAAA,KAACqF,EAAAA,EAAI,CAAAnF,UACHC,EAAAA,EAAAA,MAACmF,EAAAA,EAAQ,CACPrF,UAAU,2BACVS,MAAO,CAAE6E,UAAU,GAADlF,OAAc,WAATwF,EAAoB,QAAU,UAAY3F,SAAA,EAEjEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAS,CAACC,IAAI,KAAIzF,SAAEiH,IACX,eAATtB,IACC7F,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAACC,GAAG,2BAA2B7F,MAAO,CAAE8F,eAAgB,QAAStG,SAAC,gBAK3EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kDAAiDC,SAC7DmC,EACC,aACEC,EACF,yBACM,OAAJxC,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,QAAS,EACjBlE,EAAKqG,KAAI,CAACuD,EAAG3C,KAAC,IAAA4C,EAAAC,EAAAC,EAAA,OACZ1J,EAAAA,EAAAA,MAAA,OAAqBF,UAAU,uCAAsCC,SAAA,EACnEC,EAAAA,EAAAA,MAAA,OACEF,UAAS,iBAAAI,OACE,WAATwF,EAAoB,KAAO,WAAU,gFAEvCnF,MAAO,CAAEoJ,OAAQ,sBAAuB5J,SAAA,EAExCC,EAAAA,EAAAA,MAACmG,EAAAA,GAAI,CACHT,KAAK,SACL5F,UAAS,uBAAAI,OACE,SAATwF,EAAkB,KAAO,KAAI,kCAE/BnF,MAAO,CAAEC,SAAU,OAAQ6F,eAAgB,QAE3CuD,QAASA,KAAMC,OAzChBC,EAyC0BP,EAxC3CF,GAAS,QACTL,EAAQc,GAFSA,KAyC6B,EAAA/J,SAAA,EAE5BF,EAAAA,EAAAA,KAAA,QAAAE,SAAO6G,EAAI,KACX5G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SACf,WAAT2F,GACI,OAAD6D,QAAC,IAADA,OAAC,EAADA,EAAGQ,WAAW7C,OAAOrD,QAAS,GAAE,GAAA3D,OAC1B,OAADqJ,QAAC,IAADA,GAAa,QAAZC,EAADD,EAAGQ,kBAAU,IAAAP,OAAZ,EAADA,EAAerC,UAAU,EAAG,IAAG,OACjC,OAADoC,QAAC,IAADA,OAAC,EAADA,EAAGQ,WACI,SAATrE,GACC,OAAD6D,QAAC,IAADA,OAAC,EAADA,EAAGQ,WAAW7C,OAAOrD,QAAS,GAAE,GAAA3D,OAC1B,OAADqJ,QAAC,IAADA,GAAa,QAAZE,EAADF,EAAGQ,kBAAU,IAAAN,OAAZ,EAADA,EAAetC,UAAU,EAAG,IAAG,OACjC,OAADoC,QAAC,IAADA,OAAC,EAADA,EAAGQ,YACJ,OAADR,QAAC,IAADA,OAAC,EAADA,EAAGQ,WAAW7C,OAAOrD,QAAS,GAAE,GAAA3D,OAC5B,OAADqJ,QAAC,IAADA,GAAa,QAAZG,EAADH,EAAGQ,kBAAU,IAAAL,OAAZ,EAADA,EAAevC,UAAU,EAAG,IAAG,OACjC,OAADoC,QAAC,IAADA,OAAC,EAADA,EAAGQ,gBAGX/J,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kEAAiEC,SACjE,IAAbwJ,EAAES,OACC,QACa,IAAbT,EAAES,OACF,cACa,IAAbT,EAAES,OACF,SACa,IAAbT,EAAES,OACF,WACA,cAENhK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEC,SAAU,QAAUV,UAAU,aAAYC,SAAC,eAG1DF,EAAAA,EAAAA,KAAA,QACEU,MAAO,CAAEC,SAAU,QACnBV,UAAS,GAAAI,QAAKoH,EAAAA,EAAAA,GAAW,OAADiC,QAAC,IAADA,OAAC,EAADA,EAAG/B,UAAY,cAAgB,cAAezH,UAErE0H,EAAAA,EAAAA,GAAU,OAAD8B,QAAC,IAADA,OAAC,EAADA,EAAG/B,wBAMb,SAAT9B,IACC7F,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAAC+H,EAAAA,EAAkB,CACjBjI,KAAMkI,SAAS0B,EAAEU,cAAcjJ,UAAW,IAC1CpB,MAAM,iBAOR,WAAT8F,IACK,OAAJrE,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,KAAKC,MAAMC,SAAS,eACzBuG,GAAkBL,KAAoB,OAADU,QAAC,IAADA,OAAC,EAADA,EAAGW,UACvCrK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,KAACsK,EAAAA,EAAO,CAAC5D,KAAK,KAAK3G,MAAM,eAG3BC,EAAAA,EAAAA,KAAA,QACEmH,MAAM,YACNzG,MAAO,CAAE8F,eAAgB,QACzBvG,UAAU,4BAA2BC,UAErCF,EAAAA,EAAAA,KAAA,UACE6F,KAAK,SACL5F,UAAU,UACV8J,QAASA,IAtIV5F,WACrB8E,EAAkBsB,GAClBjB,GAAkB,SACZnH,EACHiC,KAAK,YAAD/D,OAAiB,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,KAAKG,WAAU,KAAA1C,OAAIkK,EAAM,cAChDvH,MAAMC,IACLwG,KACAe,EAAAA,EAAAA,GAAM,UAAWvH,EAAInD,KAAK2K,QAAQ,IAEnCpG,OAAM,MACLmG,EAAAA,EAAAA,GAAM,QAAS,eAAe,IAElCvB,IACAK,GAAkB,EAAM,EAyHaoB,CAAgB,OAADhB,QAAC,IAADA,OAAC,EAADA,EAAGW,SAASnK,UAE1CF,EAAAA,EAAAA,KAAC2K,IAAY,CAAClC,KAAK,OAAOxI,UAAU,uBAzFpCyJ,EAAEW,QA6FN,KAGRrK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,0BAMnCqJ,IAASvJ,EAAAA,EAAAA,KAAC4K,EAAAA,EAAS,CAAOrB,QAAOC,WAAUqB,OAtIjCA,KACbrB,GAAUD,EAAM,EAqIsCL,OAAQ4B,KAAK,iBAChE,EClKP,EAtBiBC,KAEb5K,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAA3G,SAAA,EACEF,EAAAA,EAAAA,KAACsI,EAAQ,KACTnI,EAAAA,EAAAA,MAAC+E,EAAAA,EAAG,CAAAhF,SAAA,EACFF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,KAAIlF,UACVF,EAAAA,EAAAA,KAACoB,EAAW,OAEdpB,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAGlF,UACTF,EAAAA,EAAAA,KAACgL,EAAQ,CAAC7D,MAAM,cAActB,KAAK,YAErC7F,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAGlF,UACTF,EAAAA,EAAAA,KAACgL,EAAQ,CAAC7D,MAAM,mBAAmBtB,KAAK,kBAE1C7F,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAGlF,UACTF,EAAAA,EAAAA,KAACgL,EAAQ,CAAC7D,MAAM,eAAetB,KAAK,mBCiF9C,EA/FuBoF,KACrB,MAAM9I,GAAMC,EAAAA,EAAAA,MAEN,UAAEC,EAAS,MAAEC,EAAK,KAAExC,IAASyC,EAAAA,EAAAA,GAAS,CAC1CC,SAAU,CAAC,oBACXC,QAASA,IAEPN,EAAIQ,IAAI,oCAAoCK,MAAMC,GACzCA,EAAInD,KAAKA,SAItB,OACEE,EAAAA,EAAAA,KAAA6G,EAAAA,SAAA,CAAA3G,UACEF,EAAAA,EAAAA,KAACqF,EAAAA,EAAI,CAAAnF,UACHC,EAAAA,EAAAA,MAACmF,EAAAA,EAAQ,CAACrF,UAAU,2BAA0BC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC7CF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAS,CAACC,IAAI,KAAIzF,SAAC,wBAKtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kDAAiDC,SAC7DmC,EACC,aACEC,EACF,yBACM,OAAJxC,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,QAAS,EACjBlE,EAAKqG,KAAI,CAACuD,EAAG3C,KAAC,IAAA4C,EAAA,OACZ3J,EAAAA,EAAAA,KAAA,OAAqBC,UAAU,uCAAsCC,UACnEC,EAAAA,EAAAA,MAAA,OACEF,UAAU,oGACVS,MAAO,CAAEoJ,OAAQ,sBAAuB5J,SAAA,EAExCF,EAAAA,EAAAA,KAAA,QAAMmH,MAAQ,OAADuC,QAAC,IAADA,OAAC,EAADA,EAAGQ,WAAYxJ,MAAO,CAAE8F,eAAgB,OAAQ4B,MAAO,QAASlI,UAC3EC,EAAAA,EAAAA,MAACmG,EAAAA,GAAI,CACHC,GAAE,qBAAAlG,OAAwB,OAADqJ,QAAC,IAADA,OAAC,EAADA,EAAGxF,YAC5BjE,UAAU,uDACVS,MAAO,CAAEC,SAAU,OAAQ6F,eAAgB,QAE3CtG,SAAA,EAEAF,EAAAA,EAAAA,KAAA,QAAAE,SAAO6G,EAAI,KACX5G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,UACvB,OAADwJ,QAAC,IAADA,OAAC,EAADA,EAAGQ,WAAW7C,OAAOrD,QAAS,GAAE,GAAA3D,OACzB,OAADqJ,QAAC,IAADA,GAAa,QAAZC,EAADD,EAAGQ,kBAAU,IAAAP,OAAZ,EAADA,EAAerC,UAAU,EAAG,IAAG,OACjC,OAADoC,QAAC,IAADA,OAAC,EAADA,EAAGQ,gBAGX/J,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kEAAiEC,SACjE,IAAbwJ,EAAES,OACC,QACa,IAAbT,EAAES,OACF,cACa,IAAbT,EAAES,OACF,SACa,IAAbT,EAAES,OACF,WACA,cAENhK,EAAAA,EAAAA,MAAA,QAAMO,MAAO,CAAEC,SAAU,QAAUV,UAAU,aAAYC,SAAA,CAAC,aAC5C,OAADwJ,QAAC,IAADA,OAAC,EAADA,EAAG/B,wBAMxB3H,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAAC+H,EAAAA,EAAkB,CACjBjI,KAAMkI,SAAS0B,EAAEU,cAAcjJ,UAAW,IAC1CpB,MAAM,kBA9CR2J,EAAEW,QAoDN,KAGRrK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,2BAMnC,EC1DP,EA9BmBgL,KACjB,MAAM,KAAE1J,IAASC,EAAAA,EAAAA,KAEjB,OAAOD,EAAKoB,KAAKC,MAAMC,SAAS,aAC9B9C,EAAAA,EAAAA,KAAC+K,EAAQ,KAET5K,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAA3G,SAAA,EACEF,EAAAA,EAAAA,KAACsI,EAAQ,KACTnI,EAAAA,EAAAA,MAAC+E,EAAAA,EAAG,CAAAhF,SAAA,EAUFF,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAACC,GAAG,IAAGlF,UACTF,EAAAA,EAAAA,KAACoB,EAAW,OAEdjB,EAAAA,EAAAA,MAACgF,EAAAA,EAAG,CAACC,GAAG,IAAGlF,SAAA,EACTF,EAAAA,EAAAA,KAACgL,EAAQ,CAAC7D,MAAM,eAAetB,KAAK,YACpC7F,EAAAA,EAAAA,KAACiL,EAAc,YAItB,C,mFClCH,MAkBA,EAlBqBpL,IAA6C,IAA5C,GAAE2I,EAAE,KAAEC,EAAI,MAAEtB,EAAK,SAAEwB,EAAQ,QAAEC,GAAS/I,EAC1D,OACEG,EAAAA,EAAAA,KAACqF,EAAAA,EAAI,CAAAnF,UACHF,EAAAA,EAAAA,KAACsF,EAAAA,EAAQ,CAAApF,UACPC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAS,wCAAAI,OAA0CmI,GAAKtI,UAC5DF,EAAAA,EAAAA,KAAA,KAAGC,UAAS,cAAAI,OAAgBoI,QAE9BtI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBC,SAAE0I,EAAU,MAAQzB,KAClDnH,EAAAA,EAAAA,KAACmL,EAAAA,EAAY,CAAClL,UAAU,kBAAiBC,SAAEyI,aAI5C,C,oGCjBPyC,EAAY,CAAC,YAAa,YAAa,OAC3C,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUvF,GAAU,IAAK,IAAIc,EAAI,EAAGA,EAAI0E,UAAUzH,OAAQ+C,IAAK,CAAE,IAAI2E,EAASD,UAAU1E,GAAI,IAAK,IAAI4E,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ1F,EAAO0F,GAAOD,EAAOC,GAAU,CAAE,OAAO1F,CAAQ,EAAUoF,EAASU,MAAMC,KAAMP,UAAY,CAClV,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAK5E,EAAnEd,EACzF,SAAuCyF,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAK5E,EAA5Dd,EAAS,CAAC,EAAOkG,EAAab,OAAOc,KAAKV,GAAqB,IAAK3E,EAAI,EAAGA,EAAIoF,EAAWnI,OAAQ+C,IAAO4E,EAAMQ,EAAWpF,GAAQmF,EAASG,QAAQV,IAAQ,IAAa1F,EAAO0F,GAAOD,EAAOC,IAAQ,OAAO1F,CAAQ,CADhNqG,CAA8BZ,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAK3E,EAAI,EAAGA,EAAIyF,EAAiBxI,OAAQ+C,IAAO4E,EAAMa,EAAiBzF,GAAQmF,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgB1F,EAAO0F,GAAOD,EAAOC,GAAQ,CAAE,OAAO1F,CAAQ,CAM3e,IAAIyG,EAAY,CAEdzM,UAAW0M,IAAAA,OAEXC,UAAWD,IAAAA,OAEXhH,IAAKkH,EAAAA,IAEP,SAAS1B,EAAa2B,GACpB,IAAI7M,EAAY6M,EAAM7M,UACpB2M,EAAYE,EAAMF,UAClBG,EAAaD,EAAMnH,IACnBqH,OAAqB,IAAfD,EAAwB,MAAQA,EACtCE,EAAahB,EAAyBa,EAAO1B,GAC3C8B,GAAUC,EAAAA,EAAAA,IAAgBC,IAAWnN,EAAW,iBAAkB2M,GACtE,OAAoBS,EAAAA,cAAoBL,EAAK3B,EAAS,CAAC,EAAG4B,EAAY,CACpEhN,UAAWiN,IAEf,CACA/B,EAAauB,UAAYA,EACzB,S","sources":["components/atoms/circularPercentage/CircularPercentage.js","utils/IndoDate.js","utils/isExpired.js","views/dashboards/ProjectList.js","views/dashboards/TopCards.js","views/dashboards/TaskList.js","views/dashboards/Director.js","views/dashboards/AdditionalTask.js","views/dashboards/Dashboard2.js","views/dashboards/TopCardsData.js","../node_modules/reactstrap/esm/CardSubtitle.js"],"sourcesContent":["import React from 'react';\r\nimport './CircularPercentage.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CircularPercentage = ({ data, color }) => {\r\n  return (\r\n    <div className=\"flex-wrapper\">\r\n      <div className=\"single-chart\">\r\n        <svg\r\n          viewBox=\"0 0 36 36\"\r\n          className={`circular-chart ${data === 100 ? 'green' : data !== 100 ? 'blue' : color}`}\r\n        >\r\n          <path\r\n            className=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            className=\"circle\"\r\n            strokeDasharray={`${data}, 100`}\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          {data === 100 ? (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\" style={{ fontSize: '14px' }}>\r\n              ✔\r\n            </text>\r\n          ) : (\r\n            <text x=\"18\" y=\"22.35\" className=\"percentage\">\r\n              {data}%\r\n            </text>\r\n          )}\r\n        </svg>\r\n      </div>\r\n\r\n      {/* <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart green\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"60, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            60%\r\n          </text>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"single-chart\">\r\n        <svg viewBox=\"0 0 36 36\" class=\"circular-chart blue\">\r\n          <path\r\n            class=\"circle-bg\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <path\r\n            class=\"circle\"\r\n            stroke-dasharray=\"90, 100\"\r\n            d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          />\r\n          <text x=\"18\" y=\"20.35\" class=\"percentage\">\r\n            90%\r\n          </text>\r\n        </svg>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nCircularPercentage.propTypes = {\r\n  data: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default CircularPercentage;\r\n","const IndoDate = (d) => {\r\n  const date = new Date(d);\r\n  //   const hari = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'];\r\n  const bulan = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'Mei',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Des',\r\n  ];\r\n\r\n  return `${date.getDate()} ${bulan[date.getMonth()]} ${date.getFullYear()}`;\r\n};\r\n\r\nexport default IndoDate;\r\n","const isExpired = (val) => {\r\n  const today = new Date();\r\n  const end = new Date(val);\r\n  const result = (end - today) / (1000 * 60 * 60 * 24);\r\n  return result.toFixed() < 1;\r\n};\r\n\r\nexport default isExpired;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, CardBody, CardTitle, Col, Input, Row } from 'reactstrap';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport user1 from '../../assets/images/users/user1.jpg';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\n\r\nconst ProjectList = () => {\r\n  const { auth } = useAuth();\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [list, setList] = useState([]);\r\n  const [selectedDivision, setSelectedDivision] = useState();\r\n  const [progressList, setProgressList] = useState([]);\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['projectsdash'],\r\n    queryFn: () =>\r\n      api\r\n        .get(\r\n          `${\r\n            auth?.user?.roles.includes('Director')\r\n              ? 'api/project'\r\n              : `api/project/${auth?.user.employe_id}/list`\r\n          }`,\r\n        )\r\n        .then((res) => {\r\n          setDivisions(res.data.divisions);\r\n          let filtered = [];\r\n          if (auth?.user?.roles?.includes('Director')) {\r\n            filtered = res.data.data.filter((item) => item.total_progress > 10);\r\n          } else {\r\n            filtered = res.data.data;\r\n          }\r\n\r\n          setList(filtered.reverse());\r\n          setSelectedDivision('all');\r\n          return filtered.reverse();\r\n        }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setList(\r\n      selectedDivision === 'all'\r\n        ? data\r\n        : data?.filter((item) => item.division.toString() === selectedDivision),\r\n    );\r\n  }, [selectedDivision]);\r\n\r\n  const fethProgress = async (ids) => {\r\n    await api\r\n      .post('api/project/progress/collection', { ids })\r\n      .then((res) => {\r\n        setProgressList(res.data.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const projectIds = () => {\r\n      const ids = [];\r\n      for (let idx = 0; idx < list?.length; idx++) {\r\n        ids.push(list[idx].project_id);\r\n      }\r\n      return ids;\r\n    };\r\n\r\n    if (projectIds()?.length > 0) {\r\n      fethProgress(projectIds());\r\n    }\r\n  }, [list]);\r\n\r\n  const progressValue = (id) => {\r\n    const result = progressList?.filter((row) => row.project_id === id);\r\n    return result[0]?.progress !== 0 ? result[0]?.progress?.toFixed() : 0;\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg=\"12\">\r\n        <Card className=\"\">\r\n          <CardBody className=\"d-flex flex-column gap-2\" style={{ minHeight: '130px' }}>\r\n            <Row lg=\"d-flex justify-content-between\">\r\n              <Col sm=\"12\" md=\"6\" lg=\"3\">\r\n                <CardTitle tag=\"h4\">\r\n                  Projects {auth?.user?.roles?.includes('Director') ? 'Inprogress' : ''}{' '}\r\n                </CardTitle>\r\n              </Col>\r\n              <Col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n                lg=\"5\"\r\n                className=\"d-flex gap-2 align-items-end justify-content-end\"\r\n              >\r\n                {auth?.user?.roles.includes('Director') && (\r\n                  <div className=\"w-75\">\r\n                    <Input\r\n                      type=\"select\"\r\n                      bsSize=\"sm\"\r\n                      onChange={(e) => setSelectedDivision(e.target.value)}\r\n                      value={selectedDivision}\r\n                    >\r\n                      <option value=\"all\">All Division</option>\r\n                      {divisions?.map((d) => (\r\n                        <option key={d.organization_id} value={d.organization_id}>\r\n                          {d.organization_name}{' '}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </div>\r\n                )}\r\n                <div className=\"w-25\">\r\n                  <Link to=\"projects\" style={{ textDecoration: 'none' }}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"sm\"\r\n                      outline\r\n                      color=\"info\"\r\n                      className=\"rounded-2\"\r\n                      block\r\n                    >\r\n                      {' '}\r\n                      See all\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {isLoading ? (\r\n              'Loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : (\r\n              <>\r\n                {list?.length > 0 ? (\r\n                  list?.map(\r\n                    (p, i) =>\r\n                      i < 10 && (\r\n                        <Link\r\n                          key={p.project_id}\r\n                          className=\"d-flex justify-content-between rounded-3 px-2 py-2 align-items-center link-item text-dark bg-light\"\r\n                          to={`projects/details/${p.project_id}`}\r\n                          style={{ textDecoration: 'none' }}\r\n                        >\r\n                          <Col>\r\n                            <Row lg=\"12\">\r\n                              <Col lg=\"6\">\r\n                                <Row>\r\n                                  <Col sm=\"12\" lg=\"1\" className=\"my-auto p-0\">\r\n                                    <span className=\"text-muted\" style={{ marginLeft: '12px' }}>\r\n                                      {i + 1}\r\n                                    </span>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <abbr title={p.project_name} style={{ textDecoration: 'none' }}>\r\n                                      <span className=\"fw-bold\" style={{ fontSize: '13px' }}>\r\n                                        {p.project_name.trim().length > 40\r\n                                          ? `${p.project_name.substring(0, 42)}...`\r\n                                          : p.project_name}\r\n                                      </span>\r\n                                      <div>\r\n                                        <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block\">\r\n                                          <small className=\"fw-bold\">{p.organization_name}</small>\r\n                                        </span>\r\n                                      </div>\r\n                                    </abbr>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col lg=\"2\" className=\"my-auto\" content=\"center\">\r\n                                <div style={{ marginBottom: '-7px' }}>\r\n                                  <small className=\"text-muted\" style={{ fontSize: '12px' }}>\r\n                                    Deadline{' '}\r\n                                  </small>\r\n                                </div>\r\n                                <small\r\n                                  className={`${\r\n                                    isExpired(p.current_stage?.end_date) ? 'text-danger' : ''\r\n                                  }`}\r\n                                >\r\n                                  {IndoDate(p.current_stage?.end_date)}\r\n                                </small>\r\n                              </Col>\r\n                              <Col lg=\"2\" className=\"d-flex align-items-center\">\r\n                                <span\r\n                                  className=\"badge text-info bg-light-info rounded-pill d-inline-block fw-bold\"\r\n                                  style={{ textTransform: 'capitalize' }}\r\n                                >\r\n                                  {p.category}\r\n                                </span>\r\n                              </Col>\r\n                              <Col lg=\"1\" className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex gap-1 justify-content-center align-items-center\">\r\n                                  <div className=\"circular-progress\">\r\n                                    <CircularPercentage\r\n                                      // data={parseInt(p.total_progress.toFixed(), 10)}\r\n                                      data={\r\n                                        progressValue(p.project_id)\r\n                                          ? parseInt(progressValue(p.project_id), 10)\r\n                                          : 0\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                              <Col lg=\"1\" className=\"my-auto px-2\">\r\n                                <img\r\n                                  src={user1}\r\n                                  className=\"rounded-circle\"\r\n                                  alt=\"avatar\"\r\n                                  width=\"40\"\r\n                                  height=\"40\"\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Link>\r\n                      ),\r\n                  )\r\n                ) : (\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <p className=\"text-muted\">No data yet.</p>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {/* <Col lg=\"4\">\r\n          <Card>\r\n            <CardBody></CardBody>\r\n          </Card>\r\n        </Col> */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport { Row, Col } from 'reactstrap';\r\nimport TopCardsData from './TopCardsData';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst TopCards = () => {\r\n  const { auth } = useAuth();\r\n  const api = useAxios();\r\n\r\n  const { isLoading, data } = useQuery({\r\n    queryKey: ['totaldata'],\r\n    queryFn: () =>\r\n      api.get(`api/project/${auth?.user.employe_id}/total-data`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"primary\"\r\n          icon=\"wallet2\"\r\n          title={data?.total_project}\r\n          subtitle=\"Total Project\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"info\"\r\n          icon=\"list-task\"\r\n          title={data?.total_task}\r\n          subtitle=\"Total Task\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"warning\"\r\n          icon=\"clock-history\"\r\n          title={data?.total_inprogress}\r\n          subtitle=\"Task In Progress\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n      <Col sm=\"6\" lg=\"3\">\r\n        <TopCardsData\r\n          bg=\"success\"\r\n          icon=\"check-circle\"\r\n          title={data?.total_done}\r\n          subtitle=\"Task Done\"\r\n          loading={isLoading}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TopCards;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardBody, CardTitle, Spinner } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport PropTypes from 'prop-types';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\nimport { alert } from '../../components/atoms/Toast';\r\nimport TaskPopup from '../../pages/projects/TaskPopup';\r\nimport IndoDate from '../../utils/IndoDate';\r\nimport isExpired from '../../utils/isExpired';\r\n\r\nconst TaskList = ({ title, type }) => {\r\n  const { auth } = useAuth();\r\n  const [taskIdSelected, setTaskIdSelected] = useState();\r\n  const [task, setTask] = useState(undefined);\r\n  const [addingFavorite, setAddingFavorite] = useState();\r\n  const [modal, setModal] = useState(false);\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data, refetch } = useQuery({\r\n    queryKey: [`tasklist-${type}`],\r\n    queryFn: () =>\r\n      // api.get(`api/task/${auth?.user.employe_id}/recent/activity`).then((res) => {\r\n      api\r\n        .get(\r\n          `${\r\n            auth?.user?.roles.includes('Director')\r\n              ? `api/task/director/dashboard/list?type=${type}`\r\n              : `api/task/${auth?.user.employe_id}/recent/activity`\r\n          }`,\r\n        )\r\n        .then((res) => {\r\n          return res.data.data;\r\n        }),\r\n  });\r\n\r\n  const handleFavorite = async (taskId) => {\r\n    setTaskIdSelected(taskId);\r\n    setAddingFavorite(true);\r\n    await api\r\n      .post(`api/task/${auth?.user.employe_id}/${taskId}/favorite`)\r\n      .then((res) => {\r\n        refetch();\r\n        alert('success', res.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('error', 'Bad request.');\r\n      });\r\n    setTaskIdSelected();\r\n    setAddingFavorite(false);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const openPopup = (selectedTask) => {\r\n    setModal(true);\r\n    setTask(selectedTask);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody\r\n          className=\"d-flex flex-column gap-1\"\r\n          style={{ minHeight: `${type === 'recent' ? '130px' : '400px'}` }}\r\n        >\r\n          <div className=\"d-flex justify-content-between\">\r\n            <CardTitle tag=\"h4\">{title}</CardTitle>\r\n            {type === 'inprogress' && (\r\n              <Link to=\"director/inprogress-task\" style={{ textDecoration: 'none' }}>\r\n                See all\r\n              </Link>\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex flex-column gap-2 justify-content-center\">\r\n            {isLoading ? (\r\n              'Loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : data?.length > 0 ? (\r\n              data.map((t, i) => (\r\n                <div key={t.task_id} className=\"d-flex justify-content-between gap-1\">\r\n                  <div\r\n                    className={`d-flex col-sm-${\r\n                      type === 'marked' ? '11' : '12 w-100'\r\n                    } justify-content-between align-items-center p-2 rounded-3 link-item-bordered`}\r\n                    style={{ border: '1px dashed #21C1D6' }}\r\n                  >\r\n                    <Link\r\n                      type=\"button\"\r\n                      className={`d-flex gap-2 col-md-${\r\n                        type === 'done' ? '12' : '10'\r\n                      } align-items-center text-muted`}\r\n                      style={{ fontSize: '13px', textDecoration: 'none' }}\r\n                      // to={`projects/details/${t.project_id}`}\r\n                      onClick={() => openPopup(t)}\r\n                    >\r\n                      <span>{i + 1}</span>\r\n                      <div className=\"d-flex flex-column col-md-12\">\r\n                        <div className=\"d-flex\">\r\n                          <span className=\"text-dark\">\r\n                            {type === 'marked'\r\n                              ? t?.task_title.trim().length > 35\r\n                                ? `${t?.task_title?.substring(0, 35)}...`\r\n                                : t?.task_title\r\n                              : type === 'done'\r\n                              ? t?.task_title.trim().length > 53\r\n                                ? `${t?.task_title?.substring(0, 53)}...`\r\n                                : t?.task_title\r\n                              : t?.task_title.trim().length > 40\r\n                              ? `${t?.task_title?.substring(0, 40)}...`\r\n                              : t?.task_title}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-end gap-3\">\r\n                          <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block\">\r\n                            {t.status === 0\r\n                              ? 'To do'\r\n                              : t.status === 1\r\n                              ? 'In progress'\r\n                              : t.status === 2\r\n                              ? 'Review'\r\n                              : t.status === 3\r\n                              ? 'Approved'\r\n                              : 'Revision'}\r\n                          </span>\r\n                          <div className=\"d-flex gap-1\">\r\n                            <span style={{ fontSize: '12px' }} className=\"text-muted\">\r\n                              Deadline:\r\n                            </span>\r\n                            <span\r\n                              style={{ fontSize: '12px' }}\r\n                              className={`${isExpired(t?.end_date) ? 'text-danger' : 'text-muted'}`}\r\n                            >\r\n                              {IndoDate(t?.end_date)}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                    {type !== 'done' && (\r\n                      <div>\r\n                        <div className=\"d-flex gap-1 justify-content-center align-items-center\">\r\n                          <div className=\"circular-progress\">\r\n                            <CircularPercentage\r\n                              data={parseInt(t.task_progress.toFixed(), 10)}\r\n                              color=\"red\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {type === 'marked' &&\r\n                    auth?.user.roles.includes('Director') &&\r\n                    (addingFavorite && taskIdSelected === t?.task_id ? (\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <Spinner size=\"sm\" color=\"warning\" />\r\n                      </div>\r\n                    ) : (\r\n                      <abbr\r\n                        title=\"Mark task\"\r\n                        style={{ textDecoration: 'none' }}\r\n                        className=\"d-flex align-items-center\"\r\n                      >\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"fav-btn\"\r\n                          onClick={() => handleFavorite(t?.task_id)}\r\n                        >\r\n                          <MaterialIcon icon=\"star\" className=\"is_favorite\" />\r\n                        </button>\r\n                      </abbr>\r\n                    ))}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <p className=\"text-muted\">No data yet.</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      {modal && <TaskPopup {...{ modal, setModal, toggle, task }} mode=\"activities\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  title: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport ProjectList from './ProjectList';\r\nimport TopCards from './TopCards';\r\nimport TaskList from './TaskList';\r\n\r\nconst Director = () => {\r\n  return (\r\n    <>\r\n      <TopCards />\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <ProjectList />\r\n        </Col>\r\n        <Col lg=\"4\">\r\n          <TaskList title=\"Need Review\" type=\"done\" />\r\n        </Col>\r\n        <Col lg=\"4\">\r\n          <TaskList title=\"Inprogress Tasks\" type=\"inprogress\" />\r\n        </Col>\r\n        <Col lg=\"4\">\r\n          <TaskList title=\"Marked Tasks\" type=\"marked\" />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Director;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardTitle } from 'reactstrap';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport useAxios from '../../hooks/useAxios';\r\nimport CircularPercentage from '../../components/atoms/circularPercentage/CircularPercentage';\r\n\r\nconst AdditionalTask = () => {\r\n  const api = useAxios();\r\n\r\n  const { isLoading, error, data } = useQuery({\r\n    queryKey: ['additional-tasks'],\r\n    queryFn: () =>\r\n      // api.get(`api/task/${auth?.user.employe_id}/recent/activity`).then((res) => {\r\n      api.get(`api/task/employe/additional/list`).then((res) => {\r\n        return res.data.data;\r\n      }),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody className=\"d-flex flex-column gap-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <CardTitle tag=\"h4\">Additional Tasks</CardTitle>\r\n            {/* <Link to=\"projects\" style={{ textDecoration: 'none' }}>\r\n              See all\r\n            </Link> */}\r\n          </div>\r\n          <div className=\"d-flex flex-column gap-2 justify-content-center\">\r\n            {isLoading ? (\r\n              'Loading...'\r\n            ) : error ? (\r\n              'Something went wrong.'\r\n            ) : data?.length > 0 ? (\r\n              data.map((t, i) => (\r\n                <div key={t.task_id} className=\"d-flex justify-content-between gap-1\">\r\n                  <div\r\n                    className=\"d-flex w-100 justify-content-between align-items-center p-2 rounded-3 link-item-bordered bg-white\"\r\n                    style={{ border: '1px dashed #FFB22B' }}\r\n                  >\r\n                    <abbr title={t?.task_title} style={{ textDecoration: 'none', width: '100%' }}>\r\n                      <Link\r\n                        to={`/projects/details/${t?.project_id}`}\r\n                        className=\"d-flex gap-2 col-md-12 align-items-center text-muted\"\r\n                        style={{ fontSize: '13px', textDecoration: 'none' }}\r\n                        // to={`projects/details/${t.project_id}`}\r\n                        //   onClick={() => openPopup(t)}\r\n                      >\r\n                        <span>{i + 1}</span>\r\n                        <div className=\"d-flex flex-column col-md-12\">\r\n                          <div className=\"d-flex\">\r\n                            <span className=\"text-dark\">\r\n                              {t?.task_title.trim().length > 40\r\n                                ? `${t?.task_title?.substring(0, 40)}...`\r\n                                : t?.task_title}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"d-flex align-items-end gap-3\">\r\n                            <span className=\"badge text-primary bg-light-primary rounded-pill d-inline-block\">\r\n                              {t.status === 0\r\n                                ? 'To do'\r\n                                : t.status === 1\r\n                                ? 'In progress'\r\n                                : t.status === 2\r\n                                ? 'Review'\r\n                                : t.status === 3\r\n                                ? 'Approved'\r\n                                : 'Revision'}\r\n                            </span>\r\n                            <span style={{ fontSize: '12px' }} className=\"text-muted\">\r\n                              Deadline: {t?.end_date}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    </abbr>\r\n                    <div>\r\n                      <div className=\"d-flex gap-1 justify-content-center align-items-center\">\r\n                        <div className=\"circular-progress\">\r\n                          <CircularPercentage\r\n                            data={parseInt(t.task_progress.toFixed(), 10)}\r\n                            color=\"red\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <p className=\"text-muted\">No data yet.</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdditionalTask;\r\n","import { Col, Row } from 'reactstrap';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport Director from './Director';\r\nimport ProjectList from './ProjectList';\r\nimport TopCards from './TopCards';\r\nimport './Dashboard.scss';\r\nimport TaskList from './TaskList';\r\nimport AdditionalTask from './AdditionalTask';\r\n// import Daily from './Daily';\r\n\r\nconst Dashboard2 = () => {\r\n  const { auth } = useAuth();\r\n\r\n  return auth.user.roles.includes('Director') ? (\r\n    <Director />\r\n  ) : (\r\n    <>\r\n      <TopCards />\r\n      <Row>\r\n        {/* <Col lg=\"4\">\r\n          <Project />\r\n          <Row>\r\n            <UserStatus />\r\n          </Row>\r\n        </Col> */}\r\n        {/* <Col lg=\"4\">\r\n          <Daily />\r\n        </Col> */}\r\n        <Col lg=\"8\">\r\n          <ProjectList />\r\n        </Col>\r\n        <Col lg=\"4\">\r\n          <TaskList title=\"Recent Tasks\" type=\"recent\" />\r\n          <AdditionalTask />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard2;\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TopCardsData = ({ bg, icon, title, subtitle, loading }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"d-flex align-items-center\">\r\n          <span className={`circle-box md-box text-dark-white bg-${bg}`}>\r\n            <i className={`fs-2 bi bi-${icon}`} />\r\n          </span>\r\n          <div className=\"ms-3\">\r\n            <h2 className=\"mb-1 fw-normal\">{loading ? '...' : title}</h2>\r\n            <CardSubtitle className=\"fs-6 text-muted\">{subtitle}</CardSubtitle>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TopCardsData;\r\n\r\nTopCardsData.propTypes = {\r\n  bg: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  title: PropTypes.number,\r\n  subtitle: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n};\r\n","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardSubtitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardSubtitle.propTypes = propTypes;\nexport default CardSubtitle;"],"names":["_ref","data","color","_jsx","className","children","_jsxs","viewBox","concat","d","strokeDasharray","x","y","style","fontSize","date","Date","getDate","getMonth","getFullYear","val","today","toFixed","ProjectList","_auth$user3","_auth$user3$roles","_auth$user4","auth","useAuth","divisions","setDivisions","useState","list","setList","selectedDivision","setSelectedDivision","progressList","setProgressList","api","useAxios","isLoading","error","useQuery","queryKey","queryFn","_auth$user","get","user","roles","includes","employe_id","then","res","_auth$user2","_auth$user2$roles","filtered","filter","item","total_progress","reverse","useEffect","division","toString","_projectIds","projectIds","ids","idx","length","push","project_id","async","post","catch","err","console","log","fethProgress","progressValue","id","_result$","_result$2","_result$2$progress","result","row","progress","Row","Col","lg","Card","CardBody","minHeight","sm","md","CardTitle","tag","Input","type","bsSize","onChange","e","target","value","map","organization_id","organization_name","Link","to","textDecoration","Button","size","outline","block","_Fragment","p","i","_p$current_stage","_p$current_stage2","marginLeft","title","project_name","trim","substring","content","marginBottom","isExpired","current_stage","end_date","IndoDate","textTransform","category","CircularPercentage","parseInt","src","user1","alt","width","height","TopCards","TopCardsData","bg","icon","total_project","subtitle","loading","total_task","total_inprogress","total_done","taskIdSelected","setTaskIdSelected","task","setTask","undefined","addingFavorite","setAddingFavorite","modal","setModal","refetch","t","_t$task_title","_t$task_title2","_t$task_title3","border","onClick","openPopup","selectedTask","task_title","status","task_progress","task_id","Spinner","taskId","alert","message","handleFavorite","MaterialIcon","TaskPopup","toggle","mode","Director","TaskList","AdditionalTask","Dashboard2","CardSubtitle","_excluded","_extends","Object","assign","bind","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","cssModule","tagPropType","props","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","React"],"sourceRoot":""}